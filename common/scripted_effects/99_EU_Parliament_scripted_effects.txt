######################
######################
### EU Parliament ####
######################
######################
clear_EU_Parliament_MEP_THIS = {
	### clear MEP vars
	for_each_loop = {
		array = global.EU_parl_party_number
		set_variable = { MEP_number = global.EU_parl_party_number^i }

		meta_effect = {
			text = {
				clear_variable = THIS.MEP_party_[MEP_n]
			}
			MEP_n = "[?MEP_number]"
		}
	}
	update_eu_dirty_variable = yes
}

clear_EU_Parliament = {
	### EU Parliament global flags
	for_each_loop = {
		array = global.EU_parl_party_number
		set_variable = { PG_party_number = global.EU_parl_party_number^i }

		meta_effect = {
			text = {
				clr_global_flag = EU_parl_PG_party_[PG_p_n]
			}
			PG_p_n = "[?PG_party_number]"
		}
	}
	### EU Parliament global vars
	for_each_loop = {
		array = global.EU_parl_party_number
		set_variable = { MEP_PG_number = global.EU_parl_party_number^i }

		meta_effect = {
			text = {
				clear_variable = global.MEP_PG_party_[MEP_PG_n]
			}
			MEP_PG_n = "[?MEP_PG_number]"
		}
	}
	#
	for_each_loop = {
		array = global.EU_parl_party_number
		set_variable = { MEP_Ratio_number = global.EU_parl_party_number^i }

		meta_effect = {
			text = {
				clear_variable = global.MEP_Ratio_PG_party_[MEP_Ratio_n]
			}
			MEP_Ratio_n = "[?MEP_Ratio_number]"
		}
	}
	#
	for_each_loop = {
		array = global.EU_parl_party_number
		set_variable = { PI_PG_number = global.EU_parl_party_number^i }

		meta_effect = {
			text = {
				clear_variable = global.PI_PG_party_[PI_PG_n]
			}
			PI_PG_n = "[?PI_PG_number]"
		}
	}

	for_each_scope_loop = {
		array = global.EU_potential
		clear_EU_Parliament_MEP_THIS = yes
	}

	clear_variable = global.MEP_Total
	clear_variable = global.MEP_Majority
	update_eu_dirty_variable = yes
}

election_EU_Parliament = {
	### calculate MEP per member state
	set_temp_variable = { temp1 = 0 }
	for_each_scope_loop = {
		array = global.EU_member
		add_to_temp_variable = { temp1 = 1 }
	}
	multiply_temp_variable = { temp1 = 6 }
	set_temp_variable = { temp2 = 750 }
	subtract_from_temp_variable = { temp2 = temp1 }
	set_variable = { global.EU_Parliament_per_EUpopRatio = temp2 }
	### Election in member_state
	for_each_scope_loop = {
		array = global.EU_member
		election_EU_Parliament_in_member_state = yes
	}

	set_variable = { global.MEP_Majority = global.MEP_Total }
	divide_variable = { global.MEP_Majority = 2 }
	add_to_variable = { global.MEP_Majority = 1 }

	### check political groups
	for_each_loop = {
		array = global.EU_parl_party_number
		set_variable = { p_number = global.EU_parl_party_number^i }

		meta_effect = {
			text = {
				set_global_flag = EU_parl_PG_party_[p_n]
				set_variable = { global.MEP_Ratio_PG_party_[p_n] = global.MEP_PG_party_[p_n] }
				divide_variable = { global.MEP_Ratio_PG_party_[p_n] = global.MEP_Total }
				add_to_array = { global.MEP_PG_array^[p_n] = global.MEP_PG_party_[p_n] }
				set_variable = { global.PI_PG_party_[p_n] = global.MEP_PG_party_[p_n] }
			}
			p_n = "[?p_number]"
		}
	}
	
}

election_EU_Parliament_in_member_state = {
	###  MEP for this member state
	set_temp_variable = { temp1 = global.EU_Parliament_per_EUpopRatio }
	multiply_temp_variable = { temp1 = THIS.var_EUpopRatio }
	add_to_temp_variable = { temp1 = 6 }
	round_temp_variable = temp1
	set_variable = { THIS.MEP_Total = temp1 }
	### MEP per subideology
	#Western_Autocracy
	for_each_loop = {
		array = global.EU_parl_party_number
		set_variable = { p_number2 = global.EU_parl_party_number^i }

		meta_effect = {
			text = {
				set_variable = { THIS.MEP_party_[p_n2] = party_pop_array^[p_n2] }
				multiply_variable = { THIS.MEP_party_[p_n2] = THIS.MEP_Total }
				round_variable = THIS.MEP_party_[p_n2]
				add_to_variable = { global.MEP_PG_party_[p_n2] = THIS.MEP_party_[p_n2] }
				add_to_variable = { global.MEP_Total = THIS.MEP_party_[p_n2] }
			}
			p_n2 = "[?p_number2]"
		}
	}
	
	update_eu_dirty_variable = yes
}

#################################
### EU Parliament legislation ###
#################################
set_ruling_party_PG_support = {
	log = "[GetDateText]: [THIS.GetName]: set_ruling_party_PG_support"
	set_temp_variable = { indexed_addition = 0 }

	for_each_loop = {
		array = global.EU_parl_party_number
		set_variable = { rp_PG_number = global.EU_parl_party_number^i }

		meta_effect = {
			text = {
				if = { limit = { is_in_array = { ruling_party = [rp_PG_n] } }
					set_global_flag = PG_party_[rp_PG_n]_support
					set_temp_variable = { indexed_addition = global.MEP_PG_party_[rp_PG_n] }
				}
			}
			rp_PG_n = "[?rp_PG_number]"
		}
	}

	set_variable = { global.active_MEP_Support = indexed_addition }
	meta_effect = {
		text = {
			set_variable = { global.focus_[EUXXX]_MEP_support = indexed_addition }
		}
		EUXXX = "[EUXXX_EP_agenda]"
	}
	update_eu_dirty_variable = yes
}

####################################
### clr_global_flag_PG_X_support ###
####################################

clr_global_flag_PG_X_support = {
	for_each_loop = {
		array = global.EU_parl_party_number
		set_variable = { PG_ps_number = global.EU_parl_party_number^i }

		meta_effect = {
			text = {
				clr_global_flag = PG_party_[PG_ps_n]_support
			}
			PG_ps_n = "[?PG_ps_number]"
		}
	}
	update_eu_dirty_variable = yes
}
