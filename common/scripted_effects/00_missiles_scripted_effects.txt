#################################
### missiles scripted effects ###
#################################
#
# ### missile trajectory arrays ###
# missile_launch_point_array
# missile_target_point_array
# missile_type_array
# missile_tech_array
# missile_warhead_array
# missile_salvo_array
# missile_duration_array
#
##################################


set_landbased_missile_defense_cap = {
	meta_effect = {
		text = {
			### boost phase defense ###
			every_controlled_state = {
				limit = {
					anti_air_building > 0
					[launch_point_ID] = {
						distance_to = {
							value < [SAM_range]
							target = PREV
						}
					}
				}
				set_temp_variable = { temp1 = 0 }	
				add_to_temp_variable = { temp1 = building_level@anti_air_building }
				multiply_temp_variable = { temp1 = PREV.var_SAM_launcher_tech }
				add_to_variable = { ROOT.var_intercept_capacity_boost = temp1 }
			}
			### midcourse phase defense ###
			every_controlled_state = {
				limit = {
					missile_defense_station > 0
					[launch_point_ID] = {
						distance_to = {
							value < [ABM_range]
							target = PREV
						}
					}	
				}
				set_temp_variable = { temp1 = 0 }	
				add_to_temp_variable = { temp1 = building_level@missile_defense_station }
				multiply_temp_variable = { temp1 = PREV.var_ABM_launcher_tech }
				add_to_variable = { ROOT.var_intercept_capacity_midcourse = temp1 }
				set_state_flag = defend_land_launch_point
			}
			every_controlled_state = {
				limit = {
					missile_defense_station > 0
					NOT = {
						has_state_flag = defend_land_launch_point
					}
					[target_point_ID] = {
						distance_to = {
							value < [ABM_range]
							target = PREV
						}
					}	
				}
				set_temp_variable = { temp1 = 0 }	
				add_to_temp_variable = { temp1 = building_level@missile_defense_station }
				multiply_temp_variable = { temp1 = PREV.var_ABM_launcher_tech }
				add_to_variable = { ROOT.var_intercept_capacity_midcourse = temp1 }
			}
			every_controlled_state = {
				clr_state_flag = defend_land_launch_point
			}
			### terminal phase defense ###
			every_controlled_state = {
				limit = {
					anti_air_building > 0
					[target_point_ID] = {
						distance_to = {
							value < [SAM_range]
							target = PREV
						}
					}	
				}
				set_temp_variable = { temp1 = 0 }	
				add_to_temp_variable = { temp1 = building_level@anti_air_building }
				multiply_temp_variable = { temp1 = PREV.var_SAM_launcher_tech }
				add_to_variable = { ROOT.var_intercept_capacity_terminal = temp1 }
			}
		}
		launch_point_ID = "[?missile_launch_point_array^i.GetID]" # "[?var_launch_point_ID.GetID]"
		target_point_ID = "[?missile_target_point_array^i.GetID]" # "[?var_target_point_ID.GetID]"
		SAM_range = "[?var_SAM_range]"
		ABM_range = "[?var_ABM_range]"
	}
}

set_seabased_missile_defense_cap = {
	meta_effect = {
		text = {
			if = {
			 	limit = {
			 		[launch_point_ID] = {
						has_state_flag = sea_launch_point
			 		}
				}
				set_variable = { var_ship_number_AA = 9 }
				while_loop_effect = {
					break = temp3
					limit = {
						check_variable = { var_ship_number_AA > 1 }
					}
					if = {
						limit = {
							THIS = { sea_launch_point_defense_[launch_point_ID] = yes }
						}
						set_temp_variable = { temp1 = 0 }
						set_temp_variable = { temp2 = 0 }
						### boost ###
						add_to_temp_variable = { temp1 = var_ship_number_AA } # num of ships
						add_to_temp_variable = { temp1 = 1 }
						multiply_temp_variable = { temp1 = var_ship_SAM_launcher_tech }
						add_to_variable = { PREV.var_intercept_capacity_boost = temp1 }
						### midcourse ###
						add_to_temp_variable = { temp2 = var_ship_number_AA } # num of ships
						add_to_temp_variable = { temp2 = 1 }
	 					multiply_temp_variable = { temp2 = var_ship_ABM_launcher_tech }
						add_to_variable = { PREV.var_intercept_capacity_midcourse = temp2 }
						###
						set_temp_variable = { temp3 = 1 }
						log = "set_seabased_missile_defense_cap launch_point [launch_point_ID]"
					}
					else = {
						add_to_variable = { PREV.var_intercept_capacity_boost = 0 }
						add_to_variable = { PREV.var_intercept_capacity_midcourse = 0 }
						log = "set_seabased_missile_defense_cap launch_point no ships"
					}
					subtract_from_variable = { var_ship_number_AA = 1 }
					log = "set_seabased_missile_defense_cap launch_point var_ship_number_AA [?var_ship_number_AA]"
				}
			}
			else = {
				add_to_variable = { PREV.var_intercept_capacity_boost = 0 }
				add_to_variable = { PREV.var_intercept_capacity_midcourse = 0 }
				log = "set_seabased_missile_defense_cap launch_point no sea_launch_point"
			}
			if = {
				limit = {
					[target_point_ID] = {
						has_state_flag = sea_launch_point
					}
				}
				set_variable = { var_ship_number_AA = 9 }
				while_loop_effect = {
					break = temp3
					limit = {
						check_variable = { var_ship_number_AA > 1 }
					}
					if = {
						limit = {
							THIS = { sea_launch_point_defense_[target_point_ID] = yes }
						}
						set_temp_variable = { temp1 = 0 }
						set_temp_variable = { temp2 = 0 }
						### midcourse ###
						add_to_temp_variable = { temp2 = var_ship_number_AA } # num of ships
						add_to_temp_variable = { temp2 = 1 }
	 					multiply_temp_variable = { temp2 = var_ship_ABM_launcher_tech }
						add_to_variable = { PREV.var_intercept_capacity_midcourse = temp2 }
						### terminal ###
						add_to_temp_variable = { temp1 = var_ship_number_AA } # num of ships
						add_to_temp_variable = { temp1 = 1 }
						multiply_temp_variable = { temp1 = var_ship_SAM_launcher_tech }
						add_to_variable = { PREV.var_intercept_capacity_terminal = temp1 }
						###
						set_temp_variable = { temp3 = 1 }
						log = "set_seabased_missile_defense_cap target_point"
					}
					else = {
						add_to_variable = { PREV.var_intercept_capacity_midcourse = 0 }
						add_to_variable = { PREV.var_intercept_capacity_terminal = 0 }
						log = "set_seabased_missile_defense_cap target_point no ships"
					}
					subtract_from_variable = { var_ship_number_AA = 1 }
					log = "set_seabased_missile_defense_cap target_point var_ship_number_AA [?var_ship_number_AA]"
				}
			}
			else = {
				add_to_variable = { PREV.var_intercept_capacity_midcourse = 0 }
				add_to_variable = { PREV.var_intercept_capacity_terminal = 0 }
				log = "set_seabased_missile_defense_cap target_point no sea_launch_point"
			}
			clear_variable = var_ship_number_AA
		}
		launch_point_ID = "[?PREV.missile_launch_point_array^i.GetID]" # "[?var_launch_point_ID.GetID]"
		target_point_ID = "[?PREV.missile_target_point_array^i.GetID]" # "[?var_target_point_ID.GetID]"
	}
}


### boost phase vs defense ###
boost_phase_defense = {
	set_temp_variable = { temp1 = var_salvo }
	while_loop_effect = {
		limit = {
			check_variable = { temp1 > 0 }
		}
		randomize_variable = {  
			var = var_missile_trajectory
			distribution = uniform
			min = 0
			max = 1
		}
		subtract_from_temp_variable = { temp1 = 1 }	
		if = {
			limit = {						
				check_variable = { var_intercept_capacity_boost > 0 }
				check_variable = { PREV.var_deployed_SAM_total > 0 }
			}	
			subtract_from_variable = { var_intercept_capacity_boost = 1 }
			subtract_from_variable = { PREV.var_deployed_SAM_total = 1 }
			add_to_variable = { SAM_consumption = 1 }
			if = {
				limit = {	
					check_variable = { var_missile_trajectory < var_intercept_chance_boost }
				}					
				add_to_variable = { var_missile_interception_boost = 1 }
			}
			else = {
				add_to_variable = { var_missile_boost_completed = 1 }
			}
		}	
		else = {
			add_to_variable = { var_missile_boost_completed = 1 }
		}
	}
	add_to_array = { array = missile_boost_completed_stat_array value = var_missile_boost_completed index = i }
	add_to_array = { array = missile_interception_boost_stat_array value = var_missile_interception_boost index = i }
}

### midcourse phase vs defense ###
midcourse_phase_defense = {
	set_temp_variable = { temp2 = var_missile_boost_completed }
	while_loop_effect = {
		limit = {
			check_variable = { temp2 > 0 }
		}
		randomize_variable = {  
			var = var_missile_trajectory
			distribution = uniform
			min = 0
			max = 1
		}
		subtract_from_temp_variable = { temp2 = 1 }	
		if = {
			limit = {						
				check_variable = { var_intercept_capacity_midcourse > 0 }
				check_variable = { PREV.var_deployed_ABM_total > 0 }
			}	
			subtract_from_variable = { var_intercept_capacity_midcourse = 1 }
			subtract_from_variable = { PREV.var_deployed_ABM_total = 1 }
			add_to_variable = { ABM_consumption = 1 }
			if = {
				limit = {	
					check_variable = { var_missile_trajectory < var_intercept_chance_midcourse }
				}					
				add_to_variable = { var_missile_interception_midcourse = 1 }
			}
			else = {
				add_to_variable = { var_missile_midcourse_completed = 1 }
			}
		}	
		else = {
			add_to_variable = { var_missile_midcourse_completed = 1 }
		}
	}
	add_to_array = { array = missile_midcourse_completed_stat_array value = var_missile_midcourse_completed index = i }
	add_to_array = { array = missile_interception_midcourse_stat_array value = var_missile_interception_midcourse index = i }
}

### terminal phase vs defense ###
terminal_phase_defense = {
	set_temp_variable = { temp3 = var_missile_midcourse_completed }
	multiply_temp_variable = { temp3 = var_MIRV }
	set_temp_variable = { temp4 = var_missile_midcourse_completed }
	multiply_temp_variable = { temp4 = var_decoy }
	if = {
		limit = {
			OR = {
				check_variable = { temp4 > var_intercept_capacity_terminal }
				check_variable = { temp4 > PREV.var_deployed_SAM_total }
			}
		}
		if = {
			limit = {
				check_variable = { PREV.var_deployed_SAM_total > var_intercept_capacity_terminal }
			}
			subtract_from_variable = { PREV.var_deployed_SAM_total = var_intercept_capacity_terminal }
			add_to_variable = { SAM_consumption = var_intercept_capacity_terminal }
		}
		else = {
			add_to_variable = { SAM_consumption = PREV.var_deployed_SAM_total }
			set_variable = { PREV.var_deployed_SAM_total = 0 }
		}
		set_variable = { var_intercept_capacity_terminal = 0 }
	}
	else = {
		subtract_from_variable = { var_intercept_capacity_terminal = temp4 }
		subtract_from_variable = { PREV.var_deployed_SAM_total = temp4 }
		add_to_variable = { SAM_consumption = temp4 }
	}
	while_loop_effect = {
		limit = {
			check_variable = { temp3 > 0 }
		}
		randomize_variable = {
			var = var_missile_trajectory
			distribution = uniform
			min = 0
			max = 1
		}
		subtract_from_temp_variable = { temp3 = 1 }
		if = {
			limit = {
				check_variable = { var_intercept_capacity_terminal > 0 }
				check_variable = { PREV.var_deployed_SAM_total > 0 }
			}
			subtract_from_variable = { var_intercept_capacity_terminal = 1 }
			subtract_from_variable = { PREV.var_deployed_SAM_total = 1 }
			add_to_variable = { SAM_consumption = 1 }
			if = {
				limit = {
					check_variable = { var_missile_trajectory < var_intercept_chance_terminal }
				}
				add_to_variable = { var_missile_interception_terminal = 1 }
			}
			else = {
				add_to_variable = { var_missile_trajectory = var_accuracy }
				if = {
					limit = { check_variable = { var_missile_trajectory > 1 } }
					add_to_variable = { var_missile_target_hit = 1 }
				}
				else = {
					add_to_variable = { var_missile_target_miss = 1 }
				}
			}
		}
		else = {
			add_to_variable = { var_missile_trajectory = var_accuracy }
			if = {
				limit = { check_variable = { var_missile_trajectory > 1 } }
				add_to_variable = { var_missile_target_hit = 1 }
			}
			else = {
				add_to_variable = { var_missile_target_miss = 1 }
			}
		}
	}
	add_to_array = { array = missile_interception_terminal_stat_array value = var_missile_interception_terminal index = i }
	add_to_array = { array = missile_target_miss_stat_array value = var_missile_target_miss index = i }
	add_to_array = { array = missile_target_hit_stat_array value = var_missile_target_hit index = i }
	#
	clear_variable = var_missile_boost_completed
	clear_variable = var_missile_interception_boost
	#
	clear_variable = var_missile_midcourse_completed
	clear_variable = var_missile_interception_midcourse
	#
	clear_variable = var_missile_interception_terminal
	clear_variable = var_missile_target_miss
	clear_variable = var_missile_target_hit
}


#################################################
### effects for gui / buttons / trigger / loc ###
#################################################

### production gui ###

calculate_production_vars = {
	#price
	set_variable = { var_gui_prod_price_total = var_gui_prod_price_unit }
	multiply_variable = { var_gui_prod_price_total = var_gui_prod_amount }
	#days
	set_variable = { var_gui_prod_CIC_total = var_gui_prod_CIC_unit }
	multiply_variable = { var_gui_prod_CIC_total = var_gui_prod_amount }
	set_variable = { var_gui_prod_CIC_days = var_gui_prod_CIC_total }
	multiply_variable = { var_gui_prod_CIC_days = var_gui_prod_days_unit }
	divide_variable = { var_gui_prod_CIC_days = var_gui_prod_CIC_use }
	round_variable = var_gui_prod_CIC_days
}


### launch gui ###

set_missile_model_gui = {
	meta_effect = {
		text = {
			set_missile_model_[missile_type] = yes
		}
		missile_type = "[?missile_type_tech_array^i]"
	}
}


set_missile_model = {
	meta_effect = {
		text = {
			set_missile_model_[missile_type] = yes
		}
		missile_type = "[?missile_type_array^i]"
	}
}

set_warhead_gui = {
	meta_effect = {
		text = {
			set_warhead_tech_[warhead] = yes
		}
		warhead = "[?warhead_tech_array^i]"
	}
}

set_warhead = {
	meta_effect = {
		text = {
			set_warhead_[warhead] = yes
		}
		warhead = "[?missile_warhead_array^i]"
	}
}

set_launch_button_number_vars = {
	if = {
		limit = {
			OR = {
				has_selected_SLCM = yes
				has_selected_HSCM = yes
			}
		}
		set_ship_number_LAM = yes
	}
	if = {
		limit = {
			OR = {
				has_selected_SLBM = yes
				has_selected_SLCM = yes
				has_selected_HSCM = yes
			}
		}
		set_sub_number_LAM = yes
	}
	if = {
		limit = {
			OR = {
				has_selected_ALCM = yes
				has_selected_HSCM = yes
			}
		}
		set_bomber_number_ALCM = yes
		set_STK_number_ALCM = yes
		set_MR_number_ALCM = yes
		set_MR_CV_number_ALCM = yes
		set_variable = { var_CV_number_LAM = 0 }
	}
}



set_ship_number_LAM = {
	###
	#log = "set_ship_number_LAM start var_ship_number_LAM = [?var_ship_number_LAM] var_gui_salvo = [?var_gui_salvo]"
	###
	if = {
		limit = {
	 		check_variable = { var_ship_VLS_launcher > var_ship_launcher }
		}
		set_variable = { var_ship_number_LAM = 0 }
		set_variable = { var_ship_number_LAM_loc = 0 }
		set_temp_variable = { temp1_ship_number_LAM = 0 }
		while_loop_effect = {
			limit = {
				check_variable = { var_gui_salvo > temp1_ship_number_LAM }
			}
			add_to_variable = { var_ship_number_LAM = 1 }
			add_to_variable = { var_ship_number_LAM_loc = 1 }
			set_temp_variable = { temp1_ship_number_LAM = var_ship_number_LAM }
			multiply_temp_variable = { temp1_ship_number_LAM = var_ship_VLS_launcher }
		}
		subtract_from_variable = { var_ship_number_LAM = 1 }
	}
	else = {
		set_variable = { var_ship_number_LAM = 0 }
		set_variable = { var_ship_number_LAM_loc = 0 }
		set_temp_variable = { temp1_ship_number_LAM = 0 }
		while_loop_effect = {
			limit = {
				check_variable = { var_gui_salvo > temp1_ship_number_LAM }
			}
			add_to_variable = { var_ship_number_LAM = 1 }
			add_to_variable = { var_ship_number_LAM_loc = 1 }
			set_temp_variable = { temp1_ship_number_LAM = var_ship_number_LAM }
			multiply_temp_variable = { temp1_ship_number_LAM = var_ship_launcher }
		}
		subtract_from_variable = { var_ship_number_LAM = 1 }
	}
	###
	#log = "set_ship_number_LAM stop var_ship_number_LAM = [?var_ship_number_LAM] var_gui_salvo = [?var_gui_salvo]"
	###
}

set_sub_number_LAM = {
	###
	log = "var_sub_number_LAM start var_sub_number_LAM = [?var_sub_number_LAM] var_gui_salvo = [?var_gui_salvo]"
	###
	set_variable = { var_sub_number_LAM = 0 }
	set_variable = { var_sub_number_LAM_loc = 0 }
	set_temp_variable = { temp1_sub_number_LAM = 0 }
	while_loop_effect = {
		limit = {
			check_variable = { var_gui_salvo > temp1_sub_number_LAM }
		}
		add_to_variable = { var_sub_number_LAM = 1 }
		add_to_variable = { var_sub_number_LAM_loc = 1 }
		set_temp_variable = { temp1_sub_number_LAM = var_sub_number_LAM }
		multiply_temp_variable = { temp1_sub_number_LAM = var_sub_launcher }
	}
	subtract_from_variable = { var_sub_number_LAM = 1 }
	###
	log = "var_sub_number_LAM stop var_sub_number_LAM = [?var_sub_number_LAM] var_gui_salvo = [?var_gui_salvo] var_sub_launcher = [?var_sub_launcher]"
	###
}

set_bomber_number_ALCM = {
	set_variable = { var_bomber_number_ALCM = 0 }
	set_temp_variable = { temp1_bomber_number_ALCM = 0 }
	while_loop_effect = {
		limit = {
			check_variable = { var_gui_salvo > temp1_bomber_number_ALCM }
		}
		add_to_variable = { var_bomber_number_ALCM = 1 }
		set_temp_variable = { temp1_bomber_number_ALCM = var_bomber_number_ALCM }
		multiply_temp_variable = { temp1_bomber_number_ALCM = var_bomber_launcher }
	}
	set_variable = { var_bomber_number_ALCM_loc = var_bomber_number_ALCM }
	if = {
		limit = {
			check_variable = { var_bomber_number_ALCM > 0 }
		}
		subtract_from_variable = { var_bomber_number_ALCM = 1 }
	}
}

set_STK_number_ALCM = {
	set_variable = { var_STK_number_ALCM = 0 }
	set_temp_variable = { temp1_STK_number_ALCM = 0 }
	while_loop_effect = {
		limit = {
			check_variable = { var_gui_salvo > temp1_STK_number_ALCM }
		}
		add_to_variable = { var_STK_number_ALCM = 1 }
		set_temp_variable = { temp1_STK_number_ALCM = var_STK_number_ALCM }
		multiply_temp_variable = { temp1_STK_number_ALCM = var_STK_launcher }
	}
	set_variable = { var_STK_number_ALCM_loc = var_STK_number_ALCM }
	if = {
		limit = {
			check_variable = { var_STK_number_ALCM > 0 }
		}
		subtract_from_variable = { var_STK_number_ALCM = 1 }
	}
}

set_MR_number_ALCM = {
	set_variable = { var_MR_number_ALCM = 0 }
	set_temp_variable = { temp1_MR_number_ALCM = 0 }
	while_loop_effect = {
		limit = {
			check_variable = { var_gui_salvo > temp1_MR_number_ALCM }
		}
		add_to_variable = { var_MR_number_ALCM = 1 }
		set_temp_variable = { temp1_MR_number_ALCM = var_MR_number_ALCM }
		multiply_temp_variable = { temp1_MR_number_ALCM = var_MR_launcher }
	}
	set_variable = { var_MR_number_ALCM_loc = var_MR_number_ALCM }
	if = {
		limit = {
			check_variable = { var_MR_number_ALCM > 0 }
		}
		subtract_from_variable = { var_MR_number_ALCM = 1 }
	}
}

set_MR_CV_number_ALCM = {
	set_variable = { var_MR_CV_number_ALCM = 0 }
	set_temp_variable = { temp1_MR_CV_number_ALCM = 0 }
	while_loop_effect = {
		limit = {
			check_variable = { var_gui_salvo > temp1_MR_CV_number_ALCM }
		}
		add_to_variable = { var_MR_CV_number_ALCM = 1 }
		set_temp_variable = { temp1_MR_CV_number_ALCM = var_MR_CV_number_ALCM }
		multiply_temp_variable = { temp1_MR_CV_number_ALCM = var_MR_CV_launcher }
	}
	set_variable = { var_MR_CV_number_ALCM_loc = var_MR_CV_number_ALCM }
	if = {
		limit = {
			check_variable = { var_MR_CV_number_ALCM > 0 }
		}
		subtract_from_variable = { var_MR_CV_number_ALCM = 1 }
	}
}

clear_launch_button_loc_vars = {
	ROOT = {
		clear_variable = var_ship_number_LAM_loc
		clear_variable = var_sub_number_LAM_loc
		clear_variable = var_bomber_number_ALCM_loc
		clear_variable = var_STK_number_ALCM_loc
		clear_variable = var_MR_number_ALCM_loc
		clear_variable = var_MR_CV_number_ALCM_loc
	}
}

clear_launch_button_number_vars = {
	ROOT = {
		clear_variable = var_ship_number_LAM
		clear_variable = var_sub_number_LAM
		clear_variable = var_bomber_number_ALCM
		clear_variable = var_STK_number_ALCM
		clear_variable = var_MR_number_ALCM
		clear_variable = var_MR_CV_number_ALCM
		clear_variable = var_CV_number_LAM
		#launcher
		clear_variable = var_silo_launcher
		clear_variable = var_TEL_launcher
		clear_variable = var_sub_launcher
		clear_variable = var_bomber_launcher
		clear_variable = var_MR_launcher
		clear_variable = var_MR_CV_launcher
		clear_variable = var_STK_launcher
		clear_variable = var_ship_launcher
		clear_variable = var_ship_VLS_launcher
	}
}

### testing bugfixing ###
clear_gui_salvo_duration_vars = {
	ROOT = {
		clear_variable = var_gui_salvo
		clear_variable = var_gui_duration
		clear_variable = var_total_firing
	}
}


### add new buildings here
set_warhead_targets = {
	log = "log set_warhead_targets [?var_missile_trajectory_ID]"
	#if = {
	#	limit = {
	#		NOT = { has_country_flag = warhead_targets@var_missile_trajectory_ID }
	#	}
	#	set_country_flag = warhead_targets@var_missile_trajectory_ID
		add_to_array = { array = target_building_1_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_2_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_3_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_4_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_5_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_6_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_7_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_8_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_9_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_10_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_11_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_12_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_13_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_14_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_15_array value = 1 index = var_missile_trajectory_ID }
		add_to_array = { array = target_building_16_array value = 1 index = var_missile_trajectory_ID }
	#}
}

### add new buildings here
set_missile_damage_stats = {
	add_to_array = { array = damage_building_1_stat_array value = var_damage_building_1 index = i }
	add_to_array = { array = damage_building_2_stat_array value = var_damage_building_2 index = i }
	add_to_array = { array = damage_building_3_stat_array value = var_damage_building_3 index = i }
	add_to_array = { array = damage_building_4_stat_array value = var_damage_building_4 index = i }
	add_to_array = { array = damage_building_5_stat_array value = var_damage_building_5 index = i }
	add_to_array = { array = damage_building_6_stat_array value = var_damage_building_6 index = i }
	add_to_array = { array = damage_building_7_stat_array value = var_damage_building_7 index = i }
	add_to_array = { array = damage_building_8_stat_array value = var_damage_building_8 index = i }
	add_to_array = { array = damage_building_9_stat_array value = var_damage_building_9 index = i }
	add_to_array = { array = damage_building_10_stat_array value = var_damage_building_10 index = i }
	add_to_array = { array = damage_building_11_stat_array value = var_damage_building_11 index = i }
	add_to_array = { array = damage_building_12_stat_array value = var_damage_building_12 index = i }
	add_to_array = { array = damage_building_13_stat_array value = var_damage_building_13 index = i }
	add_to_array = { array = damage_building_14_stat_array value = var_damage_building_14 index = i }
	add_to_array = { array = damage_building_15_stat_array value = var_damage_building_15 index = i }
	add_to_array = { array = damage_building_16_stat_array value = var_damage_building_16 index = i }
}


set_missile_damage = {
	set_temp_variable = { temp1 = missile_target_hit_stat_array^i } # var_missile_target_hit 
	while_loop_effect = {
		limit = {
			check_variable = { temp1 > 0 }
		}
		subtract_from_temp_variable = { temp1 = 1 }
		set_temp_variable = { temp2 = var_warhead_damage }
		### add new buildings here
		random_list = {
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@industrial_complex > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = industrial_complex
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_1 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_1_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@arms_factory > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = arms_factory
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_2 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_2_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@infrastructure > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = infrastructure
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_3 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_3_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@dockyard > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = dockyard
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_4 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_4_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@air_base > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = air_base
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_5 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_5_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@naval_base > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = naval_base
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_6 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_6_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@bunker > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = bunker
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_7 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_7_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@coastal_bunker > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = coastal_bunker
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_8 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_8_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@anti_air_building > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = anti_air_building
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_9 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_9_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@synthetic_refinery > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = synthetic_refinery
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_10 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_10_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@internet_station > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = internet_station
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_11 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_11_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@missile_silo > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = missile_silo
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_12 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_12_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@nuclear_reactor > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = nuclear_reactor
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_13 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_13_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@fuel_silo > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = fuel_silo
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_14 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_14_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@radar_station > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = radar_station
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_15 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_15_array^i = 1 } }
				}
			}
			1 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							if = {
								limit = {
									check_variable = { [target_point_ID].non_damaged_building_level@missile_defense_station > 0 }
								}
								[target_point_ID] = {
									damage_building = {
										type = missile_defense_station
										damage = 1
									}
								}
								add_to_variable = { var_damage_building_16 = 1 }
							}
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
				modifier = {
					factor = 0
					NOT = { check_variable = { target_building_16_array^i = 1 } }
				}
			}
		}
	}
	set_missile_damage_stats = yes
	clear_variable = var_damage_building_1
	clear_variable = var_damage_building_2
	clear_variable = var_damage_building_3
	clear_variable = var_damage_building_4
	clear_variable = var_damage_building_5
	clear_variable = var_damage_building_6
	clear_variable = var_damage_building_7
	clear_variable = var_damage_building_8
	clear_variable = var_damage_building_9
	clear_variable = var_damage_building_10
	clear_variable = var_damage_building_11
	clear_variable = var_damage_building_12
	clear_variable = var_damage_building_13
	clear_variable = var_damage_building_14
	clear_variable = var_damage_building_15
	clear_variable = var_damage_building_16
}

set_missile_warhead_effects = {
	meta_effect = {
		text = {
			set_temp_variable = { temp1 = missile_target_hit_stat_array^i } # var_missile_target_hit 
			while_loop_effect = {
				limit = {
					check_variable = { temp1 > 0 }
				}
				subtract_from_temp_variable = { temp1 = 1 }
				if = {
					limit = {
						check_variable = { missile_warhead_array^i = 2 }
					}
					launch_nuke = {
						state = [target_point_ID]
						controller = [target_TAG]
					}
				}
			}
		}
		target_point_ID = "[?missile_target_point_array^i.GetID]"
		target_TAG = "[?missile_target_controller_array.GetID]"
	}
}

###########################
### for on daily effect ###
###########################

missile_on_daily = {
	for_each_loop = {
		array = missile_target_point_array
		if = {
			limit = {
				check_variable = { missile_duration_array^i > 0 }
			}

			log = "[GetDateText]: [Root.GetName]: missile_on_daily: Missile Target: [?missile_target_point_array^i.GetName] ID = [?missile_target_point_array^i.GetID]"
			set_variable = { var_salvo = missile_salvo_array^i }

			var:ROOT.missile_target_controller_array^i = {

				set_variable = { ROOT.var_intercept_capacity_boost = 0 }
				set_variable = { ROOT.var_intercept_capacity_midcourse = 0 }
				set_variable = { ROOT.var_intercept_capacity_terminal = 0 }

				set_landbased_missile_defense_cap = yes
				set_seabased_missile_defense_cap = yes

				### to modify intercept chance create a scripted effect
				set_variable = { ROOT.var_intercept_chance_boost = var_SAM_intercept_chance }
				set_variable = { ROOT.var_intercept_chance_midcourse = var_ABM_intercept_chance }
				set_variable = { ROOT.var_intercept_chance_terminal = var_SAM_intercept_chance }
			}

			set_missile_model = yes
			set_warhead = yes

			meta_effect = {
				text = {
					subtract_from_variable = { var_inventory_[missile_type]_[missile_tech] = var_salvo }
				}
				missile_type = "[?missile_type_array^i]"
				missile_tech = "[?missile_tech_array^i]"
			}
			subtract_from_variable = { missile_duration_array^i = 1 }

			var:ROOT.missile_target_controller_array^i = {
				ROOT = {
					### boost phase vs defense ###
					boost_phase_defense = yes
					### midcourse phase vs defense ###
					midcourse_phase_defense = yes
					### terminal phase vs defense ###
					terminal_phase_defense = yes
				}
			}
			add_to_array = { array = SAM_consumption_array value = SAM_consumption index = i }
			add_to_array = { array = ABM_consumption_array value = ABM_consumption index = i }

			set_missile_damage = yes
			set_missile_warhead_effects = yes
		}
	}
}