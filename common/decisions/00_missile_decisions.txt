00_missile_decisions = {


	missile_trigger_test_new = {
		icon = GFX_decision_generic_ignite_civil_war
		available = {
			sea_launch_point_37 = yes
		}
		visible = {
			#has_country_flag = invisible
		}


		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision missile_test_target"

		}
		ai_will_do = {
			factor = 0

		}
	}

### old testing ###	#
    missile_test_1 = {
    	icon = GFX_decision_generic_ignite_civil_war
 		available = {

		}
		visible = {
			has_country_flag = invisible
		}


        complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision missile_test_1"
			meta_effect = {
				text = {	
					set_variable = { var_intercept_capacity_boost = 0 }
					set_variable = { var_intercept_capacity_midcourse = 0 }
					set_variable = { var_intercept_capacity_terminal = 0 }
					### boost phase defense ###
					every_controlled_state = {
						limit = {
							anti_air_building > 0
							distance_to = {
								value < 10 #[SAM_range]
								target = var_launch_point_ID
							}
						}							
						ROOT = {									
							set_temp_variable = { temp1 = 0 }	
							add_to_temp_variable = { temp1 = PREV.building_level@anti_air_building }
							multiply_temp_variable = { temp1 = var_SAM_launcher_tech }
							add_to_variable = { var_intercept_capacity_boost = temp1 }
						}									
					}
					SAM_range = "[?var_SAM_range]"
					ABM_range = "[?var_ABM_range]"
				}
			}		
		}
		ai_will_do = {
			factor = 0

		}
	}

	missile_test_target = {
    	icon = GFX_decision_generic_ignite_civil_war
 		available = {
			
		}
		visible = {
			has_country_flag = invisible
		}


        complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision missile_test_target"
	
		}
		ai_will_do = {
			factor = 0

		}
	}

	missile_test_sea_launch_point_defense = {
    	icon = GFX_decision_generic_ignite_civil_war
 		available = {
			sea_launch_point_defense_64 = yes
		}
		visible = {
			#has_country_flag = invisible
		}


        complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision missile_test_launch_point"

		}
		ai_will_do = {
			factor = 0

		}
	}

	missile_test_strike = {
    	icon = GFX_decision_generic_ignite_civil_war
		state_target = yes
		target_trigger = {
			FROM = {
				has_state_flag = missile_launch_point
			}

			
		}
		available = {
			642 = {				
				distance_to = {
					value < 3000
					target = FROM
				}	
			}
		}
		visible = {
			has_country_flag = invisible
		}


        complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision missile_test_strike"

		}
		ai_will_do = {
			factor = 0

		}
	}

	set_landbased_missile_defense_vars = {
    	icon = GFX_decision_generic_ignite_civil_war
 		available = {
			
		}
		visible = {
			has_country_flag = invisible
		}


        complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision set_landbased_missile_defense_vars"
			#set_landbased_missile_defense_vars = yes
			### test effects ###
			#set_missile_trajectory_test_vars = yes
			#set_variable = { var_intercept_capacity_boost = 0 }
			#set_variable = { var_intercept_capacity_midcourse = 0 }
			#set_variable = { var_intercept_capacity_terminal = 0 }
			### boost phase defense ###
			#meta_effect = {
			#	text = {
			#		every_state = {
			#			limit = {
			#				is_controlled_by = ROOT
			#				anti_air_building > 0
			#				[launch_point_ID] = {
			#					distance_to = {
			#						value < [SAM_range]
			#						target = PREV
			#					}
			#				}	
			#			}							
			#			ROOT = {									
			#				set_temp_variable = { temp1 = 0 }	
			#				add_to_temp_variable = { temp1 = PREV.building_level@anti_air_building }
			#				multiply_temp_variable = { temp1 = var_SAM_launcher_tech }
			#				add_to_variable = { var_intercept_capacity_boost = temp1 }
			#			}									
			#		}
			#	}
			#	launch_point_ID = "[?var_launch_point_ID.GetID]"
			#	SAM_range = "[?var_SAM_range]"
			#}			
		}
		ai_will_do = {
			factor = 0

		}
	}

	set_seabased_missile_defense_vars = {
    	icon = GFX_decision_generic_ignite_civil_war
 		available = {
			
		}
		visible = {
			has_country_flag = invisible
		}


        complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision set_seabased_missile_defense_vars"
			#set_seabased_missile_defense_vars = yes
			
		}
		ai_will_do = {
			factor = 0

		}
	}

	missile_test_set_state_ID = {
    	icon = GFX_decision_generic_ignite_civil_war
 		available = {
			#meta_trigger = {
				#text = {
				#	38 = {				
				#		distance_to = {					
				#			value < 1000
				#			target = 42
				#		}	
				#	}
				#}
				#SAM_range = "[?var_SAM_range]"
			#}		
		}
		visible = {
			has_country_flag = invisible
		}


        complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision missile_test_set_state_ID"
			### test effects ###
			set_variable = { var_intercept_capacity_boost = 0 }
			set_variable = { var_intercept_capacity_midcourse = 0 }
			set_variable = { var_intercept_capacity_terminal = 0 }

			set_variable = { var_SAM_range = 1000 }
			set_variable = { var_ABM_range = 3000 }
			set_variable = { var_SAM_launcher_tech = 1 }
			set_variable = { var_ABM_launcher_tech = 1 }
			set_variable = { var_ship_SAM_launcher_tech = 1 }
			set_variable = { var_ship_ABM_launcher_tech = 1 }

			811 = {
				ROOT = {
					set_variable = { var_launch_point_ID = PREV.id }
				}	
			}
			764 = {
				ROOT = {
					set_variable = { var_target_point_ID = PREV.id }
				}	
			}		
		}
		ai_will_do = {
			factor = 0

		}
	}	

	missile_test_missile_defense = {
    	icon = GFX_decision_generic_ignite_civil_war
 		available = {
			
		}
		visible = {
			#has_country_flag = invisible
		}


        complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision missile_test_missile_defense"
			set_tech_tree_effects = yes
			set_variable = { deployed_SAM_array^0 = 100 }
			set_variable = { deployed_ABM_array^0 = 100 }
			set_variable = { deployed_SAM_array^1 = 10 }
			set_variable = { deployed_ABM_array^1 = 10 }
			set_variable = { deployed_SAM_array^2 = 20 }
			set_variable = { deployed_ABM_array^2 = 20 }
			set_variable = { deployed_SAM_array^3 = 30 }
			set_variable = { deployed_ABM_array^3 = 30 }
			set_variable = { deployed_SAM_array^4 = 40 }
			set_variable = { deployed_ABM_array^4 = 40 }
		}
		ai_will_do = {
			factor = 0

		}
	}

	missile_test_phases = {
    	icon = GFX_decision_generic_ignite_civil_war
 		available = {
			
		}
		visible = {
			has_country_flag = invisible
		}


        complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision missile_test_phases"
			### boost phase vs defense ###
			boost_phase_defense = yes
			### midcourse phase vs defense ###
			midcourse_phase_defense = yes
			### terminal phase vs defense ###
			terminal_phase_defense = yes	
		}
		ai_will_do = {
			factor = 0

		}
	}

### end of testing ###

missile_launch_point = {
	icon = GFX_decision_generic_ignite_civil_war
	state_target = yes
	target_trigger = {
		FROM = {
			has_state_flag = missile_launch_point
		}
	}	
	available = {
		OR = {
			meta_trigger = {
				text = {
					sea_launch_point_[LPID] = yes
				}
				LPID = "[FROM.GetID]"
			}
			FROM = {
				is_controlled_by = ROOT
				missile_silo > 0
			}
		}			
	}
	visible = {
		has_country_flag = invisible
	}


	complete_effect = {
		log = "[GetDateText]: [Root.GetName]: Decision missile_test_launch_point"
		#FROM = {
		#	set_state_flag = missile_launch_point
		#}
	}
	ai_will_do = {
		factor = 0

	}
}

missile_test_missile_on_daily = {
	icon = GFX_decision_generic_ignite_civil_war
	 available = {
		
	}
	visible = {
		###has_country_flag = invisible
	}


	complete_effect = {
		log = "[GetDateText]: [Root.GetName]: Decision missile_test_missile_on_daily"
		missile_on_daily = yes
	}
	ai_will_do = {
		factor = 0

	}
}

missile_defense_deployed_test = {
	icon = GFX_decision_generic_ignite_civil_war
	available = {

	}
	visible = {
		#has_country_flag = invisible
	}


	complete_effect = {
		log = "[GetDateText]: [Root.GetName]: Decision missile_defense_scope_test"
		#var:ROOT.missile_target_controller_array^0 = {
		#SOV = {	
		#	add_political_power = 100
		#}
		var:ROOT.missile_target_controller_array^0 = {
			### SAM4 & ABM4 ###
			set_variable = { var_SAM_launcher_tech = 8 }
			set_variable = { var_ABM_launcher_tech = 1 }
			set_variable = { var_ship_SAM_launcher_tech = 8 }
			set_variable = { var_ship_ABM_launcher_tech = 4 }			
			set_variable = { var_SAM_range = 200 }
			set_variable = { var_ABM_range = 4000 }
			set_variable = { var_SAM_intercept_chance = 0.75 }
			set_variable = { var_ABM_intercept_chance = 0.75 }
			set_variable = { var_deployed_SAM_total = 200 }
			set_variable = { var_deployed_ABM_total = 200 }
		}

		#set_missile_defense_land_deployed_tech = yes


	}
}


missile_test_def_cap = {
	icon = GFX_decision_generic_ignite_civil_war
	 available = {
		
	}
	visible = {
		#has_country_flag = invisible
	}


	complete_effect = {
		log = "[GetDateText]: [Root.GetName]: Decision missile_test_def_cap"
		var:ROOT.missile_target_controller_array^i = {	
			set_landbased_missile_defense_cap = yes
		}
	# 	set_variable = { var_intercept_capacity_boost = 0 }
	# 	set_variable = { var_intercept_capacity_midcourse = 0 }
	# 	set_variable = { var_intercept_capacity_terminal = 0 }
	# 	var:ROOT.missile_target_controller_array^0 = {
	# 		meta_effect = {
	# 			text = {
	# 				### boost phase defense ###
	# 				every_controlled_state = {
	# 					limit = {
	# 						anti_air_building > 0
	# 						[launch_point_ID] = {
	# 							distance_to = {
	# 								value < [SAM_range]
	# 								target = PREV
	# 							}
	# 						}
	# 					}
	# 				#ROOT = {
	# 					set_temp_variable = { temp1 = 0 }	
	# 					add_to_temp_variable = { temp1 = building_level@anti_air_building }
	# 					multiply_temp_variable = { temp1 = PREV.var_SAM_launcher_tech }
	# 					add_to_variable = { ROOT.var_intercept_capacity_boost = temp1 }
	# 				#}													
	# 				}
	# 				### midcourse phase defense ###
	# 				every_controlled_state = {
	# 					limit = {
	# 						missile_defense_station > 0
	# 						[launch_point_ID] = {
	# 							distance_to = {
	# 								value < [ABM_range]
	# 								target = PREV
	# 							}
	# 						}	
	# 					}
	# 				#ROOT = {
	# 					set_temp_variable = { temp1 = 0 }	
	# 					add_to_temp_variable = { temp1 = building_level@missile_defense_station }
	# 					multiply_temp_variable = { temp1 = PREV.var_ABM_launcher_tech }
	# 					add_to_variable = { ROOT.var_intercept_capacity_midcourse = temp1 }
	# 					#THIS = {
	# 					set_state_flag = defend_land_launch_point
	# 					#}
	# 				#}				
	# 				}
	# 				every_controlled_state = {
	# 					limit = {
	# 						missile_defense_station > 0
	# 						NOT = {
	# 							has_state_flag = defend_land_launch_point
	# 						}
	# 						[target_point_ID] = {
	# 							distance_to = {
	# 								value < [ABM_range]
	# 								target = PREV
	# 							}
	# 						}	
	# 					}
	# 				#ROOT = {
	# 					set_temp_variable = { temp1 = 0 }	
	# 					add_to_temp_variable = { temp1 = building_level@missile_defense_station }
	# 					multiply_temp_variable = { temp1 = PREV.var_ABM_launcher_tech }
	# 					add_to_variable = { ROOT.var_intercept_capacity_midcourse = temp1 }
	# 				#}	
	# 				}
	# 				every_controlled_state = {
	# 					clr_state_flag = defend_land_launch_point
	# 				}
	# 				### terminal phase defense ###
	# 				every_controlled_state = {
	# 					limit = {
	# 						anti_air_building > 0
	# 						[target_point_ID] = {
	# 							distance_to = {
	# 								value < [SAM_range]
	# 								target = PREV
	# 							}
	# 						}	
	# 					}
	# 				#ROOT = {
	# 					set_temp_variable = { temp1 = 0 }	
	# 					add_to_temp_variable = { temp1 = building_level@anti_air_building }
	# 					multiply_temp_variable = { temp1 = PREV.var_SAM_launcher_tech }
	# 					add_to_variable = { ROOT.var_intercept_capacity_terminal = temp1 }
	# 				#}
	# 				}
	# 			}
	# 			launch_point_ID = "[?missile_launch_point_array^i.GetID]" # "[?var_launch_point_ID.GetID]"
	# 			target_point_ID = "[?missile_target_point_array^i.GetID]" # "[?var_target_point_ID.GetID]"
	# 			SAM_range = "[?var_SAM_range]"
	# 			ABM_range = "[?var_ABM_range]"
	# 		}
	# 	}
	# }

}



missile_test_damage = {
	icon = GFX_decision_generic_ignite_civil_war
	 available = {
		
	}
	visible = {
		has_country_flag = invisible
	}


	complete_effect = {
		log = "[GetDateText]: [Root.GetName]: Decision missile_test_damage [?var_warhead_damage]"
		meta_effect = {
			text = {
				539 = { #[target_point_ID] = {
					damage_building = {
						type = infrastructure
						damage = [warhead_damage]
					}
				}
			}
			warhead_damage = "[?PREV.var_warhead_damage]"
		}
	}
	#ai_will_do = {
	#	factor = 0
	#
	#}
}



}
