#####################################
### missile gui scripted triggers ###
#####################################

unique_missile_model_names = {
	OR = {
		original_tag = USA
		original_tag = SOV
		original_tag = CHI
		original_tag = ENG
		original_tag = FRA
		original_tag = ISR
		original_tag = RAJ
		original_tag = PAK
		original_tag = NKO
		original_tag = PER
	}
}

unique_missile_model_texture = {
	always = no
}

unique_missile_model_names_selected_TAG = {
	OR = {
		check_variable = { orbit_selected_TAG = USA.id }
		check_variable = { orbit_selected_TAG = SOV.id }
		check_variable = { orbit_selected_TAG = CHI.id }
		check_variable = { orbit_selected_TAG = ENG.id }
		check_variable = { orbit_selected_TAG = FRA.id }
		check_variable = { orbit_selected_TAG = ISR.id }
		check_variable = { orbit_selected_TAG = RAJ.id }
		check_variable = { orbit_selected_TAG = PAK.id }
		check_variable = { orbit_selected_TAG = NKO.id }
		check_variable = { orbit_selected_TAG = PER.id }
	}
}

unique_missile_model_names_target_TAG = {
	OR = {
		check_variable = { ROOT.sat_target_TAG_array^i = USA.id }
		check_variable = { ROOT.sat_target_TAG_array^i = SOV.id }
		check_variable = { ROOT.sat_target_TAG_array^i = CHI.id }
		check_variable = { ROOT.sat_target_TAG_array^i = ENG.id }
		check_variable = { ROOT.sat_target_TAG_array^i = FRA.id }
		check_variable = { ROOT.sat_target_TAG_array^i = ISR.id }
		check_variable = { ROOT.sat_target_TAG_array^i = RAJ.id }
		check_variable = { ROOT.sat_target_TAG_array^i = PAK.id }
		check_variable = { ROOT.sat_target_TAG_array^i = NKO.id }
		check_variable = { ROOT.sat_target_TAG_array^i = PER.id }
	}
}

unique_missiles_trajectory_selected_TAG = {
	OR = {
		check_variable = { missile_launch_selected_TAG = USA.id }
		check_variable = { missile_launch_selected_TAG = SOV.id }
		check_variable = { missile_launch_selected_TAG = CHI.id }
		check_variable = { missile_launch_selected_TAG = ENG.id }
		check_variable = { missile_launch_selected_TAG = FRA.id }
		check_variable = { missile_launch_selected_TAG = ISR.id }
		check_variable = { missile_launch_selected_TAG = RAJ.id }
		check_variable = { missile_launch_selected_TAG = PAK.id }
		check_variable = { missile_launch_selected_TAG = NKO.id }
		check_variable = { missile_launch_selected_TAG = PER.id }
	}
}

############################
### nukes effect trigger ###
############################

stop_nuke_loop = {
	AND = {
		OR = {
			check_variable = { nuke_temp0_d > nuke_temp0 }
			check_variable = { nuke_temp0 = 0 }
			#check_variable = { nuke_temp0_d = nuke_temp0 }
		}
		OR = {
			check_variable = { nuke_temp1_d > nuke_temp1 }
			check_variable = { nuke_temp1 = 0 }
			#check_variable = { nuke_temp1_d = nuke_temp1 }
		}
		OR = {
			check_variable = { nuke_temp2_d > nuke_temp2 }
			check_variable = { nuke_temp2 = 0 }
			#check_variable = { nuke_temp2_d = nuke_temp2 }
		}
		OR = {
			check_variable = { nuke_temp3_d > nuke_temp3 }
			check_variable = { nuke_temp3 = 0 }
			#check_variable = { nuke_temp3_d = nuke_temp3 }
		}
		OR = {
			check_variable = { nuke_temp4_d > nuke_temp4 }
			check_variable = { nuke_temp4 = 0 }
			#check_variable = { nuke_temp4_d = nuke_temp4 }
		}
		OR = {
			check_variable = { nuke_temp5_d > nuke_temp5 }
			check_variable = { nuke_temp5 = 0 }
			#check_variable = { nuke_temp5_d = nuke_temp5 }
		}
		OR = {
			check_variable = { nuke_temp6_d > nuke_temp6 }
			check_variable = { nuke_temp6 = 0 }
			#check_variable = { nuke_temp6_d = nuke_temp6 }
		}
		OR = {
			check_variable = { nuke_temp7_d > nuke_temp7 }
			check_variable = { nuke_temp7 = 0 }
			#check_variable = { nuke_temp7_d = nuke_temp7 }
		}
		OR = {
			check_variable = { nuke_temp8_d > nuke_temp8 }
			check_variable = { nuke_temp8 = 0 }
			#check_variable = { nuke_temp8_d = nuke_temp8 }
		}
		OR = {
			check_variable = { nuke_temp9_d > nuke_temp9 }
			check_variable = { nuke_temp9 = 0 }
			#check_variable = { nuke_temp9_d = nuke_temp9 }
		}
		OR = {
			check_variable = { nuke_temp10_d > nuke_temp10 }
			check_variable = { nuke_temp10 = 0 }
			#check_variable = { nuke_temp10_d = nuke_temp10 }
		}
		OR = {
			check_variable = { nuke_temp11_d > nuke_temp11 }
			check_variable = { nuke_temp11 = 0 }
			#check_variable = { nuke_temp11_d = nuke_temp11 }
		}
		OR = {
			check_variable = { nuke_temp12_d > nuke_temp12 }
			check_variable = { nuke_temp12 = 0 }
			#check_variable = { nuke_temp12_d = nuke_temp12 }
		}
		OR = {
			check_variable = { nuke_temp13_d > nuke_temp13 }
			check_variable = { nuke_temp13 = 0 }
			#check_variable = { nuke_temp13_d = nuke_temp13 }
		}
		OR = {
			check_variable = { nuke_temp14_d > nuke_temp14 }
			check_variable = { nuke_temp14 = 0 }
			#check_variable = { nuke_temp14_d = nuke_temp14 }
		}
	}
}

#########################################
### launch and target button triggers ###
#########################################

has_selected_ICBM = {
	ROOT = {
		check_variable = { var_gui_missile_type > 10 }
		check_variable = { var_gui_missile_type < 20 }
	}
}

has_selected_IRBM = {
	ROOT = {
		check_variable = { var_gui_missile_type > 20 }
		check_variable = { var_gui_missile_type < 30 }
	}
}

has_selected_SLBM = {
	ROOT = {
		check_variable = { var_gui_missile_type > 30 }
		check_variable = { var_gui_missile_type < 40 }
	}
}

has_selected_ALCM = {
	ROOT = {
		check_variable = { var_gui_missile_type > 40 }
		check_variable = { var_gui_missile_type < 50 }
	}
}

has_selected_GLCM = {
	ROOT = {
		check_variable = { var_gui_missile_type > 50 }
		check_variable = { var_gui_missile_type < 60 }
	}
}

has_selected_SLCM = {
	ROOT = {
		check_variable = { var_gui_missile_type > 60 }
		check_variable = { var_gui_missile_type < 70 }
	}
}

has_selected_HSCM = {
	ROOT =  {
		check_variable = { var_gui_missile_type > 70 }
		check_variable = { var_gui_missile_type < 80 }
	}
}

# OLD VERSION
# MD_missiles_ground_launch_button_trigger = {
# 	ROOT = {
# 		set_temp_variable = { temp1 = PREV.building_level@missile_silo }
# 		set_temp_variable = { temp2 = PREV.building_level@TEL_base } ### internet_station replaced with TEL base
# 		multiply_temp_variable = { temp1 = var_silo_launcher }
# 		multiply_temp_variable = { temp2 = var_TEL_launcher }
# 		add_to_temp_variable = { temp1 = 1 }
# 		add_to_temp_variable = { temp2 = 1 }
# 		OR = {
# 			### ICBM ###
# 			custom_trigger_tooltip = {
# 				tooltip = ground_launch_button_trigger_ICBM_TT
# 				AND = {
# 					has_selected_ICBM = yes
# 					check_variable = { temp1 > var_gui_salvo }
# 				}
# 			}
# 			### IRBM ###
# 			custom_trigger_tooltip = {
# 				tooltip = ground_launch_button_trigger_IRBM_TT			
# 				AND = {
# 					has_selected_IRBM = yes
# 					check_variable = { temp2 > var_gui_salvo }
# 				}
# 			}
# 			### GLCM ###
# 			custom_trigger_tooltip = {
# 				tooltip = ground_launch_button_trigger_GLCM_TT
# 				AND = {
# 					has_selected_GLCM = yes
# 					# only TEL_base
# 					check_variable = { temp2 > var_gui_salvo }
# 					# OLD VERSION
# 					# OR = {
# 					# 	check_variable = { temp1 > var_gui_salvo }
# 					# 	check_variable = { temp2 > var_gui_salvo }
# 					# }
# 				}
# 			}
# 			### HSCM ###
# 			custom_trigger_tooltip = {
# 				tooltip = ground_launch_button_trigger_HSCM_TT
# 				AND = {
# 					has_selected_HSCM = yes
# 					# only TEL_base
# 					check_variable = { temp2 > var_gui_salvo }
# 					# OLD VERSION
# 					# OR = {
# 					# 	check_variable = { temp1 > var_gui_salvo }
# 					# 	check_variable = { temp2 > var_gui_salvo }
# 					# }
# 				}
# 			}
# 		}
# 	}
# 	# tigger not needed???
# 	# ROOT = {
# 	# 	OR = {
# 	# 		### ICBM ###
# 	# 		has_selected_ICBM = yes
# 	# 		### IRBM ###
# 	# 		has_selected_IRBM = yes
# 	# 		### GLCM ###
# 	# 		has_selected_GLCM = yes
# 	# 		### HSCM ### trigger for GLCM mod to add
# 	# 		has_selected_HSCM = yes
# 	# 	}
# 	# }
# 	hidden_trigger = {
# 		ROOT = { NOT = { has_country_flag = search_target_point } }
# 	}
# }

MD_missiles_ground_launch_button_missile_selected_trigger = {
	custom_trigger_tooltip = {
		tooltip = ground_launch_button_trigger_missile_selected_TT
		ROOT = {
			OR = {
				### ICBM ###
				has_selected_ICBM = yes
				### IRBM ###
				has_selected_IRBM = yes
				### GLCM ###
				has_selected_GLCM = yes
				### HSCM ### trigger for GLCM mod to add
				has_selected_HSCM = yes
			}
		}
	}
}

MD_missiles_sea_launch_button_missile_selected_trigger = {
	custom_trigger_tooltip = {
		tooltip = sea_launch_button_trigger_missile_selected_TT
		ROOT = {
			OR = {
				### ICBM ###
				has_selected_SLBM = yes
				### SLCM ###
				has_selected_SLCM = yes
				### HSCM ### trigger for GLCM mod to add
				has_selected_HSCM = yes
			}
		}
	}
}

MD_missiles_air_launch_button_missile_selected_trigger = {
	custom_trigger_tooltip = {
		tooltip = air_launch_button_trigger_missile_selected_TT
		ROOT = {
			OR = {
				### ALCM ###
				has_selected_ALCM = yes
				### HSCM ### trigger for GLCM mod to add
				has_selected_HSCM = yes
			}
		}
	}
}

MD_launch_button_warhead_selected_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_warhead_TT
		ROOT = { has_country_flag = has_warhead }
	}
}


MD_missiles_ground_launch_button_ICBM_trigger = {
	### ICBM ###
	custom_trigger_tooltip = {
		tooltip = ground_launch_button_trigger_ICBM_TT
		ROOT = {
			set_temp_variable = { temp1 = PREV.building_level@missile_silo }
			set_temp_variable = { temp2 = PREV.building_level@TEL_base } ### internet_station replaced with TEL base
			multiply_temp_variable = { temp1 = var_silo_launcher }
			multiply_temp_variable = { temp2 = var_TEL_launcher }
			add_to_temp_variable = { temp1 = 1 }
			add_to_temp_variable = { temp2 = 1 }
			AND = {
				has_selected_ICBM = yes
				check_variable = { temp1 > var_gui_salvo }
			}
		}
	}
}

MD_missiles_ground_launch_button_IRBM_trigger = {
	### IRBM ###
	custom_trigger_tooltip = {
		tooltip = ground_launch_button_trigger_IRBM_TT
		ROOT = {
			set_temp_variable = { temp1 = PREV.building_level@missile_silo }
			set_temp_variable = { temp2 = PREV.building_level@TEL_base } ### internet_station replaced with TEL base
			multiply_temp_variable = { temp1 = var_silo_launcher }
			multiply_temp_variable = { temp2 = var_TEL_launcher }
			add_to_temp_variable = { temp1 = 1 }
			add_to_temp_variable = { temp2 = 1 }
			AND = {
				has_selected_IRBM = yes
				OR = {
					check_variable = { temp1 > var_gui_salvo }
					check_variable = { temp2 > var_gui_salvo }
				}
			}
		}
	}
}

MD_missiles_ground_launch_button_GLCM_trigger = {
	### GLCM ###
	custom_trigger_tooltip = {
		tooltip = ground_launch_button_trigger_GLCM_TT
		ROOT = {
			set_temp_variable = { temp1 = PREV.building_level@missile_silo }
			set_temp_variable = { temp2 = PREV.building_level@TEL_base } ### internet_station replaced with TEL base
			multiply_temp_variable = { temp1 = var_silo_launcher }
			multiply_temp_variable = { temp2 = var_TEL_launcher }
			add_to_temp_variable = { temp1 = 1 }
			add_to_temp_variable = { temp2 = 1 }
			AND = {
				has_selected_GLCM = yes
				# only TEL_base
				check_variable = { temp2 > var_gui_salvo }
			}
		}
	}
}

MD_missiles_ground_launch_button_HSCM_trigger = {
	### HSCM ###
	custom_trigger_tooltip = {
		tooltip = ground_launch_button_trigger_HSCM_TT
		ROOT = {
			set_temp_variable = { temp1 = PREV.building_level@missile_silo }
			set_temp_variable = { temp2 = PREV.building_level@TEL_base } ### internet_station replaced with TEL base
			multiply_temp_variable = { temp1 = var_silo_launcher }
			multiply_temp_variable = { temp2 = var_TEL_launcher }
			add_to_temp_variable = { temp1 = 1 }
			add_to_temp_variable = { temp2 = 1 }
			AND = {
				has_selected_HSCM = yes
				# only TEL_base
				check_variable = { temp2 > var_gui_salvo }
			}
		}
	}
}

# OLD VERSION
# MD_missiles_sea_launch_button_trigger = {
# 	meta_trigger = {
# 		text = {
# 			ROOT = {
# 				OR = {
# 					### SLBM ###
# 					AND = {
# 						[sea_launch_point] = {
# 							has_state_flag = sea_launch_point
# 						}
# 						has_selected_SLBM = yes
# 						sea_launch_point_sub_[sea_launch_point] = yes
# 					}
# 					### SLCM ###
# 					AND = {
# 						[sea_launch_point] = {
# 							has_state_flag = sea_launch_point
# 						}
# 						has_selected_SLCM = yes
# 						OR = {
# 							sea_launch_point_[sea_launch_point] = yes
# 							sea_launch_point_sub_[sea_launch_point] = yes
# 						}
# 					}
# 					### HSCM ### trigger for SLCM mod to add
# 					AND = {
# 						[sea_launch_point] = {
# 							has_state_flag = sea_launch_point
# 						}
# 						has_selected_HSCM = yes
# 						OR = {
# 							sea_launch_point_[sea_launch_point] = yes
# 							sea_launch_point_sub_[sea_launch_point] = yes
# 						}
# 					}
# 				}
# 			}
# 			ROOT = { NOT = { has_country_flag = search_target_point } }
# 		}
# 		sea_launch_point = "[PREV.GetID]"
# 	}
# }

MD_missiles_sea_launch_button_SLBM_trigger = {
	custom_trigger_tooltip = {
		tooltip = sea_launch_button_trigger_SLBM_TT
		meta_trigger = {
			text = {
				ROOT = {
					### SLBM ###
					AND = {
						[sea_launch_point] = {
							has_state_flag = sea_launch_point
						}
						has_selected_SLBM = yes
						sea_launch_point_sub_[sea_launch_point] = yes
					}
				}
			}
			sea_launch_point = "[PREV.GetID]"
		}
	}
}

MD_missiles_sea_launch_button_SLCM_trigger = {
	custom_trigger_tooltip = {
		tooltip = sea_launch_button_trigger_SLCM_TT
		meta_trigger = {
			text = {
				ROOT = {
					### SLCM ###
					AND = {
						[sea_launch_point] = {
							has_state_flag = sea_launch_point
						}
						has_selected_SLCM = yes
						OR = {
							sea_launch_point_[sea_launch_point] = yes
							sea_launch_point_sub_[sea_launch_point] = yes
						}
					}
				}
			}
			sea_launch_point = "[PREV.GetID]"
		}
	}
}

MD_missiles_sea_launch_button_HSCM_trigger = {
	custom_trigger_tooltip = {
		tooltip = sea_launch_button_trigger_HSCM_TT	
		meta_trigger = {
			text = {
				ROOT = {
					### HSCM ### trigger for SLCM mod to add
					AND = {
						[sea_launch_point] = {
							has_state_flag = sea_launch_point
						}
						has_selected_HSCM = yes
						OR = {
							sea_launch_point_[sea_launch_point] = yes
							sea_launch_point_sub_[sea_launch_point] = yes
						}
					}
				}
			}
			sea_launch_point = "[PREV.GetID]"
		}
	}
}

# OLD VERSION
# MD_missiles_air_launch_button_trigger = {
# 	meta_trigger = {
# 		text = {
# 			ROOT = {
# 				OR = {
# 					### ALCM ###
# 					AND = {
# 						has_selected_ALCM = yes
# 						OR = {
# 							AND = {
# 								PREV = {
# 									air_base > 0
# 									is_controlled_by = ROOT
# 								}
# 								ROOT = {
# 									OR = {
# 										has_deployed_air_force_size = {
# 											size > [bomber_number_ALCM]
# 											type = strategic_bomber
# 										}
# 										has_deployed_air_force_size = {
# 											size > [STK_number_ALCM]
# 											type = fighter
# 											type = cas
# 											type = tactical_bomber
# 											type = scout_plane
# 										}
# 										has_deployed_air_force_size = {
# 											size > [MR_number_ALCM]
# 											type = fighter
# 											type = interceptor
# 											type = cas
# 											type = tactical_bomber
# 											type = scout_plane
# 										}
# 									}
# 								}
# 							}
# 							AND = {
# 								[sea_launch_point] = {
# 									has_state_flag = sea_launch_point
# 								}
# 								ROOT = { sea_launch_point_CV_[sea_launch_point] = yes }
# 								has_deployed_air_force_size = {
# 									size > [MR_CV_number_ALCM]
# 									type = fighter
# 									type = interceptor
# 									type = cas
# 									type = tactical_bomber
# 									type = naval_bomber
# 								}
# 							}
# 						}
# 					}
# 					### HSCM ### trigger for ALCM mod to add
# 					AND = {
# 						has_selected_HSCM = yes
# 						OR = {
# 							AND = {
# 								PREV = {
# 									air_base > 0
# 									is_controlled_by = ROOT
# 								}
# 								OR = {
# 									has_deployed_air_force_size = {
# 										size > [bomber_number_ALCM]
# 										type = strategic_bomber
# 									}
# 									has_deployed_air_force_size = {
# 										size > [STK_number_ALCM]
# 										type = fighter
# 										type = cas
# 										type = tactical_bomber
# 										type = scout_plane
# 									}
# 									has_deployed_air_force_size = {
# 										size > [MR_number_ALCM]
# 										type = fighter
# 										type = interceptor
# 										type = cas
# 										type = tactical_bomber
# 										type = scout_plane
# 									}
# 								}
# 							}
# 							AND = {
# 								[sea_launch_point] = {
# 									has_state_flag = sea_launch_point
# 								}
# 								ROOT = { sea_launch_point_CV_[sea_launch_point] = yes }
# 								has_deployed_air_force_size = {
# 									size > [MR_CV_number_ALCM]
# 									type = fighter
# 									type = interceptor
# 									type = cas
# 									type = tactical_bomber
# 									type = naval_bomber
# 								}
# 							}
# 						}
# 					}
# 				}
# 			}
# 			ROOT = { NOT = { has_country_flag = search_target_point } }
# 		}
# 		sea_launch_point = "[PREV.GetID]"
# 		bomber_number_ALCM = "[?ROOT.var_bomber_number_ALCM]"
# 		STK_number_ALCM = "[?ROOT.var_STK_number_ALCM]"
# 		MR_number_ALCM = "[?ROOT.var_MR_number_ALCM]"
# 		MR_CV_number_ALCM = "[?ROOT.var_MR_CV_number_ALCM]"
# 	}
# }

MD_missiles_air_launch_button_ALCM_trigger = {
	custom_trigger_tooltip = {
		tooltip = air_launch_button_trigger_ALCM_TT	
		meta_trigger = {
			text = {
				ROOT = {
					### ALCM ###
					AND = {
						has_selected_ALCM = yes
						OR = {
							AND = {
								PREV = {
									air_base > 0
									is_controlled_by = ROOT
								}
								ROOT = {
									OR = {
										has_deployed_air_force_size = {
											size > [bomber_number_ALCM]
											type = strategic_bomber
										}
										has_deployed_air_force_size = {
											size > [STK_number_ALCM]
											type = fighter
											type = cas
											type = tactical_bomber
											type = scout_plane
										}
										has_deployed_air_force_size = {
											size > [MR_number_ALCM]
											type = fighter
											type = interceptor
											type = cas
											type = tactical_bomber
											type = scout_plane
										}
									}
								}
							}
							AND = {
								[sea_launch_point] = {
									has_state_flag = sea_launch_point
								}
								ROOT = { sea_launch_point_CV_[sea_launch_point] = yes }
								has_deployed_air_force_size = {
									size > [MR_CV_number_ALCM]
									type = fighter
									type = interceptor
									type = cas
									type = tactical_bomber
									type = naval_bomber
								}
							}
						}
					}
				}
			}
			sea_launch_point = "[PREV.GetID]"
			bomber_number_ALCM = "[?ROOT.var_bomber_number_ALCM]"
			STK_number_ALCM = "[?ROOT.var_STK_number_ALCM]"
			MR_number_ALCM = "[?ROOT.var_MR_number_ALCM]"
			MR_CV_number_ALCM = "[?ROOT.var_MR_CV_number_ALCM]"
		}
	}
}

MD_missiles_air_launch_button_HSCM_trigger = {
	custom_trigger_tooltip = {
		tooltip = air_launch_button_trigger_HSCM_TT
		meta_trigger = {
			text = {
				ROOT = {
					### HSCM ### trigger for ALCM mod to add
					AND = {
						has_selected_HSCM = yes
						OR = {
							AND = {
								PREV = {
									air_base > 0
									is_controlled_by = ROOT
								}
								OR = {
									has_deployed_air_force_size = {
										size > [bomber_number_ALCM]
										type = strategic_bomber
									}
									has_deployed_air_force_size = {
										size > [STK_number_ALCM]
										type = fighter
										type = cas
										type = tactical_bomber
										type = scout_plane
									}
									has_deployed_air_force_size = {
										size > [MR_number_ALCM]
										type = fighter
										type = interceptor
										type = cas
										type = tactical_bomber
										type = scout_plane
									}
								}
							}
							AND = {
								[sea_launch_point] = {
									has_state_flag = sea_launch_point
								}
								ROOT = { sea_launch_point_CV_[sea_launch_point] = yes }
								has_deployed_air_force_size = {
									size > [MR_CV_number_ALCM]
									type = fighter
									type = interceptor
									type = cas
									type = tactical_bomber
									type = naval_bomber
								}
							}
						}
					}
				}
			}
			sea_launch_point = "[PREV.GetID]"
			bomber_number_ALCM = "[?ROOT.var_bomber_number_ALCM]"
			STK_number_ALCM = "[?ROOT.var_STK_number_ALCM]"
			MR_number_ALCM = "[?ROOT.var_MR_number_ALCM]"
			MR_CV_number_ALCM = "[?ROOT.var_MR_CV_number_ALCM]"
		}
	}
}

# OLD VERSION
# MD_missiles_target_button_trigger = {
# 	meta_trigger = {
# 		text = {
# 			ROOT = { has_country_flag = search_target_point }
# 			ROOT = { NOT = { has_country_flag = has_trajectory } }
# 			distance_to = {
# 				value < [range]
# 				target = [launch_point_ID]
# 			}
# 		}
# 		launch_point_ID = "[?ROOT.missile_launch_point_array^var_missile_trajectory_ID.GetID]"
# 		range = "[?ROOT.var_range]"
# 	}
# }

MD_missiles_target_button_distance_trigger = {
	custom_trigger_tooltip = {
		tooltip = target_button_distance_trigger_TT
		meta_trigger = {
			text = {
				distance_to = {
					value < [range]
					target = [launch_point_ID]
				}
			}
			launch_point_ID = "[?ROOT.missile_launch_point_array^var_missile_trajectory_ID.GetID]"
			range = "[?ROOT.var_range]"
		}
	}
}

###########################
### launch gui triggers ###
###########################

#var_total_firing

has_num_nuke_warheads = {
	check_variable = { var_gui_nuke = 2 }
	#check_variable = { var_nuclear_warhead = 2 }
	#var_gui_MIRV
}

has_num_missiles = {
	#check_variable = { var_gui_missile_type = 2 }
	custom_trigger_tooltip = {
		tooltip = has_num_missiles_TT
		NOT = {
			check_variable = { missile_inventory_array^var_gui_missile_type < var_total_firing }
		}
	}
}

#################################
### nuclear strike conditions ###
#################################

has_enemy_first_use = {
	custom_trigger_tooltip = {
		tooltip = has_enemy_first_use_TT
		PREV = {
			has_country_flag = has_dropped_nuke@ROOT
		}
	}
}

use_condition_NFU = {
	is_in_array = {
		array = nuclear_doctrine_array
		value = 0
	}
	#check_variable = { nuclear_doctrine_array^0 = 0 }
	has_enemy_first_use = yes
}

use_condition_MAD = {
	is_in_array = {
		array = nuclear_doctrine_array
		value = 1
	}
	#check_variable = { nuclear_doctrine_array^1 = 1 }
	has_enemy_first_use = yes
}

use_condition_MASSR = {
	is_in_array = {
		array = nuclear_doctrine_array
		value = 2
	}
	#check_variable = { nuclear_doctrine_array^2 = 2 }
	has_defensive_war_with = PREV
}

use_condition_FXRSP = {
	is_in_array = {
		array = nuclear_doctrine_array
		value = 3
	}
	#check_variable = { nuclear_doctrine_array^3 = 3 }
	surrender_progress > 0.25
}

use_condition_PRMTR = {
	custom_trigger_tooltip = {
		tooltip = use_condition_PRMTR_TT
		is_in_array = {
			array = nuclear_doctrine_array
			value = 4
		}
		#check_variable = { nuclear_doctrine_array^4 = 4 }
		var:ROOT.missile_target_controller_array^i = {
			has_country_flag = has_dropped_nuke_on_capital@ROOT
		}
	}
}

use_condition_PRMTR_gui = {
	custom_trigger_tooltip = {
		tooltip = use_condition_PRMTR_TT
		is_in_array = {
			array = nuclear_doctrine_array
			value = 4
		}
		#check_variable = { nuclear_doctrine_array^4 = 4 }
		PREV = {
			has_country_flag = has_dropped_nuke_on_capital_@ROOT
		}
	}
}

use_condition_NDESC = {
	custom_trigger_tooltip = {
		tooltip = use_condition_NDESC_TT
		is_in_array = {
			array = nuclear_doctrine_array
			value = 5
		}
		#check_variable = { nuclear_doctrine_array^5 = 5 }
		set_temp_variable = { temp6 = 0 }
		#var:ROOT.missile_target_controller_array^i = {
		all_owned_state = {
			if = {
				limit = {
					is_controlled_by = PREV.PREV
				}
				add_to_temp_variable = { temp6 = 1 }
			}
		}
		check_variable = { temp6 > 2 }
	}
}

use_condition_NDESC_gui = {
	custom_trigger_tooltip = {
		tooltip = use_condition_NDESC_TT
		is_in_array = {
			array = nuclear_doctrine_array
			value = 5
		}
		#check_variable = { nuclear_doctrine_array^5 = 5 }
		set_temp_variable = { temp6 = 0 }
		all_owned_state = {
			if = {
				limit = {
					is_controlled_by = PREV.PREV
				}
				add_to_temp_variable = { temp6 = 1 }
			}
		}
		check_variable = { temp6 > 2 }
	}
}

use_condition_FSTK = {
	is_in_array = {
		array = nuclear_doctrine_array
		value = 6
	}
	#check_variable = { nuclear_doctrine_array^6 = 6 }
	#has_war = yes
	has_war_with = PREV
}

use_condition_RSTK = {
	is_in_array = {
		array = nuclear_doctrine_array
		value = 7
	}
	#check_variable = { nuclear_doctrine_array^7 = 7 }
	has_enemy_first_use = yes
}

use_condition_NTERROR = {
	is_in_array = {
		array = nuclear_doctrine_array
		value = 8
	}
	#check_variable = { nuclear_doctrine_array^8 = 8 }
}

####################################
####################################
### MD_countrymissilesview_nukes ###
####################################
####################################

### nuclear status ###

has_NPOWER = {
	custom_trigger_tooltip = {
		tooltip = has_NPOWER_TT
		is_in_array = { nuclear_status_array = 3 }
	}
}

has_NPOWER_OR_SPOWER = {
	custom_trigger_tooltip = {
		tooltip = has_NPOWER_OR_SPOWER_TT
		OR = {
			is_in_array = { nuclear_status_array = 3 }
			is_in_array = { nuclear_status_array = 6 }
		}
	}
}

NOT_has_NTEST = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_NTEST_TT
		NOT = {
			is_in_array = { nuclear_status_array = 8 }
		}
	}
}

NOT_has_NPOWER_OR_SPROG = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_NPOWER_OR_SPROG_TT
		NOT = {
			is_in_array = { nuclear_status_array = 3 }
			is_in_array = { nuclear_status_array = 7 }
		}
	}
}

NOT_has_SPOWER_OR_SPROG = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_SPOWER_OR_SPROG_TT
		NOT = {
			is_in_array = { nuclear_status_array = 6 }
			is_in_array = { nuclear_status_array = 7 }
		}
	}
}

NOT_has_NPOWER_OR_SPOWER = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_NPOWER_OR_SPOWER_TT
		NOT = {
			is_in_array = { nuclear_status_array = 3 }
			is_in_array = { nuclear_status_array = 6 }
		}
	}
}

NOT_has_NBOMB_NICBM_SSBM = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_NBOMB_NICBM_SSBM_TT
		NOT = {
			is_in_array = { nuclear_status_array = 10 }
			is_in_array = { nuclear_status_array = 11 }
			is_in_array = { nuclear_status_array = 12 }
		}
	}
}

has_NSHARE_condition = {
	custom_trigger_tooltip = {
		tooltip = has_NSHARE_condition_TT
		OR = {
			any_allied_country = {
				is_in_array = { nuclear_status_array = 2 }
				is_in_array = { nuclear_status_array = 3 }
			}
			AND = {
				has_idea = NATO_member
				any_other_country = {
					has_idea = NATO_member
					is_in_array = { nuclear_status_array = 2 }
					is_in_array = { nuclear_status_array = 3 }
				}
			}
		}
	}
}

has_NPROG_completed = {
	custom_trigger_tooltip = {
		tooltip = has_NPROG_completed_TT
		has_country_flag = NPROG_completed
	}
}

NOT_has_NOUT = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_NOUT_TT
		NOT = { is_in_array = { nuclear_status_array = 5 } }
	}
}

NOT_has_NENERGY = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_NENERGY_TT
		NOT = { is_in_array = { nuclear_status_array = 4 } }
	}
}

NOT_has_NTB = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_NTB_TT
		NOT = { is_in_array = { nuclear_status_array = 1 } }
	}
}

has_N3 = {
	custom_trigger_tooltip = {
		tooltip = has_N3_TT
		is_in_array = { nuclear_status_array = 9 }
	}
}
has_NBOMB = {
	custom_trigger_tooltip = {
		tooltip = has_NBOMB_TT
		is_in_array = { nuclear_status_array = 10 }
	}
}
has_NICBM = {
	custom_trigger_tooltip = {
		tooltip = has_NICBM_TT
		is_in_array = { nuclear_status_array = 11 }
	}
}
has_SSBN = {
	custom_trigger_tooltip = {
		tooltip = has_SSBN_TT
		is_in_array = { nuclear_status_array = 12 }
	}
}

NOT_has_N3 = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_N3_TT
		NOT = { is_in_array = { nuclear_status_array = 9 } }
	}
}

NOT_has_PNW = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_PNW_TT
		NOT = { is_in_array = { nuclear_status_array = 0 } }
	}
}

can_research_nuclear_tech = {
	custom_trigger_tooltip = {
		tooltip = can_research_nuclear_tech_TT
		OR = {
			is_in_array = { nuclear_status_array = 1 }
			is_in_array = { nuclear_status_array = 3 }
			is_in_array = { nuclear_status_array = 4 }
			is_in_array = { nuclear_status_array = 6 }
			is_in_array = { nuclear_status_array = 7 }
			is_in_array = { nuclear_status_array = 8 }
			is_in_array = { nuclear_status_array = 9 }
			is_in_array = { nuclear_status_array = 10 }
			is_in_array = { nuclear_status_array = 11 }
			is_in_array = { nuclear_status_array = 12 }
		}
	}
}

can_produce_nuclear_energy = {
	custom_trigger_tooltip = {
		tooltip = can_produce_nuclear_energy_TT
		is_in_array = { nuclear_status_array = 9 }
	}
}

can_enrich_HEU = {
	custom_trigger_tooltip = {
		tooltip = can_enrich_HEU_TT
		is_in_array = { nuclear_status_array = 9 }
	}
}

can_produce_nuclear_warheads = {
	custom_trigger_tooltip = {
		tooltip = can_produce_nuclear_warheads_TT
		is_in_array = { nuclear_status_array = 9 }
	}
}

### nuclear status ###

has_NFU = {
	custom_trigger_tooltip = {
		tooltip = has_NFU_TT
		is_in_array = { nuclear_doctrine_array = 0 }
	}
}

NOT_has_NFU = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_NFU_TT
		NOT = { is_in_array = { nuclear_doctrine_array = 0 } }
	}
}

NOT_has_MASSR_FXRSP_NDESC_FSTK = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_MASSR_FXRSP_NDESC_FSTK_TT
		NOT = { is_in_array = { nuclear_doctrine_array = 2 } }
		NOT = { is_in_array = { nuclear_doctrine_array = 3 } }
		NOT = { is_in_array = { nuclear_doctrine_array = 5 } }
		NOT = { is_in_array = { nuclear_doctrine_array = 6 } }
	}
}


has_MAD = {
	custom_trigger_tooltip = {
		tooltip = has_MAD_TT
		is_in_array = { nuclear_doctrine_array = 1 }
	}
}

NOT_has_MASSR_FXRSP = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_MASSR_FXRSP_TT
		NOT = { is_in_array = { nuclear_doctrine_array = 2 } }
		NOT = { is_in_array = { nuclear_doctrine_array = 3 } }
	}
}

has_MASSR = {
	custom_trigger_tooltip = {
		tooltip = has_MASSR_TT
		is_in_array = { nuclear_doctrine_array = 2 }
	}
}

NOT_has_MAD_FXRSP = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_MAD_FXRSP_TT
		NOT = { is_in_array = { nuclear_doctrine_array = 1 } }
		NOT = { is_in_array = { nuclear_doctrine_array = 3 } }
	}
}

has_FXRSP = {
	custom_trigger_tooltip = {
		tooltip = has_FXRSP_TT
		is_in_array = { nuclear_doctrine_array = 3 }
	}
}

NOT_has_MAD_MASSR = {
	custom_trigger_tooltip = {
		tooltip = NOT_has_MAD_MASSR_TT
		NOT = { is_in_array = { nuclear_doctrine_array = 1 } }
		NOT = { is_in_array = { nuclear_doctrine_array = 2 } }
	}
}

has_PRMTR = {
	custom_trigger_tooltip = {
		tooltip = has_PRMTR_TT
		is_in_array = { nuclear_doctrine_array = 4 }
	}
}

has_NDESC = {
	custom_trigger_tooltip = {
		tooltip = has_NDESC_TT
		is_in_array = { nuclear_doctrine_array = 5 }
	}
}

has_FSTK = {
	custom_trigger_tooltip = {
		tooltip = has_FSTK_TT
		is_in_array = { nuclear_doctrine_array = 6 }
	}
}

has_RSTK = {
	custom_trigger_tooltip = {
		tooltip = has_RSTK_TT
		is_in_array = { nuclear_doctrine_array = 7 }
	}
}

has_NTERROR = {
	custom_trigger_tooltip = {
		tooltip = has_NTERROR_TT
		is_in_array = { nuclear_doctrine_array = 8 }
	}
}

### nuclear production ###
nuclear_warhead_prod_start_button_trigger = {
	custom_trigger_tooltip = {
		tooltip = nuclear_warhead_prod_start_trigger_TT
		tag = var:nukes_selected_TAG
		set_temp_variable = { temp1 = var_nuclear_warhead_prod }
		multiply_temp_variable = { temp1 = var_nuclear_warhead_critical_mass }
		OR = {
			check_variable = { var_nuclear_material_stockpile > temp1 }
			check_variable = { var_nuclear_material_stockpile = temp1 }
		}
	}
}