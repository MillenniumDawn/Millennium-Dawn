###################
### USoE events ###
###################

add_namespace = USoEevent ### next free ID 2
add_namespace = UOEEvent

#Military Revolting due to military revolt mechanic, or new government timeout
country_event = {
	id = UOEEvent.1
	title = UOEEvent.1.t
	desc = UOEEvent.1.d

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		tag = UOE
	}
	#peaceful coup
	option = {
		name = UOEEvent.1.a
		log = "[GetDateText]: [Root.GetName]: event UOEEvent.1.a"
		UOE = {
			set_temp_variable = { party_sel = ruling_party^0 }
			set_temp_variable = { party_amnt = party_pop_array^party_sel }

			add_to_temp_variable = { party_1 = party_amnt }
			add_to_temp_variable = { party_1 = party_pop_array^0 }

			set_variable = { party_pop_array^party_sel = 0 }
			set_variable = { party_pop_array^0 = party_1}

			clear_array = ruling_party
			add_to_array = { ruling_party = 0 }
			set_country_flag = military_takeover
			remove_mission = form_a_government
			remove_mission = military_coup_start
			remove_dynamic_modifier = { modifier = UOE_founding_a_new_nation_modifier }
		}

		ai_chance = {
			factor = 5
		}
	}
	#civil war
	option = {
		name = UOEEvent.1.b
		log = "[GetDateText]: [Root.GetName]: event UOEEvent.1.b"

		UOE = {
			#scale the ratio based on how much the military wants to revolt
			start_civil_war = {
				ideology = nationalist
				size = 0.6
				army_ratio = 0.6
				navy_ratio = 0.6
				air_ratio = 0.6
			}

			remove_mission = form_a_government
			remove_mission = military_coup_start
		}

		ai_chance = {
			factor = 2
		}
	}
}

#Low productivity states leaving due to unrest
country_event = {
	id = UOEEvent.2
	title = UOEEvent.2.t
	desc = UOEEvent.2.d

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		tag = UOE
	}

	option = {
		name = UOEEvent.2.a
		log = "[GetDateText]: [Root.GetName]: event UOEEvent.2.a"
		UOE = {
			set_country_flag = states_exited_due_eco
			every_controlled_state = {
				limit = { check_variable = { productivity_state_var < UOE.overall_productivity } }
				add_to_temp_variable = { state_lost_stab_mod = 0.01 }
				if = { limit = { is_in_array = { core_countries = UOE } }
					remove_core_of = UOE
				}
				set_temp_variable = { release_nation = core_countries^0 }
				if = {
					limit = {
						is_core_of = GER
					}
					log = "its a german state"
					transfer_state_to = GER
				}else = {
					transfer_state_to = var:release_nation
				}
				var:release_nation = {
					if = {
						limit = {
							NOT = {
								is_in_array = {
									array = global.uoe_rel_track
									value = THIS
								}
							}
						}
						add_to_array = { global.uoe_rel_track = THIS }
					}
					if = {
						limit = {
							has_idea = NATO_member
						}
						remove_ideas = NATO_member
					}
				}
			}
			add_to_variable = { military_revolt = state_lost_stab_mod }
			remove_mission = high_prod_state_revolt
		}
		set_temp_variable = { fac_nation = global.uoe_rel_track^0 }
		remove_from_array = { global.uoe_rel_track = fac_nation }
		var:fac_nation = {
			create_faction = alliance_european_states
		}
		for_each_loop = {
			array = global.uoe_rel_track
			value = state_to_join
			var:fac_nation = { add_to_faction = state_to_join }
		}

		ai_chance = {
			factor = 5
		}
	}
	option = {
		name = UOEEvent.2.b
		log = "[GetDateText]: [Root.GetName]: event UOEEvent.2.b"
		UOE = {
			start_civil_war = {
				ideology = neutrality
				states = all
				states_filter = {
					check_variable = { productivity_state_var < UOE.overall_productivity }
				}
			}
			set_country_flag = states_exited_due_eco
			remove_mission = high_prod_state_revolt
		}

		ai_chance = {
			factor = 1
		}
	}
}

#high producitivty states leaving due to unrest
country_event = {
	id = UOEEvent.3
	title = UOEEvent.3.t
	desc = UOEEvent.3.d

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		tag = UOE
	}

	option = {
		name = UOEEvent.3.a
		log = "[GetDateText]: [Root.GetName]: event UOEEvent.3.a"
		UOE = {
			set_country_flag = states_exited_due_eco
			every_controlled_state = {
				limit = { check_variable = { productivity_state_var > UOE.overall_productivity } }
				add_to_temp_variable = { state_lost_stab_mod = 0.01 }
				if = { limit = { is_in_array = { core_countries = UOE } }
					remove_core_of = UOE
				}
				set_temp_variable = { release_nation = core_countries^0 }
				if = {
					limit = {
						is_core_of = GER
					}
					transfer_state_to = GER
				}else = {
					transfer_state_to = var:release_nation
				}
				var:release_nation = {
					if = {
						limit = {
							NOT = {
								is_in_array = {
									array = global.uoe_rel_track
									value = THIS
								}
							}
						}
						add_to_array = { global.uoe_rel_track = THIS }
					}
					if = {
						limit = {
							has_idea = NATO_member
						}
						remove_ideas = NATO_member
					}
				}
			}
			add_to_variable = { military_revolt = state_lost_stab_mod }
			remove_mission = low_prod_state_revolt
		}
		set_temp_variable = { fac_nation = global.uoe_rel_track^0 }
		remove_from_array = { global.uoe_rel_track = fac_nation }
		var:fac_nation = {
			create_faction = alliance_european_states
		}
		for_each_loop = {
			array = global.uoe_rel_track
			value = state_to_join
			var:fac_nation = { add_to_faction = state_to_join }
		}

		ai_chance = {
			factor = 5
		}
	}
	option = {
		name = UOEEvent.3.b
		log = "[GetDateText]: [Root.GetName]: event UOEEvent.3.b"
		UOE = {
			start_civil_war = {
				ideology = neutrality
				states = all
				states_filter = {
					check_variable = { productivity_state_var > UOE.overall_productivity }
				}
			}
			set_country_flag = states_exited_due_eco
			remove_mission = low_prod_state_revolt
		}

		ai_chance = {
			factor = 1
		}
	}
}