###For industries going bankrupt, relocating &c.###

##Remember to Set Reduction Factor!!##
##Reduction factor is the percentage to remove, so for 10% reduction factor is 0.1
##This doesnt produce a tooltip so a scripted one is used.
##Tooltip: "Lose <reduction_factor>% of civilian factories."

remove_civilian_industry_effect = {
	#log = "ecovent100 eff: Lose ยงR[?reduction_factor|%0]ยง! of civilian factories."
	#log = "Ind: [?reduction_factor] [?reduction_factor|%0]"
	custom_effect_tooltip = remove_civilian_industry_effect_tt
	hidden_effect = {
		set_variable = { ind_factories = num_of_civilian_factories }
		log = "[This.GetName] Removing Industry, Factories: [?ind_factories], reduction factor: [?reduction_factor]"
		multiply_variable = {
			var = ind_factories
			value = reduction_factor
		}
		set_variable = { iterations = 0 }
		civ_factory_remove_loop_effect = yes
	}
}

##HoI doesn't have while = { } loops so this'll do for now.##
##Must set iterations before calling this effect.
civ_factory_remove_loop_effect = {
	hidden_effect = {
		log = "[This.GetName] Starting Removal Loop"
		if = {
			log = "[This.GetName] Removal Loop. Iteration: [?iterations]"
			limit = {
				check_variable = {
					var = iterations
					value = ind_factories
					compare = less_than
				}
			}
			random_owned_state = {
				remove_building = {
					type = industrial_complex
					level = 1
				}
				log = "[This.GetName] Removing industry in [This.GetName], [This.GetName]"
			}
			add_to_variable = {
				var = iterations
				value = 1
			}
			civ_factory_remove_loop_effect = yes
		}
	}
}

###Industry Relocates###
##Tooltip: "<reduction_factor>% of civilian factories move to <relocation_location>."
migrate_industry_to_random_effect = {
	hidden_effect = {
		random_country = {
			limit = {
				NOT = {
					has_idea = depression
					has_idea = recession
					has_idea = stagnation
				}
				has_war = no
				#num_of_controlled_states > ROOT #Should stop one-state country getting 50 factories. #Doesn't appear to work with scope reference
			}
			save_event_target_as = relocation_location
		}
	}
	custom_effect_tooltip = migrate_industry_to_random_effect_tt
	hidden_effect = {
		set_variable = { ind_factories = num_of_civilian_factories }
		log = "[This.GetName] Relocating Industry, Factories: [?ind_factories], reduction factor: [?reduction_factor]"
		multiply_variable = {
			var = ind_factories
			value = reduction_factor
		}
		set_variable = { iterations = 0 }
		civ_factory_remove_loop_effect = yes
		event_target:relocation_location = {
			country_event = {
				id = econvent.102
				days = 1
				random = 24
			}
		}
	}
}

# Remember to save_event_target_as = relocation_location before effect
migrate_industry_to_relocation_location_effect = {
	custom_effect_tooltip = migrate_industry_to_random_effect_tt
	hidden_effect = {
		set_variable = { ind_factories = num_of_civilian_factories }
		log = "[This.GetName] Relocating Industry, Factories: [?ind_factories], reduction factor: [?reduction_factor]"
		multiply_variable = {
			var = ind_factories
			value = reduction_factor
		}
		set_variable = { iterations = 0 }
		civ_factory_remove_loop_effect = yes
		event_target:relocation_location = {
			country_event = {
				id = econvent.102
				days = 1
				random = 24
			}
		}
	}
}

##HoI doesn't have while = { } loops so this'll do for now.##
##Must set iterations before calling this effect.
civ_factory_relocate_from_from_build_loop_effect = {
	hidden_effect = {
		log = "[This.GetName] Starting Construction Loop"
		if = {
			log = "[This.GetName] Construction Loop. Iteration: [?From.iterations]"
			limit = {
				FROM = { #To get ind_factories var
					check_variable = {
						var = iterations
						value = ind_factories
						compare = less_than
					}
				}
			}
			random_owned_state = {
				if = {
					limit = {
						free_building_slots = {
							building = industrial_complex
							size > 1
							include_locked = no
						}
					}
					add_building_construction = {
						type = industrial_complex
						level = 1
						instant_build = yes
					}
				}
				else = {
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = industrial_complex
						level = 1
						instant_build = yes
					}
				}
				log = "[This.GetName] Constructing industry in [This.GetName], [This.GetName]"
			}
			FROM = {
				add_to_variable = {
					var = iterations
					value = 1
				}
			}
			civ_factory_relocate_from_from_build_loop_effect = yes
		}
	}
}


### update state on init

2017_state_init_setup = {
	every_owned_state = {
		if = {
			limit = {
				has_state_category = state_00
				state_population_k > 300
			}
			set_state_category = state_01
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
				}
				state_population_k > 800
			}
			set_state_category = state_02
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
				}
				state_population_k > 1500
			}
			set_state_category = state_03
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
				}
				state_population_k > 2500
			}
			set_state_category = state_04
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
				}
				state_population_k > 3800
			}
			set_state_category = state_05
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
				}
				state_population_k > 5200
			}
			set_state_category = state_06
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
				}
				state_population_k > 6800
			}
			set_state_category = state_07
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
					has_state_category = state_07
				}
				state_population_k > 8500
			}
			set_state_category = state_08
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
					has_state_category = state_07
					has_state_category = state_08
				}
				state_population_k > 10500
			}
			set_state_category = state_09
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
					has_state_category = state_07
					has_state_category = state_08
					has_state_category = state_09
				}
				state_population_k > 13000
			}
			set_state_category = state_10
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
					has_state_category = state_07
					has_state_category = state_08
					has_state_category = state_09
					has_state_category = state_10
				}
				state_population_k > 16000
			}
			set_state_category = state_11
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
					has_state_category = state_07
					has_state_category = state_08
					has_state_category = state_09
					has_state_category = state_10
					has_state_category = state_11
				}
				state_population_k > 19000
			}
			set_state_category = state_12
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
					has_state_category = state_07
					has_state_category = state_08
					has_state_category = state_09
					has_state_category = state_10
					has_state_category = state_11
					has_state_category = state_12
				}
				state_population_k > 23000
			}
			set_state_category = state_13
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
					has_state_category = state_07
					has_state_category = state_08
					has_state_category = state_09
					has_state_category = state_10
					has_state_category = state_11
					has_state_category = state_12
					has_state_category = state_13
				}
				state_population_k > 27000
			}
			set_state_category = state_14
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
					has_state_category = state_07
					has_state_category = state_08
					has_state_category = state_09
					has_state_category = state_10
					has_state_category = state_11
					has_state_category = state_12
					has_state_category = state_13
					has_state_category = state_14
				}
				state_population_k > 34000
			}
			set_state_category = state_15
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
					has_state_category = state_07
					has_state_category = state_08
					has_state_category = state_09
					has_state_category = state_10
					has_state_category = state_11
					has_state_category = state_12
					has_state_category = state_13
					has_state_category = state_14
					has_state_category = state_15
				}
				state_population_k > 42000
			}
			set_state_category = state_16
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
					has_state_category = state_07
					has_state_category = state_08
					has_state_category = state_09
					has_state_category = state_10
					has_state_category = state_11
					has_state_category = state_12
					has_state_category = state_13
					has_state_category = state_14
					has_state_category = state_15
					has_state_category = state_16
				}
				state_population_k > 52000
			}
			set_state_category = state_17
		}
		if = {
			limit = {
				OR = {
					has_state_category = state_00
					has_state_category = state_01
					has_state_category = state_02
					has_state_category = state_03
					has_state_category = state_04
					has_state_category = state_05
					has_state_category = state_06
					has_state_category = state_07
					has_state_category = state_08
					has_state_category = state_09
					has_state_category = state_10
					has_state_category = state_11
					has_state_category = state_12
					has_state_category = state_13
					has_state_category = state_14
					has_state_category = state_15
					has_state_category = state_16
					has_state_category = state_17
				}
				state_population_k > 65000
			}
			set_state_category = state_18
		}
	}
}

# Decisions Calculator Costs
# Propaganda Cost Scripted Effect
propaganda_cost_scripted_effect = {
	# Determines what "band" you are in and sets to a flat cost.
	if = { limit = { check_variable = { num_of_factories < 9 } }
		set_temp_variable = { propaganda_cost_temp = 0.15 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 8 }
			check_variable = { num_of_factories < 15 }
		}
		set_temp_variable = { propaganda_cost_temp = 0.45 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 14 }
			check_variable = { num_of_factories < 26 }
		}
		set_temp_variable = { propaganda_cost_temp = 0.85 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 25 }
			check_variable = { num_of_factories < 40 }
		}
		set_temp_variable = { propaganda_cost_temp = 1.15 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 39 }
			check_variable = { num_of_factories < 50 }
		}
		set_temp_variable = { propaganda_cost_temp = 1.65 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 49 }
			check_variable = { num_of_factories < 75 }
		}
		set_temp_variable = { propaganda_cost_temp = 1.90 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 74 }
			check_variable = { num_of_factories < 100 }
		}
		set_temp_variable = { propaganda_cost_temp = 2.30 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 99 }
			check_variable = { num_of_factories < 125 }
		}
		set_temp_variable = { propaganda_cost_temp = 2.65 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 124 }
			check_variable = { num_of_factories < 150 }
		}
		set_temp_variable = { propaganda_cost_temp = 2.90 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 149 }
			check_variable = { num_of_factories < 200 }
		}
		set_temp_variable = { propaganda_cost_temp = 3.22 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 199 }
			check_variable = { num_of_factories < 250 }
		}
		set_temp_variable = { propaganda_cost_temp = 3.50 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 249 }
			check_variable = { num_of_factories < 300 }
		}
		set_temp_variable = { propaganda_cost_temp = 3.75 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 299 }
		}
		set_temp_variable = { propaganda_cost_temp = 4 }
	}

	# Modifiers to adjust the cost of the lease
	set_temp_variable = { propaganda_cost_multiplier = 1 }
	if = { limit = { has_country_flag = reduce_cost_of_propaganda_25 }
		subtract_from_temp_variable = { propaganda_cost_multiplier = 0.25 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_propaganda_15 }
		subtract_from_temp_variable = { propaganda_cost_multiplier = 0.15 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_propaganda_10 }
		subtract_from_temp_variable = { propaganda_cost_multiplier = 0.10 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_propaganda_5 }
		subtract_from_temp_variable = { propaganda_cost_multiplier = 0.05 }
	}

	# Modifies based off if the nation meets one of the above conditionals
	multiply_temp_variable = { propaganda_cost_temp = propaganda_cost_multiplier }

	# Calculate Weekly Expense
	multiply_temp_variable = { propaganda_cost_temp = 7 }

	set_variable = { propaganda_costs = propaganda_cost_temp }
}

projects_scripted_effect = {
	# Determines what "band" you are in and sets to a flat cost.
	if = { limit = { check_variable = { num_of_factories < 9 } }
		set_temp_variable = { project_cost_temp = 0.20 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 8 }
			check_variable = { num_of_factories < 15 }
		}
		set_temp_variable = { project_cost_temp = 0.65 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 14 }
			check_variable = { num_of_factories < 26 }
		}
		set_temp_variable = { project_cost_temp = 1.10 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 25 }
			check_variable = { num_of_factories < 40 }
		}
		set_temp_variable = { project_cost_temp = 1.35 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 39 }
			check_variable = { num_of_factories < 50 }
		}
		set_temp_variable = { project_cost_temp = 1.95 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 49 }
			check_variable = { num_of_factories < 75 }
		}
		set_temp_variable = { project_cost_temp = 2.45 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 74 }
			check_variable = { num_of_factories < 100 }
		}
		set_temp_variable = { project_cost_temp = 2.70 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 99 }
			check_variable = { num_of_factories < 125 }
		}
		set_temp_variable = { project_cost_temp = 3.05 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 124 }
			check_variable = { num_of_factories < 150 }
		}
		set_temp_variable = { project_cost_temp = 3.40 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 149 }
			check_variable = { num_of_factories < 200 }
		}
		set_temp_variable = { project_cost_temp = 3.95 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 199 }
			check_variable = { num_of_factories < 250 }
		}
		set_temp_variable = { project_cost_temp = 4.05 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 249 }
			check_variable = { num_of_factories < 300 }
		}
		set_temp_variable = { project_cost_temp = 4.50 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 299 }
		}
		set_temp_variable = { project_cost_temp = 5 }
	}

	# Modifiers to adjust the cost of the lease
	set_temp_variable = { project_cost_multiplier = 1 }
	if = { limit = { has_country_flag = reduce_cost_of_projects_25 }
		subtract_from_temp_variable = { project_cost_multiplier = 0.25 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_projects_15 }
		subtract_from_temp_variable = { project_cost_multiplier = 0.15 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_projects_10 }
		subtract_from_temp_variable = { project_cost_multiplier = 0.10 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_projects_5 }
		subtract_from_temp_variable = { project_cost_multiplier = 0.05 }
	}

	# Modifies based off if the nation meets one of the above conditionals
	multiply_temp_variable = { project_cost_temp = project_cost_multiplier }

	# Calculate Weekly Expense
	multiply_temp_variable = { project_cost_temp = 7 }

	set_variable = { projects_costs = project_cost_temp }
}

# Leasing Military Factories Cost
lease_military_factories_cost = {
	# Determines what "band" you are in and sets to a flat cost.
	if = { limit = { check_variable = { num_of_factories < 9 } }
		set_temp_variable = { leased_military_economy_cost_temp = 0.50 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 8 }
			check_variable = { num_of_factories < 15 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 0.90 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 14 }
			check_variable = { num_of_factories < 26 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 1.25 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 25 }
			check_variable = { num_of_factories < 40 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 1.70 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 39 }
			check_variable = { num_of_factories < 50 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 2.05 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 49 }
			check_variable = { num_of_factories < 75 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 2.55 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 74 }
			check_variable = { num_of_factories < 100 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 2.90 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 99 }
			check_variable = { num_of_factories < 125 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 3.10 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 124 }
			check_variable = { num_of_factories < 150 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 3.45 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 149 }
			check_variable = { num_of_factories < 200 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 4.25 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 199 }
			check_variable = { num_of_factories < 250 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 4.90 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 249 }
			check_variable = { num_of_factories < 300 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 5.45 }
	}
	else_if = {
		limit = {
			check_variable = { num_of_factories > 299 }
		}
		set_temp_variable = { leased_military_economy_cost_temp = 6.0 }
	}

	# Modifiers to adjust the cost of the lease
	set_temp_variable = { lease_mils_cost_multiplier = 1 }
	if = { limit = { has_country_flag = reduce_cost_of_leased_mils_25 }
		subtract_from_temp_variable = { lease_mils_cost_multiplier = 0.25 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_leased_mils_15 }
		subtract_from_temp_variable = { lease_mils_cost_multiplier = 0.15 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_leased_mils_10 }
		subtract_from_temp_variable = { lease_mils_cost_multiplier = 0.10 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_leased_mils_5 }
		subtract_from_temp_variable = { lease_mils_cost_multiplier = 0.05 }
	}

	# Modifies based off if the nation meets one of the above conditionals
	multiply_temp_variable = { leased_military_economy_cost_temp = lease_mils_cost_multiplier }

	# Calculate Weekly Expense
	multiply_temp_variable = { leased_military_economy_cost_temp = 7 }

	set_variable = { leased_military_economy_cost = leased_military_economy_cost_temp }
}

# Leased Civilian Industries "Band" Calculator
lease_civilian_complex_cost = {
	# Determines what "band" you are in and sets to a flat cost.
	if = { limit = { check_variable = { num_of_factories < 9 } }
		set_temp_variable = { leased_civilian_economy_cost_temp = 0.40 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 8 }
			check_variable = { num_of_factories < 15 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 0.75 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 14 }
			check_variable = { num_of_factories < 26 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 1.15 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 25 }
			check_variable = { num_of_factories < 40 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 1.60 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 39 }
			check_variable = { num_of_factories < 50 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 1.95 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 49 }
			check_variable = { num_of_factories < 75 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 2.35 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 74 }
			check_variable = { num_of_factories < 100 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 2.65 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 99 }
			check_variable = { num_of_factories < 125 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 2.95 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 124 }
			check_variable = { num_of_factories < 150 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 3.20 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 149 }
			check_variable = { num_of_factories < 200 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 3.70 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 199 }
			check_variable = { num_of_factories < 250 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 4.0 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 249 }
			check_variable = { num_of_factories < 300 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 4.25 }
	}
	if = {
		limit = {
			check_variable = { num_of_factories > 299 }
		}
		set_temp_variable = { leased_civilian_economy_cost_temp = 4.50 }
	}

	# Modifiers to adjust the cost of the lease
	set_temp_variable = { lease_civs_cost_multiplier = 1 }
	if = { limit = { has_country_flag = reduce_cost_of_leased_civs_25 }
		subtract_from_temp_variable = { lease_civs_cost_multiplier = 0.25 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_leased_civs_15 }
		subtract_from_temp_variable = { lease_civs_cost_multiplier = 0.15 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_leased_civs_10 }
		subtract_from_temp_variable = { lease_civs_cost_multiplier = 0.10 }
	}
	if = { limit = { has_country_flag = reduce_cost_of_leased_civs_5 }
		subtract_from_temp_variable = { lease_civs_cost_multiplier = 0.05 }
	}

	# Modifies based off if the nation meets one of the above conditionals
	multiply_temp_variable = { leased_civilian_economy_cost_temp = lease_civs_cost_multiplier }

	# Calculate Weekly Expense
	multiply_temp_variable = { leased_civilian_economy_cost_temp = 7 }

	set_variable = { leased_civilian_economy_cost = leased_civilian_economy_cost_temp }
}