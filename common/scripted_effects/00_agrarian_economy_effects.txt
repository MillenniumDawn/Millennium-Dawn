AGRI_plant_the_seeds = {
	if = { limit = { is_agrarian_economy = yes }
		add_ideas = agrarian_economy
		AGRI_difficulty_settings = yes
	}
}

AGRI_difficulty_settings = {
	if = { limit = { is_ai = no }
		if = {
			limit = { difficulty < 1 }
			add_to_variable = { agri_crop_price^0 = 10 }
			add_to_variable = { agri_crop_price^1 = 15 }
		}
		if = {
			limit = {
				difficulty > 0
				difficulty < 2
			}
			add_to_variable = { agri_crop_price^0 = 5 }
			add_to_variable = { agri_crop_price^1 = 10 }
		}
		if = {
			limit = {
				difficulty > 2
				difficulty < 4
			}
			add_to_variable = { agri_crop_price^0 = -5 }
			add_to_variable = { agri_crop_price^1 = -10 }
		}
		if = {
			limit = {
				difficulty > 3
				difficulty < 5
			}
			add_to_variable = { agri_crop_price^0 = -10 }
			add_to_variable = { agri_crop_price^1 = -15 }
		}
	}
	if = { limit = { is_ai = yes }
		if = {
			limit = {
				difficulty > 2
				difficulty < 4
			}
			add_to_variable = { agri_crop_price^0 = 5 }
			add_to_variable = { agri_crop_price^1 = 10 }
		}
		if = {
			limit = {
				difficulty > 3
				difficulty < 5
			}
			add_to_variable = { agri_crop_price^0 = 10 }
			add_to_variable = { agri_crop_price^1 = 15 }
		}
	}
	AGRI_update_math_variables = yes
}

AGRI_civil_war = {
	if = {
		limit = { FROM = { is_agrarian_economy = yes } }
		AGRI_plant_the_seeds = yes
		set_variable = { ROOT.agri_crop_allocation^0 = FROM.agri_crop_allocation^0 }
		set_variable = { ROOT.agri_crop_allocation^1 = FROM.agri_crop_allocation^1 }
		set_variable = { ROOT.agri_crop_price^0 = FROM.agri_crop_price^0 }
		set_variable = { ROOT.agri_crop_price^1 = FROM.agri_crop_price^1 }
		AGRI_difficulty_settings = yes
	}
}

AGRI_allocation_change_effect = {
	set_temp_variable = { AGRI_allocation_addition = allocation_change }
	set_temp_variable = { AGRI_allocation_subtraction = allocation_change }
	multiply_temp_variable = { AGRI_allocation_subtraction = -1 }
	if = { # SELF CORRECTING EFFECT (REDUCES AMOUNT OF CODE NEEDED IN CALLING EFFECT)
		limit = { check_variable = { crop_type = 0 } }
		if = {
			limit = { check_variable = { allocation_change > 0 } }
			add_to_variable = { agri_crop_allocation^0 = AGRI_allocation_addition }
			add_to_variable = { agri_crop_allocation^1 = AGRI_allocation_subtraction }
		}
		else = {
			add_to_variable = { agri_crop_allocation^0 = AGRI_allocation_subtraction }
			add_to_variable = { agri_crop_allocation^1 = AGRI_allocation_addition }
		}
	}
	if = {
		limit = { check_variable = { crop_type = 1 } }
		if = {
			limit = { check_variable = { allocation_change > 0 } }
			add_to_variable = { agri_crop_allocation^0 = AGRI_allocation_subtraction }
			add_to_variable = { agri_crop_allocation^1 = AGRI_allocation_addition }
		}
		else = {
			add_to_variable = { agri_crop_allocation^0 = AGRI_allocation_addition }
			add_to_variable = { agri_crop_allocation^1 = AGRI_allocation_subtraction }
		}
	}
	clamp_variable = {
		var = agri_crop_allocation^crop_type
		min = 0
		max = 1
	}
	custom_effect_tooltip = AGRI_allocation_change_effect_TT
}

AGRI_price_change_effect = {
	add_to_variable = { agri_crop_price^crop_type = price_change }
	clamp_variable = {
		var = agri_crop_price^crop_type
		min = 0
		max = 50
	}
	custom_effect_tooltip = agri_price_change
}

AGRI_protection_update = {
	add_to_variable = { AGRI_protection = AGRI_protections_change }
	custom_effect_tooltip = AGRI_protections_effect
}

AGRI_banked_changes_update_basic = {
	log = "[GetDateText]: [ROOT.GetName]: Running Effect: AGRI_banked_changes_update_basic"
	set_variable = { AGRI_PP_calculate_basic = AGRI_banked_changes_cash }
	multiply_variable = { AGRI_PP_calculate_basic = 1000 }
	set_variable = { AGRI_pp_cost = AGRI_PP_calculate_basic }
	set_variable = { AGRI_pp_check = AGRI_pp_cost }
	multiply_variable = { AGRI_pp_check = -1 }
	log = "[GetDateText]: [ROOT.GetName]: Effect Completed: AGRI_banked_changes_update_basic"
}

AGRI_banked_changes_update_cash = {
	log = "[GetDateText]: [ROOT.GetName]: Running Effect: AGRI_banked_changes_update_cash"
	set_variable = { AGRI_PP_calculate_cash = AGRI_banked_changes_basic }
	multiply_variable = { AGRI_PP_calculate_cash = 1000 }
	set_variable = { AGRI_pp_cost = AGRI_PP_calculate_cash }
	set_variable = { AGRI_pp_check = AGRI_pp_cost }
	multiply_variable = { AGRI_pp_check = -1 }
	log = "[GetDateText]: [ROOT.GetName]: Effect Completed: AGRI_banked_changes_update_cash"
}

AGRI_clear_banked_variables = {
	clear_variable = AGRI_banked_changes_basic
	clear_variable = AGRI_banked_changes_cash
	clear_variable = AGRI_pp_cost
}

AGRI_monthly_changes_math = {
	set_variable = { AGRI_monthly_changes_basic = AGRI_banked_changes_basic }
	divide_variable = { AGRI_monthly_changes_basic = 2 }
	set_variable = { AGRI_monthly_changes_cash = AGRI_banked_changes_cash }
	divide_variable = { AGRI_monthly_changes_cash = 2 }
}

AGRI_update_math_variables = {
	log = "[GetDateText]: [ROOT.GetName]: Running Effect: AGRI_update_math_variables"
	# CROP OUTPUT
	set_variable = { basic_crop_output = agriculture_workers }
	multiply_variable = { basic_crop_output = agri_crop_allocation^0 }
	set_variable = { cash_crop_output = agriculture_workers }
	multiply_variable = { cash_crop_output = agri_crop_allocation^1 }
	# CROP TOTAL VALUE
	set_variable = { basic_crop_total_value = basic_crop_output }
	multiply_variable = { basic_crop_total_value = agri_crop_price^0 }
	set_variable = { cash_crop_total_value = cash_crop_output }
	multiply_variable = { cash_crop_total_value = agri_crop_price^1 }
	# TOTAL CROP INCOME
	set_variable = { combined_crop_value = basic_crop_total_value }
	add_to_variable = { combined_crop_value = cash_crop_total_value }
	# Before working out math from literacy rate, it multiplies by 1.85
	multiply_variable = { combined_crop_value = 1.85 }
	# ADDITIONAL MATH FOR THE NEW MODIFIER
	set_temp_variable = { AGRI_income_modifier_temp = 1 }
	add_to_temp_variable = { AGRI_income_modifier_temp = modifier@AGRI_agrarian_economy_income_modifier }
	multiply_variable = { combined_crop_value = AGRI_income_modifier_temp }
	# YEARLY HARVEST
	set_variable = { yearly_harvest_value = combined_crop_value }
	divide_variable = { yearly_harvest_value = literacy_rate }
	# ADDITIONAL INCOME
	set_variable = { weekly_harvest_value = yearly_harvest_value }
	divide_variable = { weekly_harvest_value = 52 }
	# BILLION CONVERTER
	set_variable = { weekly_harvest_billion = weekly_harvest_value }
	divide_variable = { weekly_harvest_billion = 100 }
	# VARIABLE DISPLAY MATH
	# ANNUAL HARVEST DISPLAY
	set_variable = { annual_harvest_display = yearly_harvest_value }
	divide_variable = { annual_harvest_display = 10 }
	# WEEKLY HARVEST DISPLAY
	set_variable = { weekly_harvest_display = weekly_harvest_value }
	multiply_variable = { weekly_harvest_display = 100 }
	log = "[GetDateText]: [ROOT.GetName]: Effect Completed: AGRI_update_math_variables"
}

AGRI_plow_the_fields = {
	if = { # ALLOCATION CHANGES
		limit = {
			OR = {
				has_country_flag = agriculture_allocation_drift_basic
				has_country_flag = agriculture_allocation_drift_cash
			}
		}
		set_temp_variable = { allocation_change = AGRI_monthly_changes_basic }
		set_temp_variable = { crop_type = 0 }
		AGRI_allocation_change_effect = yes
		set_temp_variable = { allocation_change = AGRI_monthly_changes_cash }
		set_temp_variable = { crop_type = 1 }
		AGRI_allocation_change_effect = yes
	}
}

AGRI_give_tobacco_company_rights = {
	if = {
		limit = {
			var:nation_with_land = {
				var:nation_with_industry = {
					NOT = { has_country_flag = AGRI_tobacco_rights@PREV }
				}
			}
		}
		var:nation_with_land = {
			set_country_flag = {
				flag = AGRI_sold_rights_TOB
				value = 1
				days = 360
			}
			var:nation_with_industry = {
				hidden_effect = {
					set_country_flag = {
						flag = AGRI_tobacco_rights@PREV
						value = 1
						days = 360
					}
					var:nation_with_land = {
						set_country_flag = {
							flag = AGRI_tobacco_rights@PREV
							value = 1
							days = 360
						}
					}
				}
			}
		}
		custom_effect_tooltip = AGRI_give_tobacco_company_rights_SELLING_TT
	}
	else = { custom_effect_tooltip = AGRI_give_tobacco_company_rights_SOLD_TT }
}

AGRI_give_tea_company_rights = {
	if = {
		limit = {
			var:nation_with_land = {
				var:nation_with_industry = {
					NOT = { has_country_flag = AGRI_tea_rights@PREV }
				}
			}
		}
		var:nation_with_land = {
			set_country_flag = {
				flag = AGRI_sold_rights_TEA
				value = 1
				days = 360
			}
			var:nation_with_industry = {
				hidden_effect = {
					set_country_flag = {
						flag = AGRI_tea_rights@PREV
						value = 1
						days = 360
					}
					var:nation_with_land = {
						set_country_flag = {
							flag = AGRI_tea_rights@PREV
							value = 1
							days = 360
						}
					}
				}
			}
		}
		custom_effect_tooltip = AGRI_give_tea_company_rights_SELLING_TT
	}
	else = { custom_effect_tooltip = AGRI_give_tea_company_rights_SOLD_TT }
}

# changes to the agricultural economy

# seasonal changes to allocation/crop rotation
# regional successes/failures due to "collected" weather patterns, which will allow for natural disasters
# literacy affects caps for employment of developed economic buildings, with toggle for removing this due to country
# content, lowest possible is 25%
# low literacy increases cap of employment in commercial agricultural buildings up to 300%
# low literacy also allows for a larger workforce broadly to represent children in the workforce
# if there is no commercial agriculture then the amount of non commercial agriculture workers is increased to balance it out

# giving rights to land will cap the selected crop type allocation by a set amount, with no way to go below that amount,
# the amount taken will be a set amount per week but will reduce the total income from the agrarian economy idea
# make the effect able to use various inputs for loc

AGRI_sell_land_rights = {
	if = {
		limit = { AGRI_can_sell_land_rights = yes }
		if = {
			limit = { check_variable = { crop_type = cash } }
			if = {
				limit = {
					var:nation_with_land = {
						var:nation_with_industry = { NOT = { has_country_flag = AGRI_cash_rights@PREV } }
					}
				}
				var:nation_with_land = {
					set_country_flag = {
						flag = AGRI_cash_rights_sold
						value = 1
						days = 360
					}
					var:nation_with_industry = {
						hidden_effect = {
							set_country_flag = {
								flag = AGRI_cash_rights@PREV
								value = 1
								days = 360
							}
							var:nation_with_land = {
								set_country_flag = {
									flag = AGRI_cash_rights@PREV
									value = 1
									days = 360
								}
							}
						}
					}
				}
				custom_effect_tooltip = AGRI_cash_crop_rights_SELLING_TT
			}
			else_if = {
				limit = {
					var:nation_with_land = {
						var:nation_with_industry = { has_country_flag = AGRI_cash_rights@PREV }
					}
				}
				var:nation_with_land = {
					modify_country_flag = {
						flag = AGRI_cash_rights_sold
						days = 360
					}
					var:nation_with_industry = {
						hidden_effect = {
							modify_country_flag = {
								flag = AGRI_cash_rights@PREV
								days = 360
							}
							var:nation_with_land = {
								modify_country_flag = {
									flag = AGRI_cash_rights@PREV
									days = 360
								}
							}
						}
					}
				}
				custom_effect_tooltip = AGRI_cash_crop_rights_RENEWING_TT
			}
			add_to_variable = { AGRI_cash_crop_allocation = 1 }
		}
		if = {
			limit = { check_variable = { crop_type = staple } }
			if = {
				limit = {
					var:nation_with_land = {
						var:nation_with_industry = { NOT = { has_country_flag = AGRI_staple_rights@PREV } }
					}
				}
				var:nation_with_land = {
					set_country_flag = {
						flag = AGRI_staple_rights_sold
						value = 1
						days = 360
					}
					var:nation_with_industry = {
						hidden_effect = {
							set_country_flag = {
								flag = AGRI_staple_rights@PREV
								value = 1
								days = 360
							}
							var:nation_with_land = {
								set_country_flag = {
									flag = AGRI_staple_rights@PREV
									value = 1
									days = 360
								}
							}
						}
					}
				}
				custom_effect_tooltip = AGRI_staple_crop_rights_SELLING_TT
			}
			else_if = {
				limit = {
					var:nation_with_land = {
						var:nation_with_industry = { has_country_flag = AGRI_staple_rights@PREV }
					}
				}
				var:nation_with_land = {
					modify_country_flag = {
						flag = AGRI_staple_rights_sold
						days = 360
					}
					var:nation_with_industry = {
						hidden_effect = {
							modify_country_flag = {
								flag = AGRI_staple_rights@PREV
								days = 360
							}
							var:nation_with_land = {
								modify_country_flag = {
									flag = AGRI_staple_rights@PREV
									days = 360
								}
							}
						}
					}
				}
				custom_effect_tooltip = AGRI_staple_crop_rights_RENEWING_TT
			}
			add_to_variable = { AGRI_staple_crop_allocation = 1 }
		}
	}
	else = { custom_effect_tooltip = AGRI_sell_land_rights_BLOCKED_TT }
}

# each allocation is "1"
# the allocation math is dependant on a variable percentage that can change
# the income is dependant on percentage allocated to the sold rights

# that land rights income is then removed from the regular income, akin to how
# resource exports work

# VARIABLES TO MAKE
	# 1, 2, 3, etc.
	# cash crop allocation contracts
	# staple crop allocation contracts

	# percentage
	# cash crop allocation contract increments
	# staple crop allocation contract increments

	# 3 digit 0.100 etc.
	# allocation contract income amount (can do a modifier for this based on fopol things perhaps)

	# 1, 2, 3, etc. probably double digits
	# cash crop output		monthly
	# staple crop output	monthly

	# double digit integer
	# cash crop prices
	# staple crop prices
# math mockup
	# LITERACY
	# literacy rate = 0.641 (64.1%)
	# literacy production multiplier = 0.359 (35.9%)

	# WORKER & PRODUCTION
	# non commercial agriculture = 8.421
	# nc agri prod modifier = 1.359 (35.9% illiteracy modifier)
	# nc agri prod multiplier (default) = 1
	# nc agri prod = 11.444
	# commercial agriculture = 1.244
	# c agri prod modifier = 1 (no modifier)
	# c agri prod multiplier (default) = 1.5
	# c agri prod = 1.866
	# total agriculture sector = 9.665
	# total agri prod = 13.310
AGRI_update_agricultural_math = {
	AGRI_update_production_calculations = yes
	AGRI_update_allocation_calculations = yes
	AGRI_update_price_calculations = yes
}

AGRI_update_production_calculations = {
	log = "[GetDateText]: [ROOT.GetName]: Running Effect: AGRI_update_production_calculations"
	# TOTAL PRODUCTION MODIFIER
	set_temp_variable = { AGRI_total_production_modifier_temp = 1 }
	add_to_temp_variable = { AGRI_total_production_modifier_temp = modifier@AGRI_total_production_modifier }

	# NON-COMMERCIAL PRODUCTION MODIFIER
	set_temp_variable = { AGRI_noncom_production_modifier_temp = 1 }
	add_to_temp_variable = { AGRI_noncom_production_modifier_temp = modifier@AGRI_noncom_production_modifier }
	# NON-COMMERCIAL PRODUCTION MATH
	set_temp_variable = { AGRI_noncom_crop_output_temp = agriculture_workers }
	multiply_temp_variable = { AGRI_noncom_crop_output_temp = AGRI_noncom_production_modifier_temp }
	multiply_temp_variable = { AGRI_noncom_crop_output_temp = AGRI_total_production_modifier_temp }
	set_variable = { AGRI_crop_output_weekly_display_NONCOM = AGRI_noncom_crop_output_temp }
	set_variable = { AGRI_crop_output_annual_display_NONCOM = AGRI_noncom_crop_output_temp }
	multiply_variable = { AGRI_crop_output_annual_display_NONCOM = 52 }

	# COMMERCIAL PRODUCTION MODIFIER
	set_temp_variable = { AGRI_com_production_modifier_temp = 1 }
	add_to_temp_variable = { AGRI_com_production_modifier_temp = modifier@AGRI_com_production_modifier }
	# COMMERCIAL PRODUCTION MATH
	set_temp_variable = { AGRI_com_crop_output_temp = workers_in_agriculture_district }
	multiply_temp_variable = { AGRI_com_crop_output_temp = 1.5 }
	multiply_temp_variable = { AGRI_com_crop_output_temp = AGRI_com_production_modifier_temp }
	multiply_temp_variable = { AGRI_com_crop_output_temp = AGRI_total_production_modifier_temp }
	set_variable = { AGRI_crop_output_weekly_display_COM = AGRI_com_crop_output_temp }
	set_variable = { AGRI_crop_output_annual_display_COM = AGRI_com_crop_output_temp }
	multiply_variable = { AGRI_crop_output_annual_display_COM = 52 }

	# TOTAL PRODUCTION MATH
	set_temp_variable = { AGRI_total_crop_output_temp = AGRI_noncom_crop_output_temp }
	add_to_temp_variable = { AGRI_total_crop_output_temp = AGRI_com_crop_output_temp }
	set_variable = { AGRI_crop_output_weekly_display_T = AGRI_total_crop_output_temp }
	set_variable = { AGRI_crop_output_annual_display_T = AGRI_total_crop_output_temp }
	multiply_variable = { AGRI_crop_output_annual_display_T = 52 }
	log = "[GetDateText]: [ROOT.GetName]: Effect Completed: AGRI_update_production_calculations"
}

AGRI_update_allocation_calculations = {
	log = "[GetDateText]: [ROOT.GetName]: Running Effect: AGRI_update_allocation_calculations"
	# CASH CROP
	set_temp_variable = { AGRI_cash_crop_output_temp = AGRI_crop_output_weekly_display_T }
	set_temp_variable = { AGRI_cash_crop_allocation_temp = AGRI_field_allocation^0 }
	# subtracts the contracted land allocation from the regular income
	subtract_from_temp_variable = { AGRI_cash_crop_allocation_temp = AGRI_cash_crop_land_rights_CON }
	multiply_temp_variable = { AGRI_cash_crop_output_temp = AGRI_cash_crop_allocation_temp }
	set_variable = { AGRI_crop_output_weekly_display_CASH = AGRI_cash_crop_output_temp }
	set_variable = { AGRI_crop_output_annual_display_CASH = AGRI_cash_crop_output_temp }
	multiply_variable = { AGRI_crop_output_annual_display_CASH = 52 }

	# ILLICIT CROP
	set_temp_variable = { AGRI_illicit_crop_output_temp = AGRI_crop_output_weekly_display_T }
	set_temp_variable = { AGRI_illicit_crop_output_temp = AGRI_field_allocation^1 }
	# subtracts the contracted land allocation from the regular income
	subtract_from_temp_variable = { AGRI_illicit_crop_allocation_temp = AGRI_illicit_crop_land_rights_CON }
	multiply_temp_variable = { AGRI_illicit_crop_output_temp = AGRI_illicit_crop_allocation_temp }
	set_variable = { AGRI_crop_output_weekly_display_ILLICIT = AGRI_illicit_crop_output_temp }
	set_variable = { AGRI_crop_output_annual_display_ILLICIT = AGRI_illicit_crop_output_temp }
	multiply_variable = { AGRI_crop_output_annual_display_ILLICIT = 52 }

	# STAPLE CROP
	set_temp_variable = { AGRI_staple_crop_output_temp = AGRI_crop_output_weekly_display_T }
	set_temp_variable = { AGRI_staple_crop_allocation_temp = AGRI_field_allocation^2 }
	# subtracts the contracted land allocation from the regular income
	subtract_from_temp_variable = { AGRI_staple_crop_allocation_temp = AGRI_staple_crop_land_rights_CON }
	multiply_temp_variable = { AGRI_staple_crop_output_temp = AGRI_staple_crop_allocation_temp }
	set_variable = { AGRI_crop_output_weekly_display_STAPLE = AGRI_staple_crop_output_temp }
	set_variable = { AGRI_crop_output_annual_display_STAPLE = AGRI_staple_crop_output_temp }
	multiply_variable = { AGRI_crop_output_annual_display_STAPLE = 52 }

	# ALLOCATION POOL MATH
	set_temp_variable = { AGRI_allocation_pool_temp = 1 }
	subtract_from_temp_variable = { AGRI_allocation_pool_temp = AGRI_field_allocation^0 }
	subtract_from_temp_variable = { AGRI_allocation_pool_temp = AGRI_field_allocation^1 }
	subtract_from_temp_variable = { AGRI_allocation_pool_temp = AGRI_field_allocation^2 }
	set_variable = { AGRI_allocation_pool = AGRI_allocation_pool_temp }

	log = "[GetDateText]: [ROOT.GetName]: Running Effect: AGRI_update_allocation_calculations"
}

AGRI_update_price_calculations = {
	log = "[GetDateText]: [ROOT.GetName]: Running Effect: AGRI_update_price_calculations"
	# TOTAL CROP INCOME MODIFIER
	set_temp_variable = { AGRI_total_income_modifier_temp = 1 }
	add_to_temp_variable = { AGRI_total_income_modifier_temp = modifier@AGRI_total_income_modifier }

	# CASH CROP INCOME MODIFIER
	set_temp_variable = { AGRI_cash_income_modifier_temp = 1 }
	add_to_temp_variable = { AGRI_cash_income_modifier_temp = modifier@AGRI_cash_income_modifier }
	# CASH CROP INCOME MATH
	set_temp_variable = { AGRI_cash_crop_income_temp = AGRI_crop_output_weekly_display_CASH }
	multiply_temp_variable = { AGRI_cash_crop_income_temp = AGRI_crop_price^0 }
	multiply_temp_variable = { AGRI_cash_crop_income_temp = AGRI_cash_income_modifier_temp }
	multiply_temp_variable = { AGRI_cash_crop_income_temp = AGRI_total_income_modifier_temp }
	divide_temp_variable = { AGRI_cash_crop_income_temp = 200 }
	set_variable = { AGRI_crop_income_weekly_display_CASH = AGRI_cash_crop_income_temp }
	set_variable = { AGRI_crop_income_annual_display_CASH = AGRI_cash_crop_income_temp }
	multiply_variable = { AGRI_crop_income_annual_display_CASH = 52 }

	# ILLICIT CROP INCOME MODIFIER
	set_temp_variable = { AGRI_illicit_income_modifier_temp = 1 }
	add_to_temp_variable = { AGRI_illicit_income_modifier_temp = modifier@AGRI_illicit_income_modifier }
	# ILLICIT CROP INCOME MATH
	set_temp_variable = { AGRI_illicit_crop_income_temp = AGRI_crop_output_weekly_display_STAPLE }
	multiply_temp_variable = { AGRI_illicit_crop_income_temp = AGRI_crop_price^1 }
	multiply_temp_variable = { AGRI_illicit_crop_income_temp = AGRI_illicit_income_modifier_temp }
	multiply_temp_variable = { AGRI_illicit_crop_income_temp = AGRI_total_income_modifier_temp }
	divide_temp_variable = { AGRI_illicit_crop_income_temp = 200 }
	set_variable = { AGRI_crop_income_weekly_display_STAPLE = AGRI_illicit_crop_income_temp }
	set_variable = { AGRI_crop_income_annual_display_STAPLE = AGRI_illicit_crop_income_temp }
	multiply_variable = { AGRI_crop_income_annual_display_STAPLE = 52 }

	# STAPLE CROP INCOME MODIFIER
	set_temp_variable = { AGRI_staple_income_modifier_temp = 1 }
	add_to_temp_variable = { AGRI_staple_income_modifier_temp = modifier@AGRI_staple_income_modifier }
	# STAPLE CROP INCOME MATH
	set_temp_variable = { AGRI_staple_crop_income_temp = AGRI_crop_output_weekly_display_STAPLE }
	multiply_temp_variable = { AGRI_staple_crop_income_temp = AGRI_crop_price^2 }
	multiply_temp_variable = { AGRI_staple_crop_income_temp = AGRI_staple_income_modifier_temp }
	multiply_temp_variable = { AGRI_staple_crop_income_temp = AGRI_total_income_modifier_temp }
	divide_temp_variable = { AGRI_staple_crop_income_temp = 200 }
	set_variable = { AGRI_crop_income_weekly_display_STAPLE = AGRI_staple_crop_income_temp }
	set_variable = { AGRI_crop_income_annual_display_STAPLE = AGRI_staple_crop_income_temp }
	multiply_variable = { AGRI_crop_income_annual_display_STAPLE = 52 }

	# TOTAL INCOME MATH
	set_temp_variable = { AGRI_total_crop_income_temp = AGRI_crop_income_weekly_display_CASH }
	add_to_temp_variable = { AGRI_total_crop_income_temp = AGRI_crop_income_weekly_display_STAPLE }
	set_variable = { AGRI_crop_income_weekly_display_TOTAL = AGRI_total_crop_income_temp }
	set_variable = { AGRI_crop_income_annual_display_TOTAL = AGRI_total_crop_income_temp }
	multiply_variable = { AGRI_crop_income_annual_display_TOTAL = 52 }
	log = "[GetDateText]: [ROOT.GetName]: Running Effect: AGRI_update_price_calculations"
}

AGRI_bank_change = {
	if = {
		limit = { has_country_flag = AGRI_selected_CASH }
		add_to_variable = { AGRI_banked_allocation_pool_CASH = AGRI_banked_pool_change }
	}
	if = {
		limit = { has_country_flag = AGRI_selected_ILLICIT }
		add_to_variable = { AGRI_banked_allocation_pool_ILLICIT = AGRI_banked_pool_change }
	}
	if = {
		limit = { has_country_flag = AGRI_selected_STAPLE }
		add_to_variable = { AGRI_banked_allocation_pool_STAPLE = AGRI_banked_pool_change }
	}
	custom_effect_tooltip = AGRI_bank_change_TT
}

AGRI_make_allocation_changes_from_bank = {
	if = {
		limit = { check_variable = { AGRI_banked_allocation_pool_CASH > 0 } }
		set_temp_variable = { AGRI_allocation_changes_CASH_temp = AGRI_banked_allocation_pool_CASH }
		add_to_variable = { AGRI_field_allocation^0 = AGRI_allocation_changes_CASH_temp }
		add_to_temp_variable = { AGRI_allocation_changes_temp = AGRI_allocation_changes_CASH_temp }
	}
	if = {
		limit = { check_variable = { AGRI_banked_allocation_pool_ILLICIT > 0 } }
		set_temp_variable = { AGRI_allocation_changes_ILLICIT_temp = AGRI_banked_allocation_pool_ILLICIT }
		add_to_variable = { AGRI_field_allocation^1 = AGRI_allocation_changes_ILLICIT_temp }
		add_to_temp_variable = { AGRI_allocation_changes_temp = AGRI_allocation_changes_ILLICIT_temp }
	}
	if = {
		limit = { check_variable = { AGRI_banked_allocation_pool_STAPLE > 0 } }
		set_temp_variable = { AGRI_allocation_changes_STAPLE_temp = AGRI_banked_allocation_pool_STAPLE }
		add_to_variable = { AGRI_field_allocation^2 = AGRI_allocation_changes_STAPLE_temp }
		add_to_temp_variable = { AGRI_allocation_changes_temp = AGRI_allocation_changes_STAPLE_temp }
	}
	subtract_from_variable = { AGRI_allocation_pool = AGRI_allocation_changes_temp }
	custom_effect_tooltip = AGRI_make_allocation_changes_from_bank_TT
}









# AGRI_drought_check = {
# 	if = {
# 		limit = {
# 			ROOT = {
# 				is_neighbor_of = THIS
# 			}
# 		}
# 	}
# }