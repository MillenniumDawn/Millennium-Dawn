######################
# Written by mkemper #
######################
get_coalition_partner_numbers = {
	set_variable = {
		num_bureau_minus_two_coalition_partners = 0
	}
	set_variable = {
		num_bureau_minus_one_coalition_partners = 0
	}
	set_variable = {
		num_bureau_status_quo_coalition_partners = 0
	}
	set_variable = {
		num_bureau_plus_one_coalition_partners = 0
	}
	set_variable = {
		num_bureau_plus_two_coalition_partners = 0
	}
	set_variable = {
		num_police_minus_two_coalition_partners = 0
	}
	set_variable = {
		num_police_minus_one_coalition_partners = 0
	}
	set_variable = {
		num_police_status_quo_coalition_partners = 0
	}
	set_variable = {
		num_police_plus_one_coalition_partners = 0
	}
	set_variable = {
		num_police_plus_two_coalition_partners = 0
	}
	set_variable = {
		num_education_minus_two_coalition_partners = 0
	}
	set_variable = {
		num_education_minus_one_coalition_partners = 0
	}
	set_variable = {
		num_education_status_quo_coalition_partners = 0
	}
	set_variable = {
		num_education_plus_one_coalition_partners = 0
	}
	set_variable = {
		num_education_plus_two_coalition_partners = 0
	}
	set_variable = {
		num_health_minus_two_coalition_partners = 0
	}
	set_variable = {
		num_health_minus_one_coalition_partners = 0
	}
	set_variable = {
		num_health_status_quo_coalition_partners = 0
	}
	set_variable = {
		num_health_plus_one_coalition_partners = 0
	}
	set_variable = {
		num_health_plus_two_coalition_partners = 0
	}
	set_variable = {
		num_social_minus_two_coalition_partners = 0
	}
	set_variable = {
		num_social_minus_one_coalition_partners = 0
	}
	set_variable = {
		num_social_status_quo_coalition_partners = 0
	}
	set_variable = {
		num_social_plus_one_coalition_partners = 0
	}
	set_variable = {
		num_social_plus_two_coalition_partners = 0
	}
	for_each_loop = {
		array = gov_coalition_array
		value = v
		index = i
		if = {
			limit = {
				check_variable = { v = 0 } # Western_Autocracy
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_education_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_health_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_minus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 1 } # conservatism
			}
			add_to_variable = {
				num_bureau_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_education_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_health_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_social_minus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 2 } # Liberalism
			}
			add_to_variable = {
				num_bureau_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_police_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_education_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_health_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_plus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 3 } # socialism
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_education_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_health_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_social_plus_two_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 4 } # Communist-State
			}
			add_to_variable = {
				num_bureau_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_education_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_health_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_plus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 5 } # anarchist_communism
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_education_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_health_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_social_plus_two_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 6 } # Conservative
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_education_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_health_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_minus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 7 } # Autocracy
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_education_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_health_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_minus_one_coalition_partners = 1
			}
			
		}
		else_if = {
			limit = {
				check_variable = { v = 8 } # Vilayat
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_education_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_health_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_social_status_quo_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 9 } # Mod_Vilayat
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_education_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_health_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_social_plus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 10 } # Kingdom
			}
			add_to_variable = {
				num_bureau_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_education_minus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_health_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_minus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 11 } # Caliphate
			}
			add_to_variable = {
				num_bureau_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_education_minus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_health_minus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_social_minus_two_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 12 } # Neutral_Muslim_Brotherhood
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_education_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_health_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_plus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 13 } # Neutral_Autocracy
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_education_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_health_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_minus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 14 } # Neutral_conservatism 
			}
			add_to_variable = {
				num_bureau_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_education_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_health_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_social_minus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 15 } # oligarchism
			}
			add_to_variable = {
				num_bureau_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_police_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_education_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_health_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_minus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 16 } # Libertarian
			}
			add_to_variable = {
				num_bureau_minus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_police_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_education_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_health_minus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_social_minus_two_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 17 } # Neutral_Green
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_education_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_health_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_social_plus_two_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 18 } # neutral_Social
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_education_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_health_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_social_plus_two_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 19 } # Neutral_Communism
			}
			add_to_variable = {
				num_bureau_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_education_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_health_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_plus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 20 } # Nat_Populism
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_education_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_health_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_social_status_quo_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 21 } # Nat_Fascism
			}
			add_to_variable = {
				num_bureau_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_education_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_health_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_plus_one_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 22 } # Nat_Autocracy
			}
			add_to_variable = {
				num_bureau_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_two_coalition_partners = 1
			}
			add_to_variable = {
				num_education_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_health_minus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_social_minus_two_coalition_partners = 1
			}
		}
		else_if = {
			limit = {
				check_variable = { v = 23 } # Monarchism
			}
			add_to_variable = {
				num_bureau_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_police_plus_one_coalition_partners = 1
			}
			add_to_variable = {
				num_education_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_health_status_quo_coalition_partners = 1
			}
			add_to_variable = {
				num_social_status_quo_coalition_partners = 1
			}
		}
	}
}

clear_law_desire_flags = {
	clr_country_flag = wants_bureau_01
	clr_country_flag = wants_bureau_02
	clr_country_flag = wants_bureau_03
	clr_country_flag = wants_bureau_04
	clr_country_flag = wants_bureau_05
	clr_country_flag = wants_police_01
	clr_country_flag = wants_police_02
	clr_country_flag = wants_police_03
	clr_country_flag = wants_police_04
	clr_country_flag = wants_police_05
	clr_country_flag = wants_education_01
	clr_country_flag = wants_education_02
	clr_country_flag = wants_education_03
	clr_country_flag = wants_education_04
	clr_country_flag = wants_education_05
	clr_country_flag = wants_health_01
	clr_country_flag = wants_health_02
	clr_country_flag = wants_health_03
	clr_country_flag = wants_health_04
	clr_country_flag = wants_health_05
	clr_country_flag = wants_health_06
	clr_country_flag = wants_social_01
	clr_country_flag = wants_social_02
	clr_country_flag = wants_social_03
	clr_country_flag = wants_social_04
	clr_country_flag = wants_social_05
	clr_country_flag = wants_health_06
}

# Bureaucracy desire is chiefly determined by the size/strength of the nation. More powerful the nation, more it wants a higher level of bureaucracy.
# Secondary to size and power of the nation is the GDP of the nation - impoverished nations can't afford an extensive bureaucracy.
recalculate_bureaucracy_desire = {
	set_variable = {
		bureaucracy_law_desire = 0.0
	}
	# Basis of calculation is based upon power of nation.
	if = {
		limit = {
			has_idea = non_power
		}
		add_to_variable = {
			bureaucracy_law_desire = 2.0 # Non-power wants bureau_01
		}
	}
	else_if = {
		limit = {
			has_idea = minor_power
		}
		add_to_variable = {
			bureaucracy_law_desire = 5.0 # Minor power wants bureau_02
		}
	}
	else_if = {
		limit = {
			OR = {
				has_idea = large_power
				has_idea = great_power
			}
		}
		add_to_variable = {
			bureaucracy_law_desire = 8.0 # Large or Great power wants bureau_03
		}
	}
	else_if = {
		limit = {
			has_idea = superpower
		}
		add_to_variable = {
			bureaucracy_law_desire = 11.0 # Superpower wants bureau_04
		}
	}
	# Next, modify based upon GDP/c. Low GDP countries should want lower bureaucracy levels
	if = {
		limit = {
			OR = {
				has_idea = gdp_1
				has_idea = gdp_2
			}
		}
		subtract_from_variable = {
			bureaucracy_law_desire = 6.0 # Extremely impoverished nations want 2 levels lower
		}
	}
	else_if = {
		limit = {
			has_idea = gdp_3
			has_idea = gdp_4
			has_idea = gdp_5
		}
		subtract_from_variable = {
			bureaucracy_law_desire = 3.0 # Impoverished nations want 1 level lower
		}
	}
	# Next, modify based on corruption levels
	if = {
		limit = {
			OR = {
				has_idea = paralyzing_corruption
				has_idea = crippling_corruption
				has_idea = rampant_corruption
			}
		}
		add_to_variable = {
			bureaucracy_law_desire = 6 # Corrupt nations want much larger bureaucratic apparatus for all their cronies
		}
	}
	else_if = {
		limit = {
			OR = {
				has_idea = unrestrained_corruption
				has_idea = systematic_corruption
				has_idea = widespread_corruption
			}
		}
		add_to_variable = {
			bureaucracy_law_desire = 3 # Moderately corrupt nations want larger bureaucratic apparatus for their cronies
		}
	}
	# Next, modify based on ruling ideology, and thus by coalition partners. This ends up being a little more complicated than I thought at first.
	# Coalition members should want to drag the ruling party toward their own desired point. That means taking into account
	# both the desires of the ruling party *and* that of the coalition partner. If both want -1 level, then the coalition partner
	# should have no impact. If the ruler wants +2 and the coalition partner wants -1, it should have have a subtractive impact.
	# however, if the ruler wants -2 and the coalition partner wants -1, it should have an *additive* impact. Further, must also
	# check for more than one coalition partner - if multiple coalition partners with same desire, there should be more of a drift
	# toward that position than otherwise.
	if = {
		limit = {
			ruling_party_wants_bureaucracy_minus_two = yes
		}
		subtract_from_variable = {
			bureaucracy_law_desire = 6 # Two levels lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		multiply_variable = {
			num_bureau_minus_two_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_variable = {
			num_bureau_minus_one_coalition_partners = 1 # Minimum distance from ruling party, minimum change
		}
		multiply_variable = {
			num_bureau_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_variable = {
			num_bureau_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_variable = {
			num_bureau_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = var:num_bureau_minus_two_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_bureau_minus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_bureau_minus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_variable = {
			bureaucracy_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_bureaucracy_minus_one = yes
		}
		subtract_from_variable = {
			bureaucracy_law_desire = 3 # One level lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		multiply_variable = {
			num_bureau_minus_two_coalition_partners = 1 # Minor distance from ruling party
		}
		multiply_variable = {
			num_bureau_minus_one_coalition_partners = 1 # Same as ruling party
		}
		multiply_variable = {
			num_bureau_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_variable = {
			num_bureau_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_variable = {
			num_bureau_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		subtract_from_variable = {
			bureaucracy_law_desire = 3 # One level lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_two_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_bureau_minus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_bureau_minus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_bureau_minus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_variable = {
			bureaucracy_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_bureaucracy_status_quo = yes
		}
		add_to_variable = {
			bureaucracy_law_desire = 0 # No change
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		multiply_variable = {
			num_bureau_minus_two_coalition_partners = 2 # Moderate distance from ruling party
		}
		multiply_variable = {
			num_bureau_minus_one_coalition_partners = 1 # Minor distance from ruling party
		}
		multiply_variable = {
			num_bureau_status_quo_coalition_partners = 1 # Same as ruling party
		}
		multiply_variable = {
			num_bureau_plus_one_coalition_partners = 1 # Minor distance from ruling party
		}
		multiply_variable = {
			num_bureau_plus_two_coalition_partners = 2 # Moderate distance from ruling party
		}
		subtract_from_variable = {
			bureaucracy_law_desire = 3 # One level lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_bureau_status_quo_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_bureau_status_quo_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_bureau_status_quo_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_variable = {
			bureaucracy_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_bureaucracy_plus_one = yes
		}
		add_to_variable = {
			bureaucracy_law_desire = 3 # One level higher
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		multiply_variable = {
			num_bureau_minus_two_coalition_partners = 3 # Major distance from ruling party
		}
		multiply_variable = {
			num_bureau_minus_one_coalition_partners = 2 # Moderate distance from ruling party
		}
		multiply_variable = {
			num_bureau_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_variable = {
			num_bureau_plus_one_coalition_partners = 1 # Same as ruling party
		}
		multiply_variable = {
			num_bureau_plus_two_coalition_partners = 1 # Minor distance from ruling party
		}
		subtract_from_variable = {
			bureaucracy_law_desire = 3 # One level lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_status_quo_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_bureau_plus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_bureau_plus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_bureau_plus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_variable = {
			bureaucracy_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_bureaucracy_plus_two = yes
		}
		add_to_variable = {
			bureaucracy_law_desire = 6 # Two levels higher
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		multiply_variable = {
			num_bureau_minus_two_coalition_partners = 3 # Major distance from ruling party
		}
		multiply_variable = {
			num_bureau_minus_one_coalition_partners = 2 # Moderate distance from party
		}
		multiply_variable = {
			num_bureau_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_variable = {
			num_bureau_plus_one_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_variable = {
			num_bureau_plus_two_coalition_partners = 1 # Same as ruling party
		}
		subtract_from_variable = {
			bureaucracy_law_desire = 3 # One level lower
		}
		set_temp_variable = {
			coalition_law_modifier = 0
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_bureau_plus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_bureau_plus_two_coalition_partners
		# }
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_bureau_plus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_bureau_plus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_variable = {
			bureaucracy_law_desire = coalition_law_modifier
		}
	}
	# Finally, set country flag based on result.
	if = {
		limit = {
			check_variable = {
				bureaucracy_law_desire < 4
			}
		}
		set_country_flag = wants_bureau_01
	}
	else_if = {
		limit = {
			check_variable = {
				bureaucracy_law_desire < 7
			}
		}
		set_country_flag = wants_bureau_02
	}
	else_if = {
		limit = {
			check_variable = {
				bureaucracy_law_desire < 10
			}
		}
		set_country_flag = wants_bureau_03
	}
	else_if = {
		limit = {
			check_variable = {
				bureaucracy_law_desire < 13
			}
		}
		set_country_flag = wants_bureau_04
	}
	else_if = {
		limit = {
			check_variable = {
				var = bureaucracy_law_desire
				value = 13
				compare = greater_than_or_equals
			}
		}
		set_country_flag = wants_bureau_05
	}
}

# Police desire should tend to gravitate toward the middle (police_03) in most nations. This is also affected by politics - repressive governments
# want more police apparatus than more liberal/libertarian ones. Also influenced by GDP - impoverished nations cannot afford large police forces.
recalculate_police_desire = {
	set_variable = {
		police_law_desire = 0.0
	}
	# First, set desire based upon GDP. Poverty tends toward low values, all else toward middling.
	if = {
		limit = {
			has_idea = gdp_1
		}
		add_to_variable = {
			police_law_desire = 2.0 # police_01
		}
	}
	else_if = {
		limit = {
			OR = {
				has_idea = gdp_2
				has_idea = gdp_3
				has_idea = gdp_4
			}
		}
		add_to_variable = {
			police_law_desire = 5.0 # police_02
		}
	}
	else_if = {
		limit = {
			OR = {
				has_idea = gdp_5
				has_idea = gdp_6
				has_idea = gdp_7
				has_idea = gdp_8
				has_idea = gdp_9
				has_idea = gdp_10
				has_idea = gdp_11
				has_idea = gdp_12
			}
		}
		add_to_variable = {
			police_law_desire = 8.0 # police_03
		}
	}

	# Next, modify based upon ruling ideology and coalition partners.
	set_temp_variable = {
		coalition_law_modifier = 0
	}
	if = {
		limit = {
			ruling_party_wants_police_minus_two = yes
		}
		subtract_from_variable = {
			police_law_desire = 6.0
		}
		multiply_variable = {
			num_police_minus_two_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_variable = {
			num_police_minus_one_coalition_partners = 1 # Minimum distance from ruling party, minimum change
		}
		multiply_variable = {
			num_police_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_variable = {
			num_police_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_variable = {
			num_police_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_police_minus_two_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_police_minus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_police_minus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_variable = {
			police_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_police_minus_one = yes
		}
		subtract_from_variable = {
			police_law_desire = 3.0
		}
		multiply_variable = {
			num_police_minus_two_coalition_partners = 1 # Minimum distance, minimum change
		}
		multiply_variable = {
			num_police_minus_one_coalition_partners = 1 # Same desire as ruling party
		}
		multiply_variable = {
			num_police_status_quo_coalition_partners = 1 # Minor distance from ruling party, minor change
		}
		multiply_variable = {
			num_police_plus_one_coalition_partners = 2 # Moderate distance from ruling party, moderate change
		}
		multiply_variable = {
			num_police_plus_two_coalition_partners = 3 # Major distance from ruling party, major change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_two_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_police_minus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_police_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_police_minus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_police_minus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_variable = {
			police_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_police_status_quo = yes
		}
		add_to_variable = {
			police_law_desire = 0.0
		}
		multiply_variable = {
			num_police_minus_two_coalition_partners = 2 # moderate distance, moderate change
		}
		multiply_variable = {
			num_police_minus_one_coalition_partners = 1 # minor distance, minor change
		}
		multiply_variable = {
			num_police_status_quo_coalition_partners = 1 # same as ruling party
		}
		multiply_variable = {
			num_police_plus_one_coalition_partners = 1 # minor distance, minor change
		}
		multiply_variable = {
			num_police_plus_two_coalition_partners = 2 # moderate distance, moderate change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_police_status_quo_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_police_status_quo_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_police_status_quo_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_variable = {
			police_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_police_plus_one = yes
		}
		add_to_variable = {
			police_law_desire = 3.0
		}
		multiply_variable = {
			num_police_minus_two_coalition_partners = 3 # Major distance, Major change
		}
		multiply_variable = {
			num_police_minus_one_coalition_partners = 2 # Moderate distance, moderate change
		}
		multiply_variable = {
			num_police_status_quo_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_variable = {
			num_police_plus_one_coalition_partners = 1 # Same as ruling party
		}
		multiply_variable = {
			num_police_plus_two_coalition_partners = 1 # minor distance, minor change
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_status_quo_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_police_plus_one_coalition_partners
		# }
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_two_coalition_partners
		}
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_police_plus_one_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_police_plus_one_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_variable = {
			police_law_desire = coalition_law_modifier
		}
	}
	else_if = {
		limit = {
			ruling_party_wants_police_plus_two = yes
		}
		add_to_variable = {
			police_law_desire = 6.0
		}
		multiply_variable = {
			num_police_minus_two_coalition_partners = 3 # Major distance, Major change
		}
		multiply_variable = {
			num_police_minus_one_coalition_partners = 2 # Moderate distance, moderate change
		}
		multiply_variable = {
			num_police_status_quo_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_variable = {
			num_police_plus_one_coalition_partners = 1 # Minor distance, minor change
		}
		multiply_variable = {
			num_police_plus_two_coalition_partners = 1 # Same as ruling party
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_two_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_minus_one_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_status_quo_coalition_partners
		}
		add_to_temp_variable = {
			coalition_law_modifier = num_police_plus_one_coalition_partners
		}
		# add_to_temp_variable = {
		# 	coalition_law_modifier = num_police_plus_two_coalition_partners
		# }
		if = {
			limit = {
				check_variable = {
					coalition_law_modifier > 0
				}
			}
			subtract_from_temp_variable = {
				coalition_law_modifier = num_police_plus_two_coalition_partners
			}
		}
		else_if = {
			limit = {
				check_variable = {
					coalition_law_modifier < 0
				}
			}
			add_to_temp_variable = {
				coalition_law_modifier = num_police_plus_two_coalition_partners
			}
		}
		clamp_temp_variable = { # Clamp maximum effect of coalition partners to prevent massive shift from ruling party desires
			var = coalition_law_modifier
			min = -5
			max = 5
		}
		add_to_variable = {
			police_law_desire = coalition_law_modifier
		}
	}

	# Finally, set country flag based on result.
	if = {
		limit = {
			check_variable = {
				police_law_desire < 4
			}
		}
		set_country_flag = wants_police_01
	}
	else_if = {
		limit = {
			check_variable = {
				police_law_desire < 7
			}
		}
		set_country_flag = wants_police_02
	}
	else_if = {
		limit = {
			check_variable = {
				police_law_desire < 10
			}
		}
		set_country_flag = wants_police_03
	}
	else_if = {
		limit = {
			check_variable = {
				police_law_desire < 13
			}
		}
		set_country_flag = wants_police_04
	}
	else_if = {
		limit = {
			check_variable = {
				var = police_law_desire
				value = 13
				compare = greater_than_or_equals
			}
		}
		set_country_flag = wants_police_05
	}
}





recalculate_law_desires = {
	clear_law_desire_flags = yes # First, clear law desire flags.
	get_coalition_partner_numbers = yes # Next, get coalition partner modifiers.
	recalculate_bureaucracy_desire = yes
}