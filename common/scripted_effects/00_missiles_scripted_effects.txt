#################################
### missiles scripted effects ###
#################################
#
# ### missile trajectory arrays ###
# missile_launch_point_array
# missile_target_point_array
# missile_type_array
# missile_tech_array
# missile_warhead_array
# missile_salvo_array
# missile_duration_array
#
##################################




### test effects ###
set_missile_trajectory_test_vars = {
	###
	set_variable = { var_accuracy = 0.7 }
	set_variable = { var_salvo = 40 }
	set_variable = { var_MIRV = 10 }
	set_variable = { var_decoy = 5 }
	set_variable = { var_intercept_chance_boost = 0.1 }
	set_variable = { var_intercept_capacity_boost = 20 }
	set_variable = { var_intercept_chance_midcourse = 0.1 }
	set_variable = { var_intercept_capacity_midcourse = 30 }
	set_variable = { var_intercept_chance_terminal = 0.1 }
	set_variable = { var_intercept_capacity_terminal = 60 }
	###
	set_variable = { var_missile_trajectory = 1 }
	set_variable = { var_missile_target_hit = 0 }
	set_variable = { var_missile_target_miss = 0 }
	set_variable = { var_missile_interception_boost = 0 }
	set_variable = { var_missile_interception_midcourse = 0 }
	set_variable = { var_missile_interception_terminal = 0 }
	set_variable = { var_missile_boost_completed = 0 }
	set_variable = { var_missile_midcourse_completed = 0 }
	set_variable = { var_missile_target_hit = 0 }
	set_variable = { var_missile_target_miss = 0 }		
}

set_landbased_missile_defense_vars = {
	meta_effect = {
		text = {	
			set_variable = { var_intercept_capacity_boost = 0 }
			set_variable = { var_intercept_capacity_midcourse = 0 }
			set_variable = { var_intercept_capacity_terminal = 0 }
			### boost phase defense ###
			every_controlled_state = {
				limit = {
					anti_air_building > 0
					[launch_point_ID] = {
						distance_to = {
							value < [SAM_range]
							target = PREV
						}
					}	
				}
				ROOT = {
					set_temp_variable = { temp1 = 0 }	
					add_to_temp_variable = { temp1 = PREV.building_level@anti_air_building }
					multiply_temp_variable = { temp1 = var_SAM_launcher_tech }
					add_to_variable = { var_intercept_capacity_boost = temp1 }
				}													
			}
			### midcourse phase defense ###
			every_controlled_state = {
				limit = {
					missile_defense_station > 0
					[launch_point_ID] = {
						distance_to = {
							value < [ABM_range]
							target = PREV
						}
					}	
				}
				ROOT = {
					set_temp_variable = { temp1 = 0 }	
					add_to_temp_variable = { temp1 = PREV.building_level@missile_defense_station }
					multiply_temp_variable = { temp1 = var_ABM_launcher_tech }
					add_to_variable = { var_intercept_capacity_midcourse = temp1 }
					PREV = {
						set_state_flag = defend_land_launch_point
					}
				}				
			}
			every_controlled_state = {
				limit = {
					missile_defense_station > 0
					NOT = {
						has_state_flag = defend_land_launch_point
					}
					[target_point_ID] = {
						distance_to = {
							value < [ABM_range]
							target = PREV
						}
					}	
				}
				ROOT = {
					set_temp_variable = { temp1 = 0 }	
					add_to_temp_variable = { temp1 = PREV.building_level@missile_defense_station }
					multiply_temp_variable = { temp1 = var_ABM_launcher_tech }
					add_to_variable = { var_intercept_capacity_midcourse = temp1 }
				}	
			}
			every_controlled_state = {
				clr_state_flag = defend_land_launch_point
			}					
			### terminal phase defense ###
			every_controlled_state = {				
				limit = {
					anti_air_building > 0
					[target_point_ID] = {
						distance_to = {
							value < [SAM_range]
							target = PREV
						}
					}	
				}
				ROOT = {
					set_temp_variable = { temp1 = 0 }	
					add_to_temp_variable = { temp1 = PREV.building_level@anti_air_building }
					multiply_temp_variable = { temp1 = var_SAM_launcher_tech }
					add_to_variable = { var_intercept_capacity_terminal = temp1 }
				}	
			}
		}
		launch_point_ID = "[?missile_launch_point_array^i.GetID]" # "[?var_launch_point_ID.GetID]"
		target_point_ID = "[?missile_target_point_array^i.GetID]" # "[?var_target_point_ID.GetID]"
		SAM_range = "[?var_SAM_range]"
		ABM_range = "[?var_ABM_range]"
	}	
}

set_seabased_missile_defense_vars = {
	meta_effect = {
		text = {	
			set_variable = { var_intercept_capacity_boost = 0 }
			set_variable = { var_intercept_capacity_midcourse = 0 }
			set_variable = { var_intercept_capacity_terminal = 0 }
			### boost phase defense ###
			every_controlled_state = {
				limit = {
					sea_launch_point_[sea_defense_ID] = yes
					[launch_point_ID] = {
						distance_to = {
							value < [SAM_range]
							target = PREV
						}
					}	
				}
				ROOT = {
					set_temp_variable = { temp1 = 0 }	
					add_to_temp_variable = { temp1 = 1 } # scripted effect necessary to check ships in sea_launch_point areas 
					multiply_temp_variable = { temp1 = var_ship_SAM_launcher_tech }
					add_to_variable = { var_intercept_capacity_boost = temp1 }
				}													
			}
			### midcourse phase defense ###
			every_controlled_state = {
				limit = {
					sea_launch_point_[sea_defense_ID] = yes
					[launch_point_ID] = {
						distance_to = {
							value < [ABM_range]
							target = PREV
						}
					}	
				}
				ROOT = {
					set_temp_variable = { temp1 = 0 }	
					add_to_temp_variable = { temp1 = 1 } # scripted effect necessary to check ships in sea_launch_point areas
					multiply_temp_variable = { temp1 = var_ship_ABM_launcher_tech }
					add_to_variable = { var_intercept_capacity_midcourse = temp1 }
					PREV = {
						set_state_flag = defend_sea_launch_point
					}
				}				
			}
			every_controlled_state = {
				limit = {
					sea_launch_point_[sea_defense_ID] = yes
					NOT = {
						has_state_flag = defend_sea_launch_point
					}
					[target_point_ID] = {
						distance_to = {
							value < [ABM_range]
							target = PREV
						}
					}	
				}
				ROOT = {
					set_temp_variable = { temp1 = 0 }	
					add_to_temp_variable = { temp1 = 1 } # scripted effect necessary to check ships in sea_launch_point areas
					multiply_temp_variable = { temp1 = var_ship_ABM_launcher_tech }
					add_to_variable = { var_intercept_capacity_midcourse = temp1 }
				}	
			}
			every_controlled_state = {
				clr_state_flag = defend_sea_launch_point
			}					
			### terminal phase defense ###
			every_controlled_state = {				
				limit = {
					sea_launch_point_[sea_defense_ID] = yes
					[target_point_ID] = {
						distance_to = {
							value < [SAM_range]
							target = PREV
						}
					}	
				}
				ROOT = {
					set_temp_variable = { temp1 = 0 }	
					add_to_temp_variable = { temp1 = 1 } # scripted effect necessary to check ships in sea_launch_point areas
					multiply_temp_variable = { temp1 = var_ship_SAM_launcher_tech }
					add_to_variable = { var_intercept_capacity_terminal = temp1 }
				}	
			}
		}
		launch_point_ID = "[?missile_launch_point_array^i.GetID]" # "[?var_launch_point_ID.GetID]"
		target_point_ID = "[?missile_target_point_array^i.GetID]" # "[?var_target_point_ID.GetID]"
		SAM_range = "[?var_SAM_range]"
		ABM_range = "[?var_ABM_range]"
		sea_defense_ID = "[THIS.GetID]"
	}
}

set_air_defense_array = {
	every_controlled_state = {
		limit = {
			anti_air_building > 0
		}
		add_to_array = {
			array = air_defense_array
			value = v
			index = i
		}
	}			
}	

### boost phase vs defense ###
boost_phase_defense = {
	set_temp_variable = { temp1 = var_salvo }
	while_loop_effect = {
		limit = {
			check_variable = { temp1 > 0 }
		}
		randomize_variable = {  
			var = var_missile_trajectory
			distribution = uniform
			min = 0
			max = 1
		}
		subtract_from_temp_variable = { temp1 = 1 }	
		if = {
			limit = {						
				check_variable = { var_intercept_capacity_boost > 0 }
			}	
			subtract_from_variable = { var_intercept_capacity_boost = 1 }
			if = {
				limit = {	
					check_variable = { var_missile_trajectory < var_intercept_chance_boost }
				}					
				add_to_variable = { var_missile_interception_boost = 1 }
			}
			else = {
				add_to_variable = { var_missile_boost_completed = 1 }
			}
		}	
		else = {
			add_to_variable = { var_missile_boost_completed = 1 }
		}
	}	
}

### midcourse phase vs defense ###
midcourse_phase_defense = {
	set_temp_variable = { temp2 = var_missile_boost_completed }
	while_loop_effect = {
		limit = {
			check_variable = { temp2 > 0 }
		}
		randomize_variable = {  
			var = var_missile_trajectory
			distribution = uniform
			min = 0
			max = 1
		}
		subtract_from_temp_variable = { temp2 = 1 }	
		if = {
			limit = {						
				check_variable = { var_intercept_capacity_midcourse > 0 }
			}	
			subtract_from_variable = { var_intercept_capacity_midcourse = 1 }
			if = {
				limit = {	
					check_variable = { var_missile_trajectory < var_intercept_chance_midcourse }
				}					
				add_to_variable = { var_missile_interception_midcourse = 1 }
			}
			else = {
				add_to_variable = { var_missile_midcourse_completed = 1 }
			}
		}	
		else = {
			add_to_variable = { var_missile_midcourse_completed = 1 }
		}
	}	
}

### terminal phase vs defense ###
terminal_phase_defense = {
	set_temp_variable = { temp3 = var_missile_midcourse_completed }
	multiply_temp_variable = { temp3 = var_MIRV }
	set_temp_variable = { temp4 = var_missile_midcourse_completed }
	multiply_temp_variable = { temp4 = var_decoy }
	if = {
		limit = {
			check_variable = { temp4 > var_intercept_capacity_terminal }
		}
		set_variable = { var_intercept_capacity_terminal = 0 }
	}
	else = {
		subtract_from_variable = { var_intercept_capacity_terminal = temp4 }
	}
	while_loop_effect = {
		limit = {
			check_variable = { temp3 > 0 }
		}
		randomize_variable = {
			var = var_missile_trajectory
			distribution = uniform
			min = 0
			max = 1
		}
		subtract_from_temp_variable = { temp3 = 1 }
		if = {
			limit = {
				check_variable = { var_intercept_capacity_terminal > 0 }
			}
			subtract_from_variable = { var_intercept_capacity_terminal = 1 }
			if = {
				limit = {
					check_variable = { var_missile_trajectory < var_intercept_chance_terminal }
				}
				add_to_variable = { var_missile_interception_terminal = 1 }
			}
			else = {
				add_to_variable = { var_missile_trajectory = var_accuracy }
				if = {
					limit = { check_variable = { var_missile_trajectory > 1 } }
					add_to_variable = { var_missile_target_hit = 1 }
				}
				else = {
					add_to_variable = { var_missile_target_miss = 1 }
				}
			}
		}
		else = {
			add_to_variable = { var_missile_trajectory = var_accuracy }
			if = {
				limit = { check_variable = { var_missile_trajectory > 1 } }
				add_to_variable = { var_missile_target_hit = 1 }
			}
			else = {
				add_to_variable = { var_missile_target_miss = 1 }
			}
		}
	}
}

################################################
###
################################################

set_missile_model = {
	meta_effect = {
		text = {
			set_missile_model_[missile_type]_[missile_tech] = yes
		}
		missile_type = "[?missile_type_array^i]"
		missile_tech = "[?missile_tech_array^i]"
	}
}

set_warhead = {
	meta_effect = {
		text = {
			set_warhead_[warhead] = yes
		}
		warhead = "[?missile_warhead_array^i]"
	}
}

### add new buildings here
set_warhead_targets = {
	add_to_array = { target_building_1_array = var_missile_trajectory_ID }
	add_to_array = { target_building_2_array = var_missile_trajectory_ID }
	add_to_array = { target_building_3_array = var_missile_trajectory_ID }
	add_to_array = { target_building_4_array = var_missile_trajectory_ID }
	add_to_array = { target_building_5_array = var_missile_trajectory_ID }
	add_to_array = { target_building_6_array = var_missile_trajectory_ID }
	add_to_array = { target_building_7_array = var_missile_trajectory_ID }
	add_to_array = { target_building_8_array = var_missile_trajectory_ID }
	add_to_array = { target_building_9_array = var_missile_trajectory_ID }
	add_to_array = { target_building_10_array = var_missile_trajectory_ID }
	add_to_array = { target_building_11_array = var_missile_trajectory_ID }
	add_to_array = { target_building_12_array = var_missile_trajectory_ID }
	add_to_array = { target_building_13_array = var_missile_trajectory_ID }
	add_to_array = { target_building_14_array = var_missile_trajectory_ID }
	add_to_array = { target_building_15_array = var_missile_trajectory_ID }
	add_to_array = { target_building_16_array = var_missile_trajectory_ID }
}

set_missile_defense_tech = {
	### temp for testing ###
	set_variable = { var_SAM_range = 1000 }
	set_variable = { var_ABM_range = 3000 }
	set_variable = { var_SAM_launcher_tech = 1 }
	set_variable = { var_ABM_launcher_tech = 1 }
	set_variable = { var_ship_SAM_launcher_tech = 1 }
	set_variable = { var_ship_ABM_launcher_tech = 1 }
}

### old try didn't work
set_missile_damage_old = {
	set_temp_variable = { temp1 = var_missile_target_hit }
	log = "log set_missile_damage a [?temp1]"
	while_loop_effect = {
		limit = {
			check_variable = { temp1 > 0 }
		}
		log = "log set_missile_damage b [?temp1] ID: [?missile_target_point_array^i.GetID]"
		#meta_effect = {
			log = "log set_missile_damage ca ID: [?ROOT.missile_target_point_array^i.GetID]"
			#text = {
				log = "log set_missile_damage cb ID: [target_point_ID]"
				539 = { #[target_point_ID] = {
					log = "log set_missile_damage cc [?temp1] [THIS.GetName]"
					random_list = {
						91 = {
							damage_building = {
								type = infrastructure
								damage = var_warhead_damage
							}
							set_variable = { PREV.var_damage_infrastructure = var_warhead_damage }
							log = "log set_missile_damage d [?temp1]"
						}
						91 = {
							damage_building = {
								type = arms_factory
								damage = var_warhead_damage
							}
							set_variable = { PREV.var_damage_arms_factory = var_warhead_damage }
						}
						91 = {
							damage_building = {
								type = industrial_complex
								damage = var_warhead_damage
							}
							set_variable = { PREV.var_damage_industrial_complex = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = dockyard
								damage = var_warhead_damage
							}
							set_variable = { var_damage_dockyard = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = air_base
								damage = var_warhead_damage
							}
							set_variable = { var_damage_air_base = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = naval_base
								damage = var_warhead_damage
							}
							set_variable = { var_damage_naval_base = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = bunker
								damage = var_warhead_damage
							}
							set_variable = { var_damage_bunker = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = coastal_bunker
								damage = var_warhead_damage
							}
							set_variable = { var_damage_coastal_bunker = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = anti_air_building
								damage = var_warhead_damage
							}
							set_variable = { var_damage_anti_air_building = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = synthetic_refinery
								damage = var_warhead_damage
							}
							set_variable = { var_damage_synthetic_refinery = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = fuel_silo
								damage = var_warhead_damage
							}
							set_variable = { var_damage_fuel_silo = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = radar_station
								damage = var_warhead_damage
							}
							set_variable = { var_damage_radar_station = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = internet_station
								damage = var_warhead_damage
							}
							set_variable = { var_damage_internet_station = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = nuclear_reactor
								damage = var_warhead_damage
							}
							set_variable = { var_damage_nuclear_reactor = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = missile_defense_station
								damage = var_warhead_damage
							}
							set_variable = { var_damage_missile_defense_station = var_warhead_damage }
						}
						1 = {
							damage_building = {
								type = missile_silo
								damage = var_warhead_damage
							}
							set_variable = { var_damage_missile_silo = var_warhead_damage }
						}
					}
				}
			#}
			#target_point_ID = "[?missile_target_point_array^i.GetID]" # "[?missile_target_point_array^i.GetID]"
		#}
	}
	subtract_from_temp_variable = { temp1 = 1 }
	log = "log set_missile_damage e [?temp1]"
}

set_missile_damage = {
	set_temp_variable = { temp1 = var_missile_target_hit }
	while_loop_effect = {
		limit = {
			check_variable = { temp1 > 0 }
		}
		subtract_from_temp_variable = { temp1 = 1 }
		set_temp_variable = { temp2 = var_warhead_damage }
		random_list = {
			50 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							[target_point_ID] = {
								damage_building = {
									type = infrastructure
									damage = 1
								}
							}
							add_to_variable = { var_damage_infrastructure = 1 }
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
			}
			50 = {
				while_loop_effect = {
					limit = {
						check_variable = { temp2 > 0 }
					}
					subtract_from_temp_variable = { temp2 = 1 }
					meta_effect = {
						text = {
							[target_point_ID] = {
								damage_building = {
									type = arms_factory
									damage = 1
								}
							}
							add_to_variable = { var_damage_arms_factory = 1 }
						}
						target_point_ID = "[?missile_target_point_array^i.GetID]"
					}
				}
			}
		}
	}
}

################################################
### for on daily
################################################

missile_on_daily = {
	for_each_loop = {
		array = missile_target_point_array

		set_landbased_missile_defense_vars = yes
		#set_seabased_missile_defense_vars = yes

		set_missile_model = yes
		set_warhead = yes

		set_variable = { var_salvo = missile_salvo_array^i }

		meta_effect = {
			text = {
				subtract_from_variable = { var_inventory_[missile_type]_[missile_tech] = var_salvo }
			}
			missile_type = "[?missile_type_array^i]"
			missile_tech = "[?missile_tech_array^i]"
		}
		remove_from_array = { missile_duration_array = 1 index = i }


		### boost phase vs defense ###
		boost_phase_defense = yes
		### midcourse phase vs defense ###
		midcourse_phase_defense = yes
		### terminal phase vs defense ###
		terminal_phase_defense = yes

		log = "Target i: [?missile_target_point_array^i.GetName] ID = [?missile_target_point_array^i.GetID]"
		set_missile_damage = yes
	}
}