AGRI_plant_the_seeds = {
	if = { limit = { is_agrarian_economy = yes }
		add_ideas = agrarian_economy
		AGRI_difficulty_settings = yes
	}
}

AGRI_difficulty_settings = {
	if = { limit = { is_ai = no }
		if = {
			limit = { difficulty < 1 }
			add_to_variable = { agri_crop_price^0 = 10 }
			add_to_variable = { agri_crop_price^1 = 15 }
		}
		if = {
			limit = {
				difficulty > 0
				difficulty < 2
			}
			add_to_variable = { agri_crop_price^0 = 5 }
			add_to_variable = { agri_crop_price^1 = 10 }
		}
		if = {
			limit = {
				difficulty > 2
				difficulty < 4
			}
			add_to_variable = { agri_crop_price^0 = -5 }
			add_to_variable = { agri_crop_price^1 = -10 }
		}
		if = {
			limit = {
				difficulty > 3
				difficulty < 5
			}
			add_to_variable = { agri_crop_price^0 = -10 }
			add_to_variable = { agri_crop_price^1 = -15 }
		}
	}
	if = { limit = { is_ai = yes }
		if = {
			limit = {
				difficulty > 2
				difficulty < 4
			}
			add_to_variable = { agri_crop_price^0 = 5 }
			add_to_variable = { agri_crop_price^1 = 10 }
		}
		if = {
			limit = {
				difficulty > 3
				difficulty < 5
			}
			add_to_variable = { agri_crop_price^0 = 10 }
			add_to_variable = { agri_crop_price^1 = 15 }
		}
	}
	AGRI_update_math_variables = yes
}

AGRI_civil_war = {
	if = {
		limit = { FROM = { is_agrarian_economy = yes } }
		AGRI_plant_the_seeds = yes
		set_variable = { ROOT.agri_crop_allocation^0 = FROM.agri_crop_allocation^0 }
		set_variable = { ROOT.agri_crop_allocation^1 = FROM.agri_crop_allocation^1 }
		set_variable = { ROOT.agri_crop_price^0 = FROM.agri_crop_price^0 }
		set_variable = { ROOT.agri_crop_price^1 = FROM.agri_crop_price^1 }
		AGRI_difficulty_settings = yes
	}
}

AGRI_allocation_change_effect = {
	set_temp_variable = { AGRI_allocation_addition = allocation_change }
	set_temp_variable = { AGRI_allocation_subtraction = allocation_change }
	multiply_temp_variable = { AGRI_allocation_subtraction = -1 }
	if = { # SELF CORRECTING EFFECT (REDUCES AMOUNT OF CODE NEEDED IN CALLING EFFECT)
		limit = { check_variable = { crop_type = 0 } }
		if = {
			limit = { check_variable = { allocation_change > 0 } }
			add_to_variable = { agri_crop_allocation^0 = AGRI_allocation_addition }
			add_to_variable = { agri_crop_allocation^1 = AGRI_allocation_subtraction }
		}
		else = {
			add_to_variable = { agri_crop_allocation^0 = AGRI_allocation_subtraction }
			add_to_variable = { agri_crop_allocation^1 = AGRI_allocation_addition }
		}
	}
	if = {
		limit = { check_variable = { crop_type = 1 } }
		if = {
			limit = { check_variable = { allocation_change > 0 } }
			add_to_variable = { agri_crop_allocation^0 = AGRI_allocation_subtraction }
			add_to_variable = { agri_crop_allocation^1 = AGRI_allocation_addition }
		}
		else = {
			add_to_variable = { agri_crop_allocation^0 = AGRI_allocation_addition }
			add_to_variable = { agri_crop_allocation^1 = AGRI_allocation_subtraction }
		}
	}
	clamp_variable = {
		var = agri_crop_allocation^crop_type
		min = 0
		max = 1
	}
	custom_effect_tooltip = AGRI_allocation_change_effect_TT
}

AGRI_price_change_effect = {
	add_to_variable = { agri_crop_price^crop_type = price_change }
	clamp_variable = {
		var = agri_crop_price^crop_type
		min = 0
		max = 50
	}
	custom_effect_tooltip = agri_price_change
}

AGRI_protection_update = {
	add_to_variable = { AGRI_protection = AGRI_protections_change }
	custom_effect_tooltip = AGRI_protections_effect
}

AGRI_banked_changes_update_basic = {
	log = "[GetDateText]: [ROOT.GetName]: Running Effect: AGRI_banked_changes_update_basic"
	set_variable = { AGRI_PP_calculate_basic = AGRI_banked_changes_cash }
	multiply_variable = { AGRI_PP_calculate_basic = 1000 }
	set_variable = { AGRI_pp_cost = AGRI_PP_calculate_basic }
	set_variable = { AGRI_pp_check = AGRI_pp_cost }
	multiply_variable = { AGRI_pp_check = -1 }
	log = "[GetDateText]: [ROOT.GetName]: Effect Completed: AGRI_banked_changes_update_basic"
}

AGRI_banked_changes_update_cash = {
	log = "[GetDateText]: [ROOT.GetName]: Running Effect: AGRI_banked_changes_update_cash"
	set_variable = { AGRI_PP_calculate_cash = AGRI_banked_changes_basic }
	multiply_variable = { AGRI_PP_calculate_cash = 1000 }
	set_variable = { AGRI_pp_cost = AGRI_PP_calculate_cash }
	set_variable = { AGRI_pp_check = AGRI_pp_cost }
	multiply_variable = { AGRI_pp_check = -1 }
	log = "[GetDateText]: [ROOT.GetName]: Effect Completed: AGRI_banked_changes_update_cash"
}

AGRI_clear_banked_variables = {
	clear_variable = AGRI_banked_changes_basic
	clear_variable = AGRI_banked_changes_cash
	clear_variable = AGRI_pp_cost
}

AGRI_monthly_changes_math = {
	set_variable = { AGRI_monthly_changes_basic = AGRI_banked_changes_basic }
	divide_variable = { AGRI_monthly_changes_basic = 2 }
	set_variable = { AGRI_monthly_changes_cash = AGRI_banked_changes_cash }
	divide_variable = { AGRI_monthly_changes_cash = 2 }
}

AGRI_update_math_variables = {
	log = "[GetDateText]: [ROOT.GetName]: Running Effect: AGRI_update_math_variables"
	# CROP OUTPUT
	set_variable = { basic_crop_output = agriculture_workers }
	multiply_variable = { basic_crop_output = agri_crop_allocation^0 }
	set_variable = { cash_crop_output = agriculture_workers }
	multiply_variable = { cash_crop_output = agri_crop_allocation^1 }
	# CROP TOTAL VALUE
	set_variable = { basic_crop_total_value = basic_crop_output }
	multiply_variable = { basic_crop_total_value = agri_crop_price^0 }
	set_variable = { cash_crop_total_value = cash_crop_output }
	multiply_variable = { cash_crop_total_value = agri_crop_price^1 }
	# TOTAL CROP INCOME
	set_variable = { combined_crop_value = basic_crop_total_value }
	add_to_variable = { combined_crop_value = cash_crop_total_value }
	# Before working out math from literacy rate, it multiplies by 1.85
	multiply_variable = { combined_crop_value = 1.85 }
	# ADDITIONAL MATH FOR THE NEW MODIFIER
	set_temp_variable = { AGRI_income_modifier_temp = 1 }
	add_to_temp_variable = { AGRI_income_modifier_temp = modifier@AGRI_agrarian_economy_income_modifier }
	multiply_variable = { combined_crop_value = AGRI_income_modifier_temp }
	# YEARLY HARVEST
	set_variable = { yearly_harvest_value = combined_crop_value }
	divide_variable = { yearly_harvest_value = literacy_rate }
	# ADDITIONAL INCOME
	set_variable = { weekly_harvest_value = yearly_harvest_value }
	divide_variable = { weekly_harvest_value = 52 }
	# BILLION CONVERTER
	set_variable = { weekly_harvest_billion = weekly_harvest_value }
	divide_variable = { weekly_harvest_billion = 100 }
	# VARIABLE DISPLAY MATH
	# ANNUAL HARVEST DISPLAY
	set_variable = { annual_harvest_display = yearly_harvest_value }
	divide_variable = { annual_harvest_display = 10 }
	# WEEKLY HARVEST DISPLAY
	set_variable = { weekly_harvest_display = weekly_harvest_value }
	multiply_variable = { weekly_harvest_display = 100 }
	log = "[GetDateText]: [ROOT.GetName]: Effect Completed: AGRI_update_math_variables"
}

AGRI_plow_the_fields = {
	if = { # ALLOCATION CHANGES
		limit = {
			OR = {
				has_country_flag = agriculture_allocation_drift_basic
				has_country_flag = agriculture_allocation_drift_cash
			}
		}
		set_temp_variable = { allocation_change = AGRI_monthly_changes_basic }
		set_temp_variable = { crop_type = 0 }
		AGRI_allocation_change_effect = yes
		set_temp_variable = { allocation_change = AGRI_monthly_changes_cash }
		set_temp_variable = { crop_type = 1 }
		AGRI_allocation_change_effect = yes
	}
}

AGRI_give_tobacco_company_rights = {
	if = {
		limit = {
			var:nation_with_land = {
				var:nation_with_industry = {
					NOT = { has_country_flag = AGRI_tobacco_rights@PREV }
				}
			}
		}
		var:nation_with_land = {
			set_country_flag = {
				flag = AGRI_sold_rights_TOB
				value = 1
				days = 360
			}
			var:nation_with_industry = {
				hidden_effect = {
					set_country_flag = {
						flag = AGRI_tobacco_rights@PREV
						value = 1
						days = 360
					}
					var:nation_with_land = {
						set_country_flag = {
							flag = AGRI_tobacco_rights@PREV
							value = 1
							days = 360
						}
					}
				}
			}
		}
		custom_effect_tooltip = AGRI_give_tobacco_company_rights_SELLING_TT
	}
	else = { custom_effect_tooltip = AGRI_give_tobacco_company_rights_SOLD_TT }
}

AGRI_give_tea_company_rights = {
	if = {
		limit = {
			var:nation_with_land = {
				var:nation_with_industry = {
					NOT = { has_country_flag = AGRI_tea_rights@PREV }
				}
			}
		}
		var:nation_with_land = {
			set_country_flag = {
				flag = AGRI_sold_rights_TEA
				value = 1
				days = 360
			}
			var:nation_with_industry = {
				hidden_effect = {
					set_country_flag = {
						flag = AGRI_tea_rights@PREV
						value = 1
						days = 360
					}
					var:nation_with_land = {
						set_country_flag = {
							flag = AGRI_tea_rights@PREV
							value = 1
							days = 360
						}
					}
				}
			}
		}
		custom_effect_tooltip = AGRI_give_tea_company_rights_SELLING_TT
	}
	else = { custom_effect_tooltip = AGRI_give_tea_company_rights_SOLD_TT }
}






# AGRI_drought_check = {
# 	if = {
# 		limit = {
# 			ROOT = {
# 				is_neighbor_of = THIS
# 			}
# 		}
# 	}
# }