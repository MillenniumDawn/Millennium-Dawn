@factory_cost = 10 # base 10
@size_per_factory = 1
@size_per_upgrade = 1
@size_impact_modifier = 0.1

@global_stats_list_length = 15

# CAC_add_company
# Required Input: cac_selected_company (int)
# Required Input: cac_company_type (int)

# Optional Inputs:
# cac_company_size (int)
# cac_company_value (float)
# cac_company_money (float)
# cac_company_factories (int)
# cac_company_income_per_factory (float)
# cac_company_expenses_per_factory (float)
# cac_company_additional_income (float)
# cac_company_additional_expenses (float)

# Purpose: Add the cac_selected_company to companys list
CAC_add_company = {    
    if = {
        limit = {
            check_variable = { CAC_companies^num < 11  }
        }

        custom_effect_tooltip = CAC_add_company_tt

        set_temp_variable = { company_slot_temp = CAC_companies^num }

        add_to_array = {
		    array = CAC_companies
			value = cac_selected_company
			index = company_slot_temp
		}

        add_to_array = {
		    array = CAC_companies_type
			value = cac_company_type
			index = company_slot_temp
		}

        add_to_array = {
            array = CAC_companies_size
            value = cac_company_size
            index = company_slot_temp
        }

        add_to_array = {
            array = CAC_companies_value
            value = cac_company_value
            index = company_slot_temp
        }

        add_to_array = {
            array = CAC_companies_money
            value = 0
            index = company_slot_temp
        }

        set_temp_variable = { cac_money_change = 10000 }
        set_temp_variable = { cac_slot = company_slot_temp }
        CAC_modify_money_effect = yes
        
        add_to_array = {
            array = CAC_companies_revenue
            value = 0
            index = company_slot_temp
        }

        add_to_array = {
            array = CAC_companies_factories
            value = 0
            index = company_slot_temp
        }

        if = {
            limit = { check_variable = { cac_company_factories = 0 } }

            set_temp_variable = { cac_company_factories = 1 }
        }

        set_temp_variable = { cac_factories_change = cac_company_factories }
        set_temp_variable = { cac_slot = company_slot_temp }
        CAC_modify_factories_effect = yes

        add_to_array = {
            array = CAC_companies_income_per_factory
            value = 0
            index = company_slot_temp
        }

        if = {
            limit = { check_variable = { cac_company_income_per_factory = 0 } }

            set_temp_variable = { cac_company_income_per_factory = 0.5 }
        }

        set_temp_variable = { cac_income_per_factory_change = cac_company_income_per_factory }
        set_temp_variable = { cac_slot = company_slot_temp }
        CAC_modify_income_per_factory_effect = yes

        add_to_array = {
            array = CAC_companies_expenses_per_factory
            value = 0
            index = company_slot_temp
        }

        if = {
            limit = { check_variable = { cac_company_expenses_per_factory = 0 } }

            set_temp_variable = { cac_company_expenses_per_factory = -0.35 }
        }

        set_temp_variable = { cac_expenses_per_factory_change = cac_company_expenses_per_factory }
        set_temp_variable = { cac_slot = company_slot_temp }
        CAC_modify_expenses_per_factory_effect = yes

        if = {
            limit = { 
                NOT = { check_variable = { cac_company_additional_income = 0 } } 
            }

            add_to_array = {
                array = CAC_companies_additional_income
                value = cac_company_additional_income
                index = company_slot_temp
            }
        }
        else = {
            add_to_array = {
                array = CAC_companies_additional_income
                value = 0
                index = company_slot_temp
            }
        }

        if = {
            limit = { 
                NOT = { check_variable = { cac_company_additional_expenses = 0 } } 
            }

            add_to_array = {
                array = CAC_companies_additional_expenses
                value = cac_company_additional_expenses
                index = company_slot_temp
            }
        }
        else = {
            add_to_array = {
                array = CAC_companies_additional_expenses
                value = 0
                index = company_slot_temp
            }
        }

        add_to_array = {
			array = CAC_companies_income
			value = 0.0
			index = selected_companies_num_temp
		}
        add_to_array = {
			array = CAC_companies_expenses
			value = 0.0
			index = selected_companies_num_temp
		}
        add_to_array = {
			array = CAC_companies_taxes
			value = 0.0
			index = selected_companies_num_temp
		}

        # ceo
        add_to_array = {
			array = CAC_companies_selected_ceo
			value = -1
			index = selected_companies_num_temp
		}

        add_to_array = {
			array = CAC_companies_selected_ceo_xp
			value = 0
			index = selected_companies_num_temp
		}

        add_to_array = {
			array = CAC_companies_selected_ceo_level
			value = 0
			index = selected_companies_num_temp
		}

        # company modifiers
        add_to_array = {
            array = CAC_companies_income_modifier
            value = 0
            index = company_slot_temp
        }
        add_to_array = {
            array = CAC_companies_expenses_modifier
            value = 0
            index = company_slot_temp
        }
        add_to_array = {
            array = CAC_companies_upgrade_cost_modifier
            value = 0
            index = company_slot_temp
        }
        add_to_array = {
            array = CAC_companies_factory_cost_modifier
            value = 0
            index = company_slot_temp
        }

        add_to_array = {
            array = CAC_companies_modifier_from_size
            value = 0
            index = company_slot_temp
        }

        # upgrades
        if = { 
            limit = { check_variable = { cac_company_type = 0 } } 
            
            set_temp_variable = { index = cac_selected_company }
            multiply_temp_variable = { index = 30 }
            add_to_temp_variable = { index = 0 }

            set_variable = { CAC_companies_upgrades_2d^index = 2 }

            set_temp_variable = { index = cac_selected_company }
            multiply_temp_variable = { index = 30 }
            add_to_temp_variable = { index = 11 }

            set_variable = { CAC_companies_upgrades_2d^index = 2 }
        }
        if = { 
            limit = { check_variable = { cac_company_type = 1 } } 
            
            set_temp_variable = { index = cac_selected_company }
            multiply_temp_variable = { index = 30 }
            add_to_temp_variable = { index = 0 }

            set_variable = { CAC_companies_upgrades_2d^index = 2 }

            set_temp_variable = { index = cac_selected_company }
            multiply_temp_variable = { index = 30 }
            add_to_temp_variable = { index = 11 }

            set_variable = { CAC_companies_upgrades_2d^index = 2 }
        }
    }
}

# WORK IN PROGRESS
# CAC_remove_company_by_slot
# Required Input: cac_slot (int)
# Purpose: Remove company on slot cac_slot
CAC_remove_company_by_slot = {
    if = {
        limit = {
            AND = {
                check_variable = { cac_slot > -1 }
                check_variable = { cac_slot < CAC_companies^num }
            }
        }

        custom_effect_tooltip = CAC_remove_company_tt

        remove_from_array = {
            array = CAC_companies_type
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_size
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_value
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_money
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_revenue
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_factories
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_income_per_factory
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_expenses_per_factory
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_additional_income
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_additional_expenses
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_income
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_expenses
            index = cac_slot
        }

        remove_from_array = {
            array = CAC_companies_taxes
            index = cac_slot
        }

        # Modifiers
        remove_from_array = {
            array = CAC_company_modifiers_political_power
            index = cac_slot
        }
        remove_from_array = {
            array = CAC_company_modifiers_consumer_goods
            index = cac_slot
        }

        # Reset Upgrades
        for_loop_effect = {
			start = 0
			end = 30
			value = upgrade_id

			set_temp_variable = { index = CAC_companies^cac_slot }
			multiply_temp_variable = { index = 30 }
			add_to_temp_variable = { index = upgrade_id }

            set_variable = { CAC_companies_upgrades_2d^index = 3 }
		}

        # Remove company
        remove_from_array = {
            array = CAC_companies
            index = cac_slot
        }
    }
}

# CAC_modify_money_effect
# Required Input: cac_money_change (float)
# Required Input: cac_slot (int)
# Purpose: Change company money on slot cac_slot by cac_money_change
CAC_modify_money_effect = {
    if = {
        limit = {
            AND = {
                check_variable = { cac_slot > -1 }
                check_variable = { cac_slot < CAC_companies^num }
            }
        }

        custom_effect_tooltip = CAC_modify_money_tt

        add_to_variable = { CAC_companies_money^cac_slot = cac_money_change }
        add_to_variable = { CAC_companies_value^cac_slot = cac_money_change }
        
        CAC_update_variables = yes
    }
}

# CAC_modify_factories_effect
# Required Input: cac_factories_change (int)
# Required Input: cac_slot (int)
# Optional Input: cac_ignore_value (int)
# Purpose: Change company factories on slot cac_slot by cac_factories_change
CAC_modify_factories_effect = {
    if = {
        limit = {
            AND = {
                check_variable = { cac_slot > -1 }
                check_variable = { cac_slot < CAC_companies^num }
            }
        }

        custom_effect_tooltip = CAC_modify_factories_tt

        set_temp_variable = { size_change_temp = cac_factories_change }
        multiply_temp_variable = { size_change_temp = @size_per_factory }

        add_to_variable = { CAC_companies_factories^cac_slot = cac_factories_change }
        add_to_variable = { CAC_companies_size^cac_slot = size_change_temp }

        CAC_update_variables = yes

        if = {
            limit = { check_variable = { cac_ignore_value = 0 } }

            set_temp_variable = { value_change_temp = cac_factories_change }
            multiply_temp_variable = { value_change_temp = @factory_cost }
            add_to_variable = { CAC_companies_value^cac_slot = value_change_temp }
        }
    }
}

# CAC_modify_value_effect
# Required Input: cac_value_change (float)
# Required Input: cac_slot (int)
# Purpose: Change company value on slot cac_slot by cac_value_change
CAC_modify_value_effect = {
    if = {
        limit = {
            AND = {
                check_variable = { cac_slot > -1 }
                check_variable = { cac_slot < CAC_companies^num }
            }
        }

        custom_effect_tooltip = CAC_modify_value_tt

        add_to_variable = { CAC_companies_value^cac_slot = cac_value_change }
        CAC_update_variables = yes
    }
}

# CAC_modify_additional_income_effect
# Required Input: cac_additional_income_change (float)
# Required Input: cac_slot (int)
# Purpose: Change company additional income on slot cac_slot by cac_additional_income_change
CAC_modify_additional_income_effect = {
    if = {
        limit = {
            AND = {
                check_variable = { cac_slot > -1 }
                check_variable = { cac_slot < CAC_companies^num }
            }
        }

        custom_effect_tooltip = CAC_modify_additional_income_tt

        add_to_variable = { CAC_companies_additional_income^cac_slot = cac_additional_income_change }
        CAC_update_variables = yes
    }
}

# CAC_modify_additional_expenses_effect
# Required Input: cac_additional_expenses_change (float)
# Required Input: cac_slot (int)
# Purpose: Change company additional expenses on slot cac_slot by cac_additional_expenses_change
CAC_modify_additional_expenses_effect = {
    if = {
        limit = {
            AND = {
                check_variable = { cac_slot > -1 }
                check_variable = { cac_slot < CAC_companies^num }
            }
        }

        custom_effect_tooltip = CAC_modify_additional_expenses_tt

        add_to_variable = { CAC_companies_additional_expenses^cac_slot = cac_additional_expenses_change }
        CAC_update_variables = yes
    }
}

# CAC_modify_income_per_factory_effect
# Required Input: cac_income_per_factory_change (float)
# Required Input: cac_slot (int)
# Purpose: Change company factory income on slot cac_slot by cac_income_per_factory_change
CAC_modify_income_per_factory_effect = {
    if = {
        limit = {
            AND = {
                check_variable = { cac_slot > -1 }
                check_variable = { cac_slot < CAC_companies^num }
            }
        }

        custom_effect_tooltip = CAC_modify_income_per_factory_tt

        add_to_variable = { CAC_companies_income_per_factory^cac_slot = cac_income_per_factory_change }

        CAC_update_variables = yes
    }
}

# CAC_modify_expenses_per_factory_effect
# Required Input: cac_expenses_per_factory_change (float)
# Required Input: cac_slot (int)
# Purpose: Change company factory expenses on slot cac_slot by cac_expenses_per_factory_change
CAC_modify_expenses_per_factory_effect = {
    if = {
        limit = {
            AND = {
                check_variable = { cac_slot > -1 }
                check_variable = { cac_slot < CAC_companies^num }
            }
        }

        custom_effect_tooltip = CAC_modify_expenses_per_factory_tt

        add_to_variable = { CAC_companies_expenses_per_factory^cac_slot = cac_expenses_per_factory_change }

        CAC_update_variables = yes
    }
}

# CAC_modify_size_effect
# Required Input: cac_size_change (float)
# Required Input: cac_slot (int)
# Purpose: Change company factory size on slot cac_slot by cac_size_change
CAC_modify_size_effect = {
    if = {
        limit = {
            AND = {
                check_variable = { cac_slot > -1 }
                check_variable = { cac_slot < CAC_companies^num }
            }
        }

        custom_effect_tooltip = CAC_modify_size_tt

        add_to_variable = { CAC_companies_size^cac_slot = cac_size_change }

        CAC_update_variables = yes
    }
}

# CAC_modify_upgrade_status_effect
# Required Input: cac_slot (int)
# Required Input: cac_upgrade (int)
# Required Input: cac_new_status (int) 1 - completed 2 - available 3 - blocked
# Purpose: Change company factory expenses on slot cac_slot by cac_upgrade
CAC_modify_upgrade_status_effect = {
    if = {
        limit = {
            AND = {
                check_variable = { cac_slot > -1 }
                check_variable = { cac_slot < CAC_companies^num }
            }
        }

        set_temp_variable = { index = cac_slot }
		multiply_temp_variable = { index = 30 }
		add_to_temp_variable = { index = cac_upgrade }

		set_variable = { CAC_companies_upgrades_2d^index = cac_new_status }

        if = {
            limit = { check_variable = { cac_new_status = 1 } }
            #custom_effect_tooltip = CAC_modify_upgrade_status_1_tt
        }
        else_if = {
            limit = { check_variable = { cac_new_status = 2 } }
            #custom_effect_tooltip = CAC_modify_upgrade_status_2_tt
        }
        else_if = {
            limit = { check_variable = { cac_new_status = 3 } }
            #custom_effect_tooltip = CAC_modify_upgrade_status_3_tt
        }
    }
}

# MODIFIERS

# CAC_modify_modifier_political_power_effect
# Required Input: cac_modifier_political_power_change (float)
# Purpose: Change company political power modifier by cac_modifier_political_power_change
CAC_modify_modifier_political_power_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_political_power_tt
    add_to_variable = { CAC_modifier_political_power = cac_modifier_political_power_change }
}

# CAC_modify_modifier_opinion_gain_effect
# Required Input: cac_modifier_opinion_gain_change (float)
# Purpose: Change company opinion gain modifier by cac_modifier_opinion_gain_change
CAC_modify_modifier_opinion_gain_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_opinion_gain_tt
    add_to_variable = { CAC_modifier_opinion_gain = cac_modifier_opinion_gain_change }
}

# CAC_modify_modifier_consumer_goods_effect
# Required Input: cac_modifier_consumer_goods_change (float)
# Purpose: Change company consumer goods modifier by cac_modifier_consumer_goods_change
CAC_modify_modifier_consumer_goods_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_consumer_goods_tt
    add_to_variable = { CAC_modifier_consumer_goods = cac_modifier_consumer_goods_change }
}

# CAC_modify_modifier_total_workforce_effect
# Required Input: cac_modifier_total_workforce_change (float)
# Purpose: Change company total workforce modifier by cac_modifier_total_workforce_change
CAC_modify_modifier_total_workforce_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_total_workforce_tt
    add_to_variable = { CAC_modifier_total_workforce = cac_modifier_total_workforce_change }
}

# CAC_modify_office_park_income_tax_effect
# Required Input: cac_modifier_office_park_income_tax_change (float)
# Purpose: Change company office park income tax modifier by cac_modifier_office_park_income_tax_change
CAC_modify_office_park_income_tax_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_office_park_income_tax_tt
    add_to_variable = { CAC_modifier_office_park_income_tax = cac_modifier_office_park_income_tax_change }
}

# CAC_modify_modifier_interest_rate_multiplier_effect
# Required Input: cac_modifier_interest_rate_multiplier_change (int)
# Purpose: Change company interest rate multiplier modifier by cac_modifier_interest_rate_multiplier_change
CAC_modify_modifier_interest_rate_multiplier_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_interest_rate_multiplier_tt
    add_to_variable = { CAC_modifier_interest_rate_multiplier = cac_modifier_interest_rate_multiplier_change }
}

# CAC_modify_modifier_health_cost_effect
# Required Input: cac_modifier_health_cost_change (float)
# Purpose: Change company health cost modifier by cac_modifier_health_cost_change
CAC_modify_modifier_health_cost_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_health_cost_tt
    add_to_variable = { CAC_modifier_health_cost = cac_modifier_health_cost_change }
}

# CAC_modify_modifier_investment_cost_effect
# Required Input: cac_modifier_investment_cost_change (float)
# Purpose: Change company investment cost modifier by cac_modifier_investment_cost_change
CAC_modify_modifier_investment_cost_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_investment_cost_tt
    add_to_variable = { CAC_modifier_investment_cost = cac_modifier_investment_cost_change }
}

# CAC_modify_modifier_productivity_growth_effect
# Required Input: cac_modifier_productivity_growth_change (float)
# Purpose: Change company productivity growth modifier by cac_modifier_productivity_growth_change
CAC_modify_modifier_productivity_growth_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_productivity_growth_tt
    add_to_variable = { CAC_modifier_productivity_growth = cac_modifier_productivity_growth_change }
}

# CAC_modify_modifier_energy_gain_effect
# Required Input: cac_modifier_energy_gain_change (float)
# Purpose: Change company energy gain modifier by cac_modifier_energy_gain_change
CAC_modify_modifier_energy_gain_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_energy_gain_tt
    add_to_variable = { CAC_modifier_energy_gain = cac_modifier_energy_gain_change }
}

# CAC_modify_modifier_renewable_energy_gain_effect
# Required Input: cac_modifier_renewable_energy_gain_change (float)
# Purpose: Change company renewable energy gain modifier by cac_modifier_renewable_energy_gain_change
CAC_modify_modifier_renewable_energy_gain_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_renewable_energy_gain_tt
    add_to_variable = { CAC_modifier_renewable_energy_gain = cac_modifier_renewable_energy_gain_change }
}

# CAC_modify_modifier_fossil_pp_energy_generation_effect
# Required Input: cac_modifier_fossil_pp_energy_generation_change (float)
# Purpose: Change company fossil PP energy generation modifier by cac_modifier_fossil_pp_energy_generation_change
CAC_modify_modifier_fossil_pp_energy_generation_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_fossil_pp_energy_generation_tt
    add_to_variable = { CAC_modifier_fossil_pp_energy_generation = cac_modifier_fossil_pp_energy_generation_change }
}

# CAC_modify_modifier_nuclear_energy_generation_effect
# Required Input: cac_modifier_nuclear_energy_generation_change (float)
# Purpose: Change company nuclear energy generation modifier by cac_modifier_nuclear_energy_generation_change
CAC_modify_modifier_nuclear_energy_generation_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_nuclear_energy_generation_tt
    add_to_variable = { CAC_modifier_nuclear_energy_generation = cac_modifier_nuclear_energy_generation_change }
}

# CAC_modify_modifier_energy_use_effect
# Required Input: cac_modifier_energy_use_change (float)
# Purpose: Change company energy use modifier by cac_modifier_energy_use_change
CAC_modify_modifier_energy_use_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_energy_use_tt
    add_to_variable = { CAC_modifier_energy_use = cac_modifier_energy_use_change }
}

# CAC_modify_modifier_pop_energy_use_effect
# Required Input: cac_modifier_pop_energy_use_change (float)
# Purpose: Change company pop energy use modifier by cac_modifier_pop_energy_use_change
CAC_modify_modifier_pop_energy_use_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_pop_energy_use_tt
    add_to_variable = { CAC_modifier_pop_energy_use = cac_modifier_pop_energy_use_change }
}

# CAC_modify_modifier_production_factory_efficiency_gain_effect
# Required Input: cac_modifier_production_factory_efficiency_gain_change (float)
# Purpose: Change company factory efficiency gain modifier by cac_modifier_production_factory_efficiency_gain_change
CAC_modify_modifier_production_factory_efficiency_gain_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_production_factory_efficiency_gain_tt
    add_to_variable = { CAC_modifier_production_factory_efficiency_gain = cac_modifier_production_factory_efficiency_gain_change }
}

# CAC_modify_modifier_production_factory_max_efficiency_effect
# Required Input: cac_modifier_production_factory_max_efficiency_change (float)
# Purpose: Change company factory max efficiency modifier by cac_modifier_production_factory_max_efficiency_change
CAC_modify_modifier_production_factory_max_efficiency_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_production_factory_max_efficiency_tt
    add_to_variable = { CAC_modifier_production_factory_max_efficiency = cac_modifier_production_factory_max_efficiency_change }
}

# CAC_modify_modifier_production_lack_of_resource_penalty_effect
# Required Input: cac_modifier_production_lack_of_resource_penalty_change (float)
# Purpose: Change company lack of resource penalty modifier by cac_modifier_production_lack_of_resource_penalty_change
CAC_modify_modifier_production_lack_of_resource_penalty_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_production_lack_of_resource_penalty_tt
    add_to_variable = { CAC_modifier_production_lack_of_resource_penalty = cac_modifier_production_lack_of_resource_penalty_change }
}

# CAC_modify_modifier_industrial_capacity_factory_effect
# Required Input: cac_modifier_industrial_capacity_factory_change (float)
# Purpose: Change company industrial capacity (factory) modifier by cac_modifier_industrial_capacity_factory_change
CAC_modify_modifier_industrial_capacity_factory_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_industrial_capacity_factory_tt
    add_to_variable = { CAC_modifier_industrial_capacity_factory = cac_modifier_industrial_capacity_factory_change }
}

# CAC_modify_modifier_industrial_capacity_dockyard_effect
# Required Input: cac_modifier_industrial_capacity_dockyard_change (float)
# Purpose: Change company industrial capacity (dockyard) modifier by cac_modifier_industrial_capacity_dockyard_change
CAC_modify_modifier_industrial_capacity_dockyard_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_industrial_capacity_dockyard_tt
    add_to_variable = { CAC_modifier_industrial_capacity_dockyard = cac_modifier_industrial_capacity_dockyard_change }
}

# CAC_modify_modifier_production_speed_buildings_effect
# Required Input: cac_modifier_production_speed_buildings_change (float)
# Purpose: Change company production speed (buildings) modifier by cac_modifier_production_speed_buildings_change
CAC_modify_modifier_production_speed_buildings_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_production_speed_buildings_tt
    add_to_variable = { CAC_modifier_production_speed_buildings = cac_modifier_production_speed_buildings_change }
}

# CAC_modify_modifier_production_speed_industrial_complex_effect
# Required Input: cac_modifier_production_speed_industrial_complex_change (float)
# Purpose: Change company production speed (industrial complex) modifier by cac_modifier_production_speed_industrial_complex_change
CAC_modify_modifier_production_speed_industrial_complex_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_production_speed_industrial_complex_tt
    add_to_variable = { CAC_modifier_production_speed_industrial_complex = cac_modifier_production_speed_industrial_complex_change }
}

# CAC_modify_modifier_trade_opinion_effect
# Required Input: cac_modifier_trade_opinion_change (float)
# Purpose: Change company trade opinion modifier by cac_modifier_trade_opinion_change
CAC_modify_modifier_trade_opinion_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_trade_opinion_tt
    add_to_variable = { CAC_modifier_trade_opinion = cac_modifier_trade_opinion_change }
}

# CAC_modify_modifier_min_export_effect
# Required Input: cac_modifier_min_export_change (float)
# Purpose: Change company minimum export modifier by cac_modifier_min_export_change
CAC_modify_modifier_min_export_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_min_export_tt
    add_to_variable = { CAC_modifier_min_export = cac_modifier_min_export_change }
}

# CAC_modify_modifier_country_resource_oil_effect
# Required Input: cac_modifier_country_resource_oil_change (float)
# Purpose: Change company oil resource modifier by cac_modifier_country_resource_oil_change
CAC_modify_modifier_country_resource_oil_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_country_resource_oil_tt
    add_to_variable = { CAC_modifier_country_resource_oil = cac_modifier_country_resource_oil_change }
}

# CAC_modify_modifier_country_resource_aluminium_effect
# Required Input: cac_modifier_country_resource_aluminium_change (float)
# Purpose: Change company aluminium resource modifier by cac_modifier_country_resource_aluminium_change
CAC_modify_modifier_country_resource_aluminium_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_country_resource_aluminium_tt
    add_to_variable = { CAC_modifier_country_resource_aluminium = cac_modifier_country_resource_aluminium_change }
}

# CAC_modify_modifier_country_resource_rubber_effect
# Required Input: cac_modifier_country_resource_rubber_change (float)
# Purpose: Change company rubber resource modifier by cac_modifier_country_resource_rubber_change
CAC_modify_modifier_country_resource_rubber_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_country_resource_rubber_tt
    add_to_variable = { CAC_modifier_country_resource_rubber = cac_modifier_country_resource_rubber_change }
}

# CAC_modify_modifier_country_resource_tungsten_effect
# Required Input: cac_modifier_country_resource_tungsten_change (float)
# Purpose: Change company tungsten resource modifier by cac_modifier_country_resource_tungsten_change
CAC_modify_modifier_country_resource_tungsten_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_country_resource_tungsten_tt
    add_to_variable = { CAC_modifier_country_resource_tungsten = cac_modifier_country_resource_tungsten_change }
}

# CAC_modify_modifier_country_resource_steel_effect
# Required Input: cac_modifier_country_resource_steel_change (float)
# Purpose: Change company steel resource modifier by cac_modifier_country_resource_steel_change
CAC_modify_modifier_country_resource_steel_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_country_resource_steel_tt
    add_to_variable = { CAC_modifier_country_resource_steel = cac_modifier_country_resource_steel_change }
}

# CAC_modify_modifier_country_resource_chromium_effect
# Required Input: cac_modifier_country_resource_chromium_change (float)
# Purpose: Change company chromium resource modifier by cac_modifier_country_resource_chromium_change
CAC_modify_modifier_country_resource_chromium_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_country_resource_chromium_tt
    add_to_variable = { CAC_modifier_country_resource_chromium = cac_modifier_country_resource_chromium_change }
}

# CAC_modify_modifier_fuel_gain_effect
# Required Input: cac_modifier_fuel_gain_change (float)
# Purpose: Change company fuel gain modifier by cac_modifier_fuel_gain_change
CAC_modify_modifier_fuel_gain_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_fuel_gain_tt
    add_to_variable = { CAC_modifier_fuel_gain = cac_modifier_fuel_gain_change }
}

# CAC_modify_modifier_research_speed_effect
# Required Input: cac_modifier_research_speed_change (float)
# Purpose: Change company research speed modifier by cac_modifier_research_speed_change
CAC_modify_modifier_research_speed_effect = {
    custom_effect_tooltip = CAC_modify_modifiers_research_speed_tt
    add_to_variable = { CAC_modifier_research_speed = cac_modifier_research_speed_change }
}

# CAC_select_ceo_effect
# Required Input: cac_selected_ceo (int)
# Required Input: cac_slot (int)
# Purpose: Change company factory expenses on slot cac_slot by cac_upgrade
CAC_select_ceo_effect = {
    if = {
        limit = {
            AND = {
                check_variable = { cac_slot > -1 }
                check_variable = { cac_slot < CAC_companies^num }
            }
        }

        if = {
            limit = { CAC_companies_selected_ceo^cac_slot > -1 }

            if = {
                limit = { check_variable = { CAC_companies_selected_ceo^cac_slot = 0 } }

                add_to_variable = { CAC_companies_additional_expenses^cac_slot = 0.02 }
            }
            else_if = {
                limit = { check_variable = { CAC_companies_selected_ceo^cac_slot = 1 } }

                add_to_variable = { CAC_companies_additional_expenses^cac_slot = 0.03 }
            }
            else_if = {
                limit = { check_variable = { CAC_companies_selected_ceo^cac_slot = 2 } }

                add_to_variable = { CAC_companies_additional_expenses^cac_slot = 0.04 }
            }
            else_if = {
                limit = { check_variable = { CAC_companies_selected_ceo^cac_slot = 3 } }

                add_to_variable = { CAC_companies_additional_expenses^cac_slot = 0.05 }
            }
        }

        set_variable = { CAC_companies_selected_ceo^cac_slot = cac_selected_ceo }
        set_variable = { CAC_companies_selected_ceo_level^cac_slot = 0 }
        set_variable = { CAC_companies_selected_ceo_xp^cac_slot = 0 }

        if = {
            limit = { check_variable = { cac_selected_ceo = 0 } }

            add_to_variable = { CAC_companies_additional_expenses^cac_slot = -0.02 }
            add_to_variable = { CAC_companies_upgrade_cost_modifier^cac_slot = -0.15 }
        }
        else_if = {
            limit = { check_variable = { cac_selected_ceo = 1 } }

            add_to_variable = { CAC_companies_additional_expenses^cac_slot = -0.03 }
            add_to_variable = { CAC_companies_expenses_modifier^cac_slot = -0.15 }
        }
        else_if = {
            limit = { check_variable = { cac_selected_ceo = 2 } }

            add_to_variable = { CAC_companies_additional_expenses^cac_slot = -0.04 }
            add_to_variable = { CAC_companies_factory_cost_modifier^cac_slot = -0.1 }
        }
        else_if = {
            limit = { check_variable = { cac_selected_ceo = 3 } }

            add_to_variable = { CAC_companies_additional_expenses^cac_slot = -0.05 }
            add_to_variable = { CAC_companies_income_modifier^cac_slot = 0.15 }
        }
    }
}

CAC_update_variables = {
    if = {
        limit = {
            check_variable = { CAC_companies^num > 0 }
        }

        for_loop_effect = {
            start = 0
            end = CAC_companies^num
            value = i

            set_variable = { CAC_companies_modifier_from_size^i = 1 }

            set_temp_variable = { size_impact_modifier = CAC_companies_size^i }
            multiply_temp_variable = { size_impact_modifier = @size_impact_modifier }

            add_to_variable = { CAC_companies_modifier_from_size^i = size_impact_modifier }

            set_temp_variable = { company_income_temp = CAC_companies_factories^i }
            multiply_temp_variable = { company_income_temp = CAC_companies_income_per_factory^i }
            add_to_temp_variable = { company_income_temp = CAC_companies_additional_income^i }

            set_temp_variable = { company_income_modifiers = 1 }
            add_to_temp_variable = { company_income_modifiers = modifier@companies_income_modifier }
            add_to_temp_variable = { company_income_modifiers = CAC_companies_income_modifier^i }

            multiply_temp_variable = { company_income_temp = company_income_modifiers }

            multiply_temp_variable = { company_income_temp = companies_manpower_fulfillment }

            set_variable = { CAC_companies_income^i = company_income_temp }

            set_temp_variable = { company_expenses_temp = CAC_companies_factories^i }
            multiply_temp_variable = { company_expenses_temp = CAC_companies_expenses_per_factory^i }
            add_to_temp_variable = { company_expenses_temp = CAC_companies_additional_expenses^i }
            
            set_temp_variable = { company_expenses_modifiers = 1 }
            add_to_temp_variable = { company_expenses_modifiers = modifier@companies_expenses_modifier }
            add_to_temp_variable = { company_expenses_modifiers = CAC_companies_expenses_modifier^i }

            multiply_temp_variable = { company_expenses_temp = company_expenses_modifiers }

            multiply_temp_variable = { company_expenses_temp = companies_manpower_fulfillment }

            set_variable = { CAC_companies_expenses^i = company_expenses_temp }

            set_variable = { CAC_companies_revenue^i = CAC_companies_income^i }
            add_to_variable = { CAC_companies_revenue^i = CAC_companies_expenses^i }

            # taxes :(
            if = {
                limit = {
                    check_variable = { CAC_companies_revenue^i > 0 }
                }

                set_variable = { CAC_companies_taxes^i = CAC_companies_revenue^i }

                multiply_variable = { CAC_companies_taxes^i = corporate_tax_rate }
                divide_variable = { CAC_companies_taxes^i = -100 }

                set_temp_variable = { company_taxes_modifiers = 1 }
                add_to_temp_variable = { company_taxes_modifiers = modifier@companies_taxes_modifier }

                multiply_variable = { CAC_companies_taxes^i = company_taxes_modifiers }
            }
            else = {
                set_variable = { CAC_companies_taxes^i = 0 }
            }

            add_to_variable = { CAC_companies_revenue^i = CAC_companies_taxes^i }
        }
    }
}

CAC_update_upkeep = {
    if = {
        limit = {
            check_variable = { CAC_companies^num > 0 }
        }

        CAC_update_variables = yes

        for_loop_effect = {
            start = 0
            end = CAC_companies^num
            value = i

            set_temp_variable = { company_new_money = CAC_companies_revenue^i }
            add_to_temp_variable = { company_new_money = CAC_companies_money^i }

            if = {
                limit = {
                    check_variable = { company_new_money < 0 }
                }

                set_variable = { CAC_companies_money^i = 0 }

                set_temp_variable = { new_value = CAC_companies_value^i }
                add_to_temp_variable = { new_value = company_new_money }

                if = {
                    limit = { check_variable = { new_value < 0 } }

                    add_to_variable = { CAC_companies_value^i = 0 }

                    ROOT = {
                        country_event = {
                            id = CAC_event.1
                            days = 7
                        }
                    }
                }
                else = {
                    add_to_variable = { CAC_companies_value^i = company_new_money }
                }

            }
            else = {
                add_to_variable = { CAC_companies_money^i = CAC_companies_revenue^i }
                add_to_variable = { CAC_companies_value^i = CAC_companies_revenue^i }
            }
        }
    }
}

# TODO
CAC_update_global_stats = {
    clear_array = CAC_global_companies

    every_country = {
        
    }
    #CAC_global_companies
    #global_stats_list_length
}

CAC_save_history = {
    for_loop_effect = {
        start = 0
        end = CAC_companies^num
        value = i

        # Save company history
    }
}