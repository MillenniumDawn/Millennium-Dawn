on_actions = {
	# NEPAD Africa
	on_daily_FRA = {
		effect = {
			if = {
				limit = {
					FRA = { has_completed_focus = FRA_NEPAD_development }
					NOT = { has_global_flag = AFRICA_nepad_focus }
					NOT = { has_country_flag = FRA_nepad_cleanup }
					FRA = { has_dynamic_modifier = { modifier = FRA_idea_nepad_modifier } }
				}
				set_country_flag = FRA_nepad_cleanup
				every_other_country = {
					limit = {
						is_african_nation = yes
						has_dynamic_modifier = {
							modifier = AFRICA_idea_nepad_modifier
						}
					}
					remove_dynamic_modifier = { modifier = AFRICA_idea_nepad_modifier }
					ingame_update_setup = yes
				}
				FRA = {
					remove_dynamic_modifier = { modifier = FRA_idea_nepad_modifier }
					clear_variable = FRA_nepad_sponsor_weekly_cost
					ingame_update_setup = yes
				}

				# NEPAD Variables
				clear_variable = global.africa_nepad_building_construction_modifier
				clear_variable = global.africa_nepad_education_modifier
				clear_variable = global.africa_nepad_social_care_modifier
				clear_variable = global.africa_nepad_health_cost_modifier
			}
		}
	}

	on_weekly_FRA = {
		effect = {
			if = {
				limit = {
					has_country_flag = FRA_new_frontiers
					has_completed_focus = FRA_the_space_program
				}
				# Passive Reductio
				add_to_variable = { FRA.FRA_peoples_support = -0.1 }
			}
			clamp_variable = { var = FRA.FRA_peoples_support min = 0 max = 100 }
			# building mission(s)
			# this is the key part:
			# use a scripted trigger to check factory count
			if = {
				limit = {  # can only occur once per game (?)
					has_country_flag = FRA_timed_mission
					has_completed_focus = FRA_begin_timed_mission
				}
				# hardcoded for testing, TODO
				# set to foreach etc. in FRA.states_building_mission_array
				# 54 = {
				# 	# set_temp_variable = { factories_now = THIS.building_level@industrial_complex }
				# 	# subtract_from_temp_variable = { factories_now = FRA.num_beginning_factories }
				# 	# playing with non-temp variable for tooltip
				# 	set_temp_variable = { FRA.factories_now = THIS.building_level@industrial_complex }
				# 	subtract_from_temp_variable = { FRA.factories_now = FRA.num_beginning_factories }
				# 	if = {
				# 		limit = { check_variable = { FRA.factories_now >= 5 } }
				# 		set_country_flag = FRA_buildings_built
				# 	}
				# }
				# TESTING
				set_temp_variable = { FRA.factories_now = 0 }
				54 = { add_to_temp_variable = { FRA.factories_now = THIS.building_level@industrial_complex } }
				305 = { add_to_temp_variable = { FRA.factories_now = THIS.building_level@industrial_complex } }
				subtract_from_temp_variable = { FRA.factories_now = FRA.num_beginning_factories }

				# FRA_french_construction_decision_category_desc = "We need to build at least §G5 new civilian factories§! within a year.\n\nFactories built: §R[?FRA.factories_now]§!"
				# FRA_build_factories_mission_success_tt = "To appease our base, we must meet our promises on building factories in time!\n\nFactories at mission start: [?FRA.num_beginning_factories]\nFactories built: [?FRA.factories_now]"
				# if = {
				# 	limit = { check_variable = { FRA.factories_now >= 5 } }
				# 	set_country_flag = FRA_buildings_built
				# }
			}
		}
	}
}
