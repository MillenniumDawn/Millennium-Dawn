# monthly on_action by Yard1
on_actions = {
	on_startup = { # on_daily is executed before on_startup
		effect = {
			add_to_variable = { global.next_month = 1 }
		}
	}
	on_daily = {
		effect = {
			if = {
				limit = { NOT = { has_country_flag = has_done_intro_startup } }
				startup_extra_setup = yes
				set_country_flag = has_done_intro_startup
			}
		}
	}

	on_weekly = {
		effect = {
			every_controlled_state = {
				add_to_variable = { ROOT.office_park_total = building_level@offices }
			}
			automated_debt_taker = yes
		}
	}
	# this is executed on the 1st of every month FOR ONE RANDOM COUNTRY - use every_country inside
	on_monthly = {
		effect = {
			random_country = {
				if = {
					limit = { NOT = { has_global_flag = on_monthly_done } }
					add_to_variable = { global.month = 1 }
					add_to_variable = { global.next_month = 1 }
					set_global_flag = { flag = on_monthly_done value = 1 days = 27 }
					if = {
						limit = { check_variable = { global.month > 12 } }
						set_variable = { global.month = 1 }
					}
					if = {
						limit = { check_variable = { global.next_month > 12 } }
						set_variable = { global.next_month = 1 }
						set_global_flag = { flag = on_monthly_done value = 1 days = 30 }
					}
				}
			}
			set_power_ranking_ideas_for_every_country = yes
			country_event = { id = low_stability.1 }

			ingame_calculate_size_modifier = yes #updates economics if new factories has been added
			recalculate_party = yes
			recalculate_law_desires = yes
			if = {
				limit = {
					can_upgrade_gdp = yes
					NOT = { has_country_flag = Max_GDPC }
					has_global_flag = do_not_do_on_day_one
				}
				Update_GDPC = yes
				if = {
					limit = { is_ai = no }
					news_event = { id = GDPC_Update.1 } #informs that you didn't do it :P
				}
			}

			#player only updates
			if = { limit = { is_ai = no }
				update_military_rate = yes
				2017_state_init_setup = yes		#updates all player states if population has grown enough
				set_global_flag = do_not_do_on_day_one
			}

			add_to_variable = { treasury = treasury_rate }
			#Automated taking debt
			automated_debt_taker = yes
		}
	}
}